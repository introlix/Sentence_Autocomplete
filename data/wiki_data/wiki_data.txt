Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation.Python is dynamically typed and garbage-collected. It supports multiple programming paradigms, including structured (particularly procedural), object-oriented and functional programming. It is often described as a "batteries included" language due to its comprehensive standard library.Guido van Rossum began working on Python in the late 1980s as a successor to the ABC programming language and first released it in 1991 as Python 0.9.0. Python 2.0 was released in 2000. Python 3.0, released in 2008, was a major revision not completely backward-compatible with earlier versions. Python 2.7.18, released in 2020, was the last release of Python 2.Python consistently ranks as one of the most popular programming languages, and has gained widespread use in the machine learning community.


== History ==

Python was invented in the late 1980s by Guido van Rossum at Centrum Wiskunde & Informatica (CWI) in the Netherlands as a successor to the ABC programming language, which was inspired by SETL, capable of exception handling and interfacing with the Amoeba operating system. Its implementation began in December 1989. Van Rossum shouldered sole responsibility for the project, as the lead developer, until 12 July 2018, when he announced his "permanent vacation" from his responsibilities as Python's "benevolent dictator for life", a title the Python community bestowed upon him to reflect his long-term commitment as the project's chief decision-maker. In January 2019, active Python core developers elected a five-member Steering Council to lead the project.Python 2.0 was released on 16 October 2000, with many major new features such as list comprehensions, cycle-detecting garbage collection, reference counting, and Unicode support. Python 3.0, released on 3 December 2008, with many of its major features backported to Python 2.6.x and 2.7.x. Releases of Python 3 include the 2to3 utility, which automates the translation of Python 2 code to Python 3.Python 2.7's end-of-life was initially set for 2015, then postponed to 2020 out of concern that a large body of existing code could not easily be forward-ported to Python 3. No further security patches or other improvements will be released for it. Currently only 3.8 and later are supported (2023 security issues were fixed in e.g. 3.7.17, the final 3.7.x release). While Python 2.7 and older is officially unsupported, a different unofficial Python implementation, PyPy, continues to support Python 2, i.e. "2.7.18+" (plus 3.9 and 3.10), with the plus meaning (at least some) "backported security updates".In 2021 (and again twice in 2022), security updates were expedited, since all Python versions were insecure (including 2.7) because of security issues leading to possible remote code execution and web-cache poisoning. In 2022, Python 3.10.4 and 3.9.12 were expedited and 3.8.13, because of many security issues. When Python 3.9.13 was released in May 2022, it was announced that the 3.9 series (joining the older series 3.8 and 3.7) would only receive security fixes in the future. On 7 September 2022, four new releases were made due to a potential denial-of-service attack: 3.10.7, 3.9.14, 3.8.14, and 3.7.14.As of October 2023, Python 3.12 is the stable release, and 3.12 and 3.11 are the only versions with active (as opposed to just security) support. Notable changes in 3.11 from 3.10 include increased program execution speed and improved error reporting.Python 3.12 adds syntax (and in fact every Python since at least 3.5 adds some syntax) to the language, the new (soft) keyword type (recent releases have added a lot of typing support e.g. new type union operator in 3.10), and 3.11 for exception handling, and 3.10 the match and case (soft) keywords, for structural pattern matching statements. Python 3.12 also drops outdated modules and functionality, and future versions will too, see below in Development section.
Python 3.11 claims to be between 10 and 60% faster than Python 3.10, and Python 3.12 adds another 5% on top of that. It also has improved error messages, and many other changes.
Since 27 June 2023, Python 3.8 is the oldest supported version of Python (albeit in the 'security support' phase), due to Python 3.7 reaching end-of-life.


== Design philosophy and features ==
Python is a multi-paradigm programming language. Object-oriented programming and structured programming are fully supported, and many of their features support functional programming and aspect-oriented programming (including metaprogramming and metaobjects). Many other paradigms are supported via extensions, including design by contract and logic programming.Python uses dynamic typing and a combination of reference counting and a cycle-detecting garbage collector for memory management. It uses dynamic name resolution (late binding), which binds method and variable names during program execution.
Its design offers some support for functional programming in the Lisp tradition. It has filter,mapandreduce functions; list comprehensions, dictionaries, sets, and generator expressions. The standard library has two modules (itertools and functools) that implement functional tools borrowed from Haskell and Standard ML.Its core philosophy is summarized in the Zen of Python (PEP 20), which includes aphorisms such as:
Beautiful is better than ugly.
Explicit is better than implicit.
Simple is better than complex.
Complex is better than complicated.
Readability counts.However, Python features regularly violate these principles and received criticism for adding unnecessary language bloat. Responses to these criticisms are that the Zen of Python is a guideline rather than a rule. The addition of some new features had been so controversial that Guido van Rossum resigned as Benevolent Dictator for Life following vitriol over the addition of the assignment expression operator in Python 3.8.Nevertheless, rather than building all of its functionality into its core, Python was designed to be highly extensible via modules. This compact modularity has made it particularly popular as a means of adding programmable interfaces to existing applications. Van Rossum's vision of a small core language with a large standard library and easily extensible interpreter stemmed from his frustrations with ABC, which espoused the opposite approach.Python claims to strive for a simpler, less-cluttered syntax and grammar while giving developers a choice in their coding methodology. In contrast to Perl's "there is more than one way to do it" motto, Python embraces a "there should be one—and preferably only one—obvious way to do it."  philosophy. In practice, however, Python provides many ways to achieve the same task. There are, for example, at least three ways to format a string literal, with no certainty as to which one a programmer should use. Alex Martelli, a Fellow at the Python Software Foundation and Python book author, wrote: "To describe something as 'clever' is not considered a compliment in the Python culture."Python's developers usually strive to avoid premature optimization and reject patches to non-critical parts of the CPython reference implementation that would offer marginal increases in speed at the cost of clarity. Execution speed can be improved by moving speed-critical functions to extension modules written in languages such as C, or by using a just-in-time compiler like PyPy. It is also possible to cross-compile to other languages, but it either doesn't provide the full speed-up that might be expected, since Python is a very dynamic language, or a restricted subset of Python is compiled, and possibly semantics are slightly changed.Python's developers aim for it to be fun to use. This is reflected in its name—a tribute to the British comedy group Monty Python—and in occasionally playful approaches to tutorials and reference materials, such as the use of the terms "spam" and "eggs" (a reference to a Monty Python sketch) in examples, instead of the often-used "foo" and "bar".A common neologism in the Python community is pythonic, which has a wide range of meanings related to program style. "Pythonic" code may use Python idioms well, be natural or show fluency in the language, or conform with Python's minimalist philosophy and emphasis on readability. Code that is difficult to understand or reads like a rough transcription from another programming language is called unpythonic.


== Syntax and semantics ==

Python is meant to be an easily readable language. Its formatting is visually uncluttered and often uses English keywords where other languages use punctuation. Unlike many other languages, it does not use curly brackets to delimit blocks, and semicolons after statements are allowed but rarely used. It has fewer syntactic exceptions and special cases than C or Pascal.


=== Indentation ===

Python uses whitespace indentation, rather than curly brackets or keywords, to delimit blocks. An increase in indentation comes after certain statements; a decrease in indentation signifies the end of the current block. Thus, the program's visual structure accurately represents its semantic structure. This feature is sometimes termed the off-side rule. Some other languages use indentation this way; but in most, indentation has no semantic meaning. The recommended indent size is four spaces.


=== Statements and control flow ===
Python's statements include:

The assignment statement, using a single equals sign =
The if statement, which conditionally executes a block of code, along with else and elif (a contraction of else-if)
The for statement, which iterates over an iterable object, capturing each element to a local variable for use by the attached block
The while statement, which executes a block of code as long as its condition is true
The try statement, which allows exceptions raised in its attached code block to be caught and handled by except clauses (or new syntax except* in Python 3.11 for exception groups); it also ensures that clean-up code in a finally block is always run regardless of how the block exits
The raise statement, used to raise a specified exception or re-raise a caught exception
The class statement, which executes a block of code and attaches its local namespace to a class, for use in object-oriented programming
The def statement, which defines a function or method
The with statement, which encloses a code block within a context manager (for example, acquiring a lock before it is run, then releasing the lock; or opening and closing a file), allowing resource-acquisition-is-initialization (RAII)-like behavior and replacing a common try/finally idiom
The break statement, which exits a loop
The continue statement, which skips the rest of the current iteration and continues with the next
The del statement, which removes a variable—deleting the reference from the name to the value, and producing an error if the variable is referred to before it is redefined
The pass statement, serving as a NOP, syntactically needed to create an empty code block
The assert statement, used in debugging to check for conditions that should apply
The yield statement, which returns a value from a generator function (and also an operator); used to implement coroutines
The return statement, used to return a value from a function
The import and from statements, used to import modules whose functions or variables can be used in the current programThe assignment statement (=) binds a name as a reference to a separate, dynamically allocated object. Variables may subsequently be rebound at any time to any object. In Python, a variable name is a generic reference holder without a fixed data type; however, it always refers to some object with a type. This is called dynamic typing—in contrast to statically-typed languages, where each variable may contain only a value of a certain type.
Python does not support tail call optimization or first-class continuations, and, according to Van Rossum, it never will. However, better support for coroutine-like functionality is provided by extending Python's generators. Before 2.5, generators were lazy iterators; data was passed unidirectionally out of the generator. From Python 2.5 on, it is possible to pass data back into a generator function; and from version 3.3, it can be passed through multiple stack levels.


=== Expressions ===
Python's expressions include:

The +, -, and * operators for mathematical addition, subtraction, and multiplication are similar to other languages, but the behavior of division differs. There are two types of divisions in Python: floor division (or integer division) // and floating-point/division. Python uses the ** operator for exponentiation.
Python uses the + operator for string concatenation. Python uses the * operator for duplicating a string a specified number of times.
The @ infix operator. It is intended to be used by libraries such as NumPy for matrix multiplication.
The syntax :=, called the "walrus operator", was introduced in Python 3.8. It assigns values to variables as part of a larger expression.
In Python, == compares by value. Python's is operator may be used to compare object identities (comparison by reference), and comparisons may be chained—for example, a <= b <= c.
Python uses and, or, and not as Boolean operators.
Python has a type of expression called a list comprehension, as well as a more general expression called a generator expression.
Anonymous functions are implemented using lambda expressions; however, there may be only one expression in each body.
Conditional expressions are written as x if c else y (different in order of operands from the c ? x : y operator common to many other languages).
Python makes a distinction between lists and tuples. Lists are written as [1, 2, 3], are mutable, and cannot be used as the keys of dictionaries (dictionary keys must be immutable in Python). Tuples, written as (1, 2, 3), are immutable and thus can be used as keys of dictionaries, provided all of the tuple's elements are immutable. The + operator can be used to concatenate two tuples, which does not directly modify their contents, but produces a new tuple containing the elements of both. Thus, given the variable t initially equal to (1, 2, 3), executing t = t + (4, 5) first evaluates t + (4, 5), which yields (1, 2, 3, 4, 5), which is then assigned back to t—thereby effectively "modifying the contents" of t while conforming to the immutable nature of tuple objects. Parentheses are optional for tuples in unambiguous contexts.
Python features sequence unpacking where multiple expressions, each evaluating to anything that can be assigned (to a variable, writable property, etc.) are associated in an identical manner to that forming tuple literals—and, as a whole, are put on the left-hand side of the equal sign in an assignment statement. The statement expects an iterable object on the right-hand side of the equal sign that produces the same number of values as the provided writable expressions; when iterated through them, it assigns each of the produced values to the corresponding expression on the left.
Python has a "string format" operator % that functions analogously to printf format strings in C—e.g. "spam=%s eggs=%d" % ("blah", 2) evaluates to "spam=blah eggs=2". In Python 2.6+ and 3+, this was supplemented by the format() method of the str class, e.g. "spam={0} eggs={1}".format("blah", 2). Python 3.6 added "f-strings": spam = "blah"; eggs = 2; f'spam={spam} eggs={eggs}'.
Strings in Python can be concatenated by "adding" them (with the same operator as for adding integers and floats), e.g. "spam" + "eggs" returns "spameggs". If strings contain numbers, they are added as strings rather than integers, e.g. "2" + "2" returns "22".
Python has various string literals:
Delimited by single or double quotes; unlike in Unix shells, Perl, and Perl-influenced languages, single and double quotes work the same. Both use the backslash (\) as an escape character. String interpolation became available in Python 3.6 as "formatted string literals".
Triple-quoted (beginning and ending with three single or double quotes), which may span multiple lines and function like here documents in shells, Perl, and Ruby.
Raw string varieties, denoted by prefixing the string literal with r. Escape sequences are not interpreted; hence raw strings are useful where literal backslashes are common, such as regular expressions and Windows-style paths. (Compare "@-quoting" in C#.)
Python has array index and array slicing expressions in lists, denoted as a[key], a[start:stop] or a[start:stop:step]. Indexes are zero-based, and negative indexes are relative to the end. Slices take elements from the start index up to, but not including, the stop index. The third slice parameter called step or stride, allows elements to be skipped and reversed. Slice indexes may be omitted—for example, a[:] returns a copy of the entire list. Each element of a slice is a shallow copy.In Python, a distinction between expressions and statements is rigidly enforced, in contrast to languages such as Common Lisp, Scheme, or Ruby. This leads to duplicating some functionality. For example:

List comprehensions vs. for-loops
Conditional expressions vs. if blocks
The eval() vs. exec() built-in functions (in Python 2, exec is a statement); the former is for expressions, the latter is for statementsStatements cannot be a part of an expression—so list and other comprehensions or lambda expressions, all being expressions, cannot contain statements. A particular case is that an assignment statement such as a = 1 cannot form part of the conditional expression of a conditional statement. This has the advantage of avoiding a classic C error of mistaking an assignment operator = for an equality operator == in conditions: if (c = 1) { ... } is syntactically valid (but probably unintended) C code, but if c = 1: ... causes a syntax error in Python.


=== Methods ===
Methods on objects are functions attached to the object's class; the syntax instance.method(argument) is, for normal methods and functions, syntactic sugar for Class.method(instance, argument). Python methods have an explicit self parameter to access instance data, in contrast to the implicit self (or this) in some other object-oriented programming languages (e.g., C++, Java, Objective-C, Ruby). Python also provides methods, often called dunder methods (due to their names beginning and ending with double-underscores), to allow user-defined classes to modify how they are handled by native operations including length, comparison, in arithmetic operations and type conversion.


=== Typing ===
Python uses duck typing and has typed objects but untyped variable names. Type constraints are not checked at compile time; rather, operations on an object may fail, signifying that it is not of a suitable type. Despite being dynamically typed, Python is strongly typed, forbidding operations that are not well-defined (for example, adding a number to a string) rather than silently attempting to make sense of them.
Python allows programmers to define their own types using classes, most often used for object-oriented programming. New instances of classes are constructed by calling the class (for example, SpamClass() or EggsClass()), and the classes are instances of the metaclass type (itself an instance of itself), allowing metaprogramming and reflection.
Before version 3.0, Python had two kinds of classes (both using the same syntax): old-style and new-style, current Python versions only support the semantics new style.
Python supports optional type annotations. These annotations are not enforced by the language, but may be used by external tools such as mypy to catch errors. Mypy also supports a Python compiler called mypyc, which leverages type annotations for optimization.


=== Arithmetic operations ===
Python has the usual symbols for arithmetic operators (+, -, *, /), the floor division operator // and the modulo operation % (where the remainder can be negative,  e.g. 4 % -3 == -2). It also has ** for exponentiation, e.g. 5**3 == 125 and 9**0.5 == 3.0, and a matrix‑multiplication operator @ . These operators work like in traditional math; with the same precedence rules, the operators infix (+ and - can also be unary to represent positive and negative numbers respectively).
The division between integers produces floating-point results. The behavior of division has changed significantly over time:
Current Python (i.e. since 3.0) changed / to always be floating-point division, e.g. 5/2 == 2.5.
The floor division // operator was introduced. So 7//3 == 2, -7//3 == -3, 7.5//3 == 2.0 and -7.5//3 == -3.0. Adding from __future__ import division causes a module used in Python 2.7 to use Python 3.0 rules for division (see above).In Python terms, / is true division (or simply division), and // is floor division. / before version 3.0 is classic division.Rounding towards negative infinity, though different from most languages, adds consistency. For instance, it means that the equation (a + b)//b == a//b + 1 is always true. It also means that the equation b*(a//b) + a%b == a is valid for both positive and negative values of a. However, maintaining the validity of this equation means that while the result of a%b is, as expected, in the half-open interval [0, b), where b is a positive integer, it has to lie in the interval (b, 0] when b is negative.Python provides a round function for rounding a float to the nearest integer. For tie-breaking, Python 3 uses round to even: round(1.5) and round(2.5) both produce 2. Versions before 3 used round-away-from-zero: round(0.5) is 1.0, round(-0.5) is −1.0.Python allows Boolean expressions with multiple equality relations in a manner that is consistent with general use in mathematics. For example, the expression a < b < c tests whether a is less than b and b is less than c. C-derived languages interpret this expression differently: in C, the expression would first evaluate a < b, resulting in 0 or 1, and that result would then be compared with c.Python uses arbitrary-precision arithmetic for all integer operations. The Decimal type/class in the decimal module provides decimal floating-point numbers to a pre-defined arbitrary precision and several rounding modes. The Fraction class in the fractions module provides arbitrary precision for rational numbers.Due to Python's extensive mathematics library, and the third-party library NumPy that further extends the native capabilities, it is frequently used as a scientific scripting language to aid in problems such as numerical data processing and manipulation.


== Programming examples ==
"Hello, World!" program:

Program to calculate the factorial of a positive integer:


== Libraries ==
Python's large standard library provides tools suited to many tasks and is commonly cited as one of its greatest strengths. For Internet-facing applications, many standard formats and protocols such as MIME and HTTP are supported. It includes modules for creating graphical user interfaces, connecting to relational databases, generating pseudorandom numbers, arithmetic with arbitrary-precision decimals, manipulating regular expressions, and unit testing.
Some parts of the standard library are covered by specifications—for example, the Web Server Gateway Interface (WSGI) implementation wsgiref follows PEP 333—but most are specified by their code, internal documentation, and test suites. However, because most of the standard library is cross-platform Python code, only a few modules need altering or rewriting for variant implementations.
As of 17 March 2024, the Python Package Index (PyPI), the official repository for third-party Python software, contains over 523,000 packages with a wide range of functionality, including:


== Development environments ==

Most Python implementations (including CPython) include a read–eval–print loop (REPL), permitting them to function as a command line interpreter for which users enter statements sequentially and receive results immediately.
Python also comes with an Integrated development environment (IDE) called IDLE, which is more beginner-oriented.
Other shells, including IDLE and IPython, add further abilities such as improved auto-completion, session state retention, and syntax highlighting.
As well as standard desktop integrated development environments including PyCharm, IntelliJ Idea, Visual Studio Code etc, there are web browser-based IDEs, including SageMath, for developing science- and math-related programs; PythonAnywhere, a browser-based IDE and hosting environment; and Canopy IDE, a commercial IDE emphasizing scientific computing.


== Implementations ==


=== Reference implementation ===
CPython is the reference implementation of Python. It is written in C, meeting the C89 standard (Python 3.11 uses C11) with several select C99 features. CPython includes its own C extensions, but third-party extensions are not limited to older C versions—e.g. they can be implemented with C11 or C++.) It compiles Python programs into an intermediate bytecode which is then executed by its virtual machine. CPython is distributed with a large standard library written in a mixture of C and native Python, and is available for many platforms, including Windows (starting with Python 3.9, the Python installer deliberately fails to install on Windows 7 and 8; Windows XP was supported until Python 3.5) and most modern Unix-like systems, including macOS (and Apple M1 Macs, since Python 3.9.1, with experimental installer) and unofficial support for e.g. VMS. Platform portability was one of its earliest priorities. (During Python 1 and 2 development, even OS/2 and Solaris were supported, but support has since been dropped for many platforms.)


=== Other implementations ===
PyPy is a fast, compliant interpreter of Python 2.7 and 3.8. Its just-in-time compiler often brings a significant speed improvement over CPython but some libraries written in C cannot be used with it.
Stackless Python is a significant fork of CPython that implements microthreads; it does not use the call stack in the same way, thus allowing massively concurrent programs. PyPy also has a stackless version.
MicroPython and CircuitPython are Python 3 variants optimized for microcontrollers, including Lego Mindstorms EV3.
Pyston is a variant of the Python runtime that uses just-in-time compilation to speed up the execution of Python programs.
Cinder is a performance-oriented fork of CPython 3.8 that contains a number of optimizations, including bytecode inline caching, eager evaluation of coroutines, a method-at-a-time JIT, and an experimental bytecode compiler.
Snek Embedded Computing Language (supporting e.g. 8-bit AVR microcontrollers such as ATmega 328P-based Arduino, and larger ones that are MicroPython can also support) "is Python-inspired, but it is not Python. It is possible to write Snek programs that run under a full Python system, but most Python programs will not run under Snek." It's an imperative language not including OOP/classes unlike Python, and simplifying to one number type (like JavaScript, except using smaller) 32-bit single-precision "Integer values of less than 24 bits can be represented exactly in these floating point values".


=== Unsupported implementations ===
Other just-in-time Python compilers have been developed, but are now unsupported:

Google began a project named Unladen Swallow in 2009, with the aim of speeding up the Python interpreter fivefold by using the LLVM, and of improving its multithreading ability to scale to thousands of cores, while ordinary implementations suffer from the global interpreter lock.
Psyco is a discontinued just-in-time specializing compiler that integrates with CPython and transforms bytecode to machine code at runtime. The emitted code is specialized for certain data types and is faster than the standard Python code. Psyco does not support Python 2.7 or later.
PyS60 was a Python 2 interpreter for Series 60 mobile phones released by Nokia in 2005. It implemented many of the modules from the standard library and some additional modules for integrating with the Symbian operating system. The Nokia N900 also supports Python with GTK widget libraries, enabling programs to be written and run on the target device.


=== Cross-compilers to other languages ===
There are several compilers/transpilers to high-level object languages, with either unrestricted Python, a restricted subset of Python, or a language similar to Python as the source language:

Brython, Transcrypt and Pyjs (latest release in 2012) compile Python to JavaScript.
Codon compiles a subset of statically typed Python to machine code (via LLVM) and supports native multithreading.
Cython compiles (a superset of) Python  to C. The resulting code is also usable with Python via direct C-level API calls into the Python interpreter.
PyJL compiles/transpiles a subset of Python to "human-readable, maintainable, and high-performance Julia source code". Despite claiming high performance, no tool can claim to do that for arbitrary Python code; i.e. it's known not possible to compile to a faster language or machine code. Unless semantics of Python are changed, but in many cases speedup is possible with few or no changes in the Python code. The faster Julia source code can then be used from Python, or compiled to machine code, and based that way.
Nuitka compiles Python into C.
Numba uses LLVM to compile a subset of Python to machine code.
Pythran compiles a subset of Python 3 to C++ (C++11).
RPython can be compiled to C, and is used to build the PyPy interpreter of Python.
The Python → 11l → C++ transpiler compiles a subset of Python 3 to C++ (C++17).Specialized:

MyHDL is a Python-based hardware description language (HDL), that converts MyHDL code to Verilog or VHDL code.Older projects (or not to be used with Python 3.x and latest syntax):

Google's Grumpy (latest release in 2017) transpiles Python 2 to Go.
IronPython  allows running Python 2.7 programs (and an alpha, released in 2021, is also available for "Python 3.4, although features and behaviors from later versions may be included") on the .NET Common Language Runtime.
Jython compiles Python 2.7 to Java bytecode, allowing the use of the Java libraries from a Python program.
Pyrex (latest release in 2010) and Shed Skin (latest release in 2013) compile to C and C++ respectively.


=== Performance ===
Performance comparison of various Python implementations on a non-numerical (combinatorial) workload was presented at EuroSciPy '13. Python's performance compared to other programming languages is also benchmarked by The Computer Language Benchmarks Game.


== Development ==
Python's development is conducted largely through the Python Enhancement Proposal (PEP) process, the primary mechanism for proposing major new features, collecting community input on issues, and documenting Python design decisions. Python coding style is covered in PEP 8. Outstanding PEPs are reviewed and commented on by the Python community and the steering council.Enhancement of the language corresponds with the development of the CPython reference implementation. The mailing list python-dev is the primary forum for the language's development. Specific issues were originally discussed in the Roundup bug tracker hosted at by the foundation. In 2022, all issues and discussions were migrated to GitHub. Development originally took place on a self-hosted source-code repository running Mercurial, until Python moved to GitHub in January 2017.CPython's public releases come in three types, distinguished by which part of the version number is incremented:

Backward-incompatible versions, where code is expected to break and needs to be manually ported. The first part of the version number is incremented. These releases happen infrequently—version 3.0 was released 8 years after 2.0. According to Guido van Rossum, a version 4.0 is very unlikely to ever happen.
Major or "feature" releases are largely compatible with the previous version but introduce new features. The second part of the version number is incremented. Starting with Python 3.9, these releases are expected to happen annually. Each major version is supported by bug fixes for several years after its release.
Bugfix releases, which introduce no new features, occur about every 3 months and are made when a sufficient number of bugs have been fixed upstream since the last release. Security vulnerabilities are also patched in these releases. The third and final part of the version number is incremented.Many alpha, beta, and release-candidates are also released as previews and for testing before final releases. Although there is a rough schedule for each release, they are often delayed if the code is not ready. Python's development team monitors the state of the code by running the large unit test suite during development.The major academic conference on Python is PyCon. There are also special Python mentoring programs, such as PyLadies.
Python 3.12 removed wstr meaning Python extensions need to be modified, and 3.10 added pattern matching to the language.Python 3.12 dropped some outdated modules, and more will be dropped in the future, deprecated as of 3.13; already deprecated array 'u' format code will emit DeprecationWarning since 3.13 and will be removed in Python 3.16. The 'w' format code should be used instead. Part of ctypes is also deprecated and http.server.CGIHTTPRequestHandler will emit a DeprecationWarning, and will be removed in 3.15. Using that code already has a high potential for both security and functionality bugs. Parts of the typing module are deprecated, e.g. creating a typing.NamedTuple class using keyword arguments to denote the fields and such (and more) will be disallowed in Python 3.15.


== API documentation generators ==
Tools that can generate documentation for Python API include pydoc (available as part of the standard library), Sphinx, Pdoc and its forks, Doxygen and Graphviz, among others.


== Naming ==
Python's name is derived from the British comedy group Monty Python, whom Python creator Guido van Rossum enjoyed while developing the language. Monty Python references appear frequently in Python code and culture; for example, the metasyntactic variables often used in Python literature are spam and eggs instead of the traditional foo and bar. The official Python documentation also contains various references to Monty Python routines. Users of Python are sometimes referred to as "Pythonistas".The prefix Py- is used to show that something is related to Python. Examples of the use of this prefix in names of Python applications or libraries include Pygame, a binding of SDL to Python (commonly used to create games); PyQt and PyGTK, which bind Qt and GTK to Python respectively; and PyPy, a Python implementation originally written in Python.


== Popularity ==
Since 2003, Python has consistently ranked in the top ten most popular programming languages in the TIOBE Programming Community Index where as of December 2022 it was the most popular language (ahead of C, C++, and Java). It was selected as Programming Language of the Year (for "the highest rise in ratings in a year") in 2007, 2010, 2018, and 2020 (the only language to have done so four times as of 2020).
Large organizations that use Python include Wikipedia, Google, Yahoo!, CERN, NASA, Facebook, Amazon, Instagram, Spotify, and some smaller entities like ILM and ITA. The social news networking site Reddit was written mostly in Python.


== Uses ==

Python can serve as a scripting language for web applications, e.g. via mod_wsgi for the Apache webserver. With Web Server Gateway Interface, a standard API has evolved to facilitate these applications. Web frameworks like Django, Pylons, Pyramid, TurboGears, web2py, Tornado, Flask, Bottle, and Zope support developers in the design and maintenance of complex applications. Pyjs and IronPython can be used to develop the client-side of Ajax-based applications. SQLAlchemy can be used as a data mapper to a relational database. Twisted is a framework to program communications between computers, and is used (for example) by Dropbox.
Libraries such as NumPy, SciPy and Matplotlib allow the effective use of Python in scientific computing, with specialized libraries such as Biopython and Astropy providing domain-specific functionality. SageMath is a computer algebra system with a notebook interface programmable in Python: its library covers many aspects of mathematics, including algebra, combinatorics, numerical mathematics, number theory, and calculus. OpenCV has Python bindings with a rich set of features for computer vision and image processing.Python is commonly used in artificial intelligence projects and machine learning projects with the help of libraries like TensorFlow, Keras, Pytorch, scikit-learn and the Logic language ProbLog. As a scripting language with a modular architecture, simple syntax, and rich text processing tools, Python is often used for natural language processing.The combination of Python and Prolog has proved to be particularly useful for AI applications, with Prolog providing knowledge representation and reasoning capablities. The Janus system, in particular, exploits the similarites between these two languages,
in part because of their use of dynamic typing, and the simple recursive nature of their
data structures. Typical applications of this combination include  natural language processing, visual query
answering, geospatial reasoning, and handling of semantic web data.
The Natlog system, implemented in Python, uses Definite Clause Grammars (DCGs) as prompt generators for text-to-text generators like GPT3 and text-to-image generators like DALL-E or Stable Diffusion.Python can also be used for graphical user interface (GUI) by using libraries like Tkinter.Python has been successfully embedded in many software products as a scripting language, including in finite element method software such as Abaqus, 3D parametric modelers like FreeCAD, 3D animation packages such as 3ds Max, Blender, Cinema 4D, Lightwave, Houdini, Maya, modo, MotionBuilder, Softimage, the visual effects compositor Nuke, 2D imaging programs like GIMP, Inkscape, Scribus and Paint Shop Pro, and musical notation programs like scorewriter and capella. GNU Debugger uses Python as a pretty printer to show complex structures such as C++ containers. Esri promotes Python as the best choice for writing scripts in ArcGIS. It has also been used in several video games, and has been adopted as first of the three available programming languages in Google App Engine, the other two being Java and Go.Many operating systems include Python as a standard component. It ships with most Linux distributions, AmigaOS 4 (using Python 2.7), FreeBSD (as a package), NetBSD, and OpenBSD (as a package) and can be used from the command line (terminal). Many Linux distributions use installers written in Python: Ubuntu uses the Ubiquity installer, while Red Hat Linux and Fedora Linux use the Anaconda installer. Gentoo Linux uses Python in its package management system, Portage.
Python is used extensively in the information security industry, including in exploit development.Most of the Sugar software for the One Laptop per Child XO, developed at Sugar Labs as of 2008, is written in Python. The Raspberry Pi single-board computer project has adopted Python as its main user-programming language.
LibreOffice includes Python and intends to replace Java with Python. Its Python Scripting Provider is a core feature since Version 4.0 from 7 February 2013.


== Languages influenced by Python ==
Python's design and philosophy have influenced many other programming languages:

Boo uses indentation, a similar syntax, and a similar object model.
Cobra uses indentation and a similar syntax, and its Acknowledgements document lists Python first among languages that influenced it.
CoffeeScript, a programming language that cross-compiles to JavaScript, has Python-inspired syntax.
ECMAScript/JavaScript borrowed iterators and generators from Python.
GDScript, a scripting language very similar to Python, built-in to the Godot game engine.
Go is designed for the "speed of working in a dynamic language like Python" and shares the same syntax for slicing arrays.
Groovy was motivated by the desire to bring the Python design philosophy to Java.
Julia was designed to be "as usable for general programming as Python".
Mojo is a non-strict superset of Python (e.g. still missing classes, and adding e.g. struct).
Nim uses indentation and similar syntax.
Ruby's creator, Yukihiro Matsumoto, has said: "I wanted a scripting language that was more powerful than Perl, and more object-oriented than Python. That's why I decided to design my own language."
Swift, a programming language developed by Apple, has some Python-inspired syntax.Python's development practices have also been emulated by other languages. For example, the practice of requiring a document describing the rationale for, and issues surrounding, a change to the language (in Python, a PEP) is also used in Tcl, Erlang, and Swift.


== See also ==
Python syntax and semantics
pip (package manager)
List of programming languages
History of programming languages
Comparison of programming languages


== References ==


=== Sources ===
"Python for Artificial Intelligence". Python Wiki. 19 July 2012. Archived from the original on 1 November 2012. Retrieved 3 December 2012.
Paine, Jocelyn, ed. (August 2005). "AI in Python". AI Expert Newsletter. Amzi!. Archived from the original on 26 March 2012. Retrieved 11 February 2012.
"PyAIML 0.8.5 : Python Package Index". Pypi.python.org. Retrieved 17 July 2013.
Russell, Stuart J. & Norvig, Peter (2009). Artificial Intelligence: A Modern Approach (3rd ed.). Upper Saddle River, NJ: Prentice Hall. ISBN 978-0-13-604259-4.


== Further reading ==
Downey, Allen B. (May 2012). Think Python: How to Think Like a Computer Scientist (version 1.6.6 ed.). Cambridge University Press. ISBN 978-0-521-72596-5.
Hamilton, Naomi (5 August 2008). "The A-Z of Programming Languages: Python". Computerworld. Archived from the original on 29 December 2008. Retrieved 31 March 2010.
Lutz, Mark (2013). Learning Python (5th ed.). O'Reilly Media. ISBN 978-0-596-15806-4.
Summerfield, Mark (2009). Programming in Python 3 (2nd ed.). Addison-Wesley Professional. ISBN 978-0-321-68056-3.
Ramalho, Luciano (May 2022). Fluent Python. O'Reilly Media. ISBN 978-1-4920-5632-4.


== External links ==

Official websiteJavaScript (), often abbreviated as JS, is a programming language and core technology of the Web, alongside HTML and CSS. 99% of websites use JavaScript on the client side for webpage behavior.Web browsers have a dedicated JavaScript engine that executes the client code. These engines are also utilized in some servers and a variety of apps. The most popular runtime system for non-browser usage is Node.js.
JavaScript is a high-level, often just-in-time compiled language that conforms to the ECMAScript standard. It has dynamic typing, prototype-based object-orientation, and first-class functions. It is multi-paradigm, supporting event-driven, functional, and imperative programming styles. It has application programming interfaces (APIs) for working with text, dates, regular expressions, standard data structures, and the Document Object Model (DOM).
The ECMAScript standard does not include any input/output (I/O), such as networking, storage, or graphics facilities. In practice, the web browser or other runtime system provides JavaScript APIs for I/O.
Although Java and JavaScript are similar in name, syntax, and respective standard libraries, the two languages are distinct and differ greatly in design.


== History ==


=== Creation at Netscape ===
The first popular web browser with a graphical user interface, Mosaic, was released in 1993. Accessible to non-technical people, it played a prominent role in the rapid growth of the early World Wide Web. The lead developers of Mosaic then founded the Netscape corporation, which released a more polished browser, Netscape Navigator, in 1994. This quickly became the most-used.During these formative years of the Web, web pages could only be static, lacking the capability for dynamic behavior after the page was loaded in the browser. There was a desire in the flourishing web development scene to remove this limitation, so in 1995, Netscape decided to add a programming language to Navigator. They pursued two routes to achieve this: collaborating with Sun Microsystems to embed the Java language, while also hiring Brendan Eich to embed the Scheme language.The goal was a "language for the masses", "to help nonprogrammers create dynamic, interactive Web sites". Netscape management soon decided that the best option was for Eich to devise a new language, with syntax similar to Java and less like Scheme or other extant scripting languages. Although the new language and its interpreter implementation were called LiveScript when first shipped as part of a Navigator beta in September 1995, the name was changed to JavaScript for the official release in December.The choice of the JavaScript name has caused confusion, implying that it is directly related to Java. At the time, the dot-com boom had begun and Java was a popular new language, so Eich considered the JavaScript name a marketing ploy by Netscape.


=== Adoption by Microsoft ===
Microsoft debuted Internet Explorer in 1995, leading to a browser war with Netscape. On the JavaScript front, Microsoft created its own interpreter called JScript.Microsoft first released JScript in 1996, alongside initial support for CSS and extensions to HTML. Each of these implementations was noticeably different from their counterparts in Netscape Navigator. These differences made it difficult for developers to make their websites work well in both browsers, leading to widespread use of "best viewed in Netscape" and "best viewed in Internet Explorer" logos for several years.


=== The rise of JScript ===

In November 1996, Netscape submitted JavaScript to Ecma International, as the starting point for a standard specification that all browser vendors could conform to. This led to the official release of the first ECMAScript language specification in June 1997.
The standards process continued for a few years, with the release of ECMAScript 2 in June 1998 and ECMAScript 3 in December 1999. Work on ECMAScript 4 began in 2000.However, the effort to fully standardize the language was undermined by Microsoft gaining an increasingly dominant position in the browser market. By the early 2000s, Internet Explorer's market share reached 95%. This meant that JScript became the de facto standard for client-side scripting on the Web.
Microsoft initially participated in the standards process and implemented some proposals in its JScript language, but eventually it stopped collaborating on ECMA work. Thus ECMAScript 4 was mothballed.


=== Growth and standardization ===
During the period of Internet Explorer dominance in the early 2000s, client-side scripting was stagnant. This started to change in 2004, when the successor of Netscape, Mozilla, released the Firefox browser. Firefox was well received by many, taking significant market share from Internet Explorer.In 2005, Mozilla joined ECMA International, and work started on the ECMAScript for XML (E4X) standard. This led to Mozilla working jointly with Macromedia (later acquired by Adobe Systems), who were implementing E4X in their ActionScript 3 language, which was based on an ECMAScript 4 draft. The goal became standardizing ActionScript 3 as the new ECMAScript 4. To this end, Adobe Systems released the Tamarin implementation as an open source project. However, Tamarin and ActionScript 3 were too different from established client-side scripting, and without cooperation from Microsoft, ECMAScript 4 never reached fruition.
Meanwhile, very important developments were occurring in open-source communities not affiliated with ECMA work. In 2005, Jesse James Garrett released a white paper in which he coined the term Ajax and described a set of technologies, of which JavaScript was the backbone, to create web applications where data can be loaded in the background, avoiding the need for full page reloads. This sparked a renaissance period of JavaScript, spearheaded by open-source libraries and the communities that formed around them. Many new libraries were created, including jQuery, Prototype, Dojo Toolkit, and MooTools.
Google debuted its Chrome browser in 2008, with the V8 JavaScript engine that was faster than its competition. The key innovation was just-in-time compilation (JIT), so other browser vendors needed to overhaul their engines for JIT.In July 2008, these disparate parties came together for a conference in Oslo. This led to the eventual agreement in early 2009 to combine all relevant work and drive the language forward. The result was the ECMAScript 5 standard, released in December 2009.


=== Reaching maturity ===
Ambitious work on the language continued for several years, culminating in an extensive collection of additions and refinements being formalized with the publication of ECMAScript 6 in 2015.The creation of Node.js in 2009 by Ryan Dahl sparked a significant increase in the usage of JavaScript outside of web browsers. Node combines the V8 engine, an event loop, and I/O APIs, thereby providing a stand-alone JavaScript runtime system. As of 2018, Node had been used by millions of developers, and npm had the most modules of any package manager in the world.The ECMAScript draft specification is currently maintained openly on GitHub, and editions are produced via regular annual snapshots. Potential revisions to the language are vetted through a comprehensive proposal process. Now, instead of edition numbers, developers check the status of upcoming features individually.The current JavaScript ecosystem has many libraries and frameworks, established programming practices, and substantial usage of JavaScript outside of web browsers. Plus, with the rise of single-page applications and other JavaScript-heavy websites, several transpilers have been created to aid the development process.


== Trademark ==
"JavaScript" is a trademark of Oracle Corporation in the United States. The trademark was originally issued to Sun Microsystems on 6 May 1997, and was transferred to Oracle when they acquired Sun in 2009.


== Website client-side usage ==
JavaScript is the dominant client-side scripting language of the Web, with 99% of all websites using it for this purpose. Scripts are embedded in or included from HTML documents and interact with the DOM. 
All major web browsers have a built-in JavaScript engine that executes the code on the user's device.


=== Examples of scripted behavior ===
Loading new web page content without reloading the page, via Ajax or a WebSocket. For example, users of social media can send and receive messages without leaving the current page.
Web page animations, such as fading objects in and out, resizing, and moving them.
Playing browser games.
Controlling the playback of streaming media.
Generating pop-up ads or alert boxes.
Validating input values of a web form before the data is sent to a web server.
Logging data about the user's behavior then sending it to a server. The website owner can use this data for analytics, ad tracking, and personalization.
Redirecting a user to another page.
Storing and retrieving data on the user's device, via the storage or IndexedDB standards.


=== Libraries and frameworks ===
Over 80% of websites use a third-party JavaScript library or web framework as part of their client-side scripting.jQuery is by far the most-used. Other notable ones include Angular, Bootstrap, Lodash, Modernizr, React, Underscore, and Vue. Multiple options can be used in conjunction, such as jQuery and Bootstrap.However, the term "Vanilla JS" was coined for websites not using any libraries or frameworks at all, instead relying entirely on standard JavaScript functionality.


== Other usage ==
The use of JavaScript has expanded beyond its web browser roots. JavaScript engines are now embedded in a variety of other software systems, both for server-side website deployments and non-browser applications.
Initial attempts at promoting server-side JavaScript usage were Netscape Enterprise Server and Microsoft's Internet Information Services, but they were small niches. Server-side usage eventually started to grow in the late 2000s, with the creation of Node.js and other approaches.Electron, Cordova, React Native, and other application frameworks have been used to create many applications with behavior implemented in JavaScript. Other non-browser applications include Adobe Acrobat support for scripting PDF documents and GNOME Shell extensions written in JavaScript.JavaScript has recently begun to appear in some embedded systems, usually by leveraging Node.js.


== Execution ==


=== JavaScript engine ===


=== Runtime system ===
The JavaScript engine must be embedded within a runtime system (either a web browser or a standalone system) to provide objects and methods by which scripts can interact with the larger environment. This includes the necessary APIs for I/O, such as networking, storage, or graphics facilities. The runtime also provides the ability to import scripts.
JavaScript is a single-threaded language. The runtime processes messages from a queue one at a time, and it calls a function associated with each new message, creating a call stack frame with the function's arguments and local variables. The call stack shrinks and grows based on the function's needs. When the call stack is empty upon function completion, JavaScript proceeds to the next message in the queue. This is called the event loop, described as "run to completion" because each message is fully processed before the next message is considered. However, the language's concurrency model describes the event loop as non-blocking: program I/O is performed using events and callback functions. This means, for example, that JavaScript can process a mouse click while waiting for a database query to return information.The notable standalone runtimes are Node.js, Deno, and Bun.


== Features ==
The following features are common to all conforming ECMAScript implementations unless explicitly specified otherwise.


=== Imperative and structured ===

JavaScript supports much of the structured programming syntax from C (e.g., if statements, while loops, switch statements, do while loops, etc.). One partial exception is scoping: originally JavaScript only had function scoping with var; block scoping was added in ECMAScript 2015 with the keywords let and const. Like C, JavaScript makes a distinction between expressions and statements. One syntactic difference from C is automatic semicolon insertion, which allow semicolons (which terminate statements) to be omitted.


=== Weakly typed ===

JavaScript is weakly typed, which means certain types are implicitly cast depending on the operation used.
The binary + operator casts both operands to a string unless both operands are numbers. This is because the addition operator doubles as a concatenation operator
The binary - operator always casts both operands to a number
Both unary operators (+, -) always cast the operand to a numberValues are cast to strings like the following:
Strings are left as-is
Numbers are converted to their string representation
Arrays have their elements cast to strings after which they are joined by commas (,)
Other objects are converted to the string [object Object] where Object is the name of the constructor of the objectValues are cast to numbers by casting to strings and then casting the strings to numbers. These processes can be modified by defining toString and valueOf functions on the prototype for string and number casting respectively.
JavaScript has received criticism for the way it implements these conversions as the complexity of the rules can be mistaken for inconsistency. For example, when adding a number to a string, the number will be cast to a string before performing concatenation, but when subtracting a number from a string, the string is cast to a number before performing subtraction.

Often also mentioned is {} + [] resulting in 0 (number). This is misleading: the {} is interpreted as an empty code block instead of an empty object, and the empty array is cast to a number by the remaining unary + operator. If the expression is wrapped in parentheses - ({} + []) - the curly brackets are interpreted as an empty object and the result of the expression is "[object Object]" as expected.


=== Dynamic ===


==== Typing ====

JavaScript is dynamically typed like most other scripting languages. A type is associated with a value rather than an expression. For example, a variable initially bound to a number may be reassigned to a string. JavaScript supports various ways to test the type of objects, including duck typing.


==== Run-time evaluation ====

JavaScript includes an eval function that can execute statements provided as strings at run-time.


=== Object-orientation (prototype-based) ===
Prototypal inheritance in JavaScript is described by Douglas Crockford as:

You make prototype objects, and then ... make new instances. Objects are mutable in JavaScript, so we can augment the new instances, giving them new fields and methods. These can then act as prototypes for even newer objects. We don't need classes to make lots of similar objects... Objects inherit from objects. What could be more object oriented than that?
In JavaScript, an object is an associative array, augmented with a prototype (see below); each key provides the name for an object property, and there are two syntactical ways to specify such a name: dot notation (obj.x = 10) and bracket notation (obj['x'] = 10). A property may be added, rebound, or deleted at run-time. Most properties of an object (and any property that belongs to an object's prototype inheritance chain) can be enumerated using a for...in loop.


==== Prototypes ====

JavaScript uses prototypes where many other object-oriented languages use classes for inheritance. It is possible to simulate many class-based features with prototypes in JavaScript.


==== Functions as object constructors ====
Functions double as object constructors, along with their typical role. Prefixing a function call with new will create an instance of a prototype, inheriting properties and methods from the constructor (including properties from the Object prototype). ECMAScript 5 offers the Object.create method, allowing explicit creation of an instance without automatically inheriting from the Object prototype (older environments can assign the prototype to null). The constructor's prototype property determines the object used for the new object's internal prototype. New methods can be added by modifying the prototype of the function used as a constructor. JavaScript's built-in constructors, such as Array or Object, also have prototypes that can be modified. While it is possible to modify the Object prototype, it is generally considered bad practice because most objects in JavaScript will inherit methods and properties from the Object prototype, and they may not expect the prototype to be modified.


==== Functions as methods ====

Unlike in many object-oriented languages, in JavaScript there is no distinction between a function definition and a method definition. Rather, the distinction occurs during function calling. When a function is called as a method of an object, the function's local this keyword is bound to that object for that invocation.


=== Functional ===

JavaScript functions are first-class; a function is considered to be an object. As such, a function may have properties and methods, such as .call() and .bind().


==== Lexical closure ====

A nested function is a function defined within another function. It is created each time the outer function is invoked. 
In addition, each nested function forms a lexical closure: the lexical scope of the outer function (including any constant, local variable, or argument value) becomes part of the internal state of each inner function object, even after execution of the outer function concludes.


==== Anonymous function ====

JavaScript also supports anonymous functions.


=== Delegative ===

JavaScript supports implicit and explicit delegation.


==== Functions as roles (Traits and Mixins) ====

JavaScript natively supports various function-based implementations of Role patterns like Traits and Mixins. Such a function defines additional behavior by at least one method bound to the this keyword within its function body. A Role then has to be delegated explicitly via call or apply to objects that need to feature additional behavior that is not shared via the prototype chain.


==== Object composition and inheritance ====
Whereas explicit function-based delegation does cover composition in JavaScript, implicit delegation already happens every time the prototype chain is walked in order to, e.g., find a method that might be related to but is not directly owned by an object. Once the method is found it gets called within this object's context. Thus inheritance in JavaScript is covered by a delegation automatism that is bound to the prototype property of constructor functions.


=== Miscellaneous ===


==== Zero-based numbering ====
JavaScript is a zero-index language.


==== Variadic functions ====

An indefinite number of parameters can be passed to a function. The function can access them through formal parameters and also through the local arguments object. Variadic functions can also be created by using the bind method.


==== Array and object literals ====

Like in many scripting languages, arrays and objects (associative arrays in other languages) can each be created with a succinct shortcut syntax. In fact, these literals form the basis of the JSON data format.


==== Regular expressions ====

In a manner similar to Perl, JavaScript also supports regular expressions, which provide a concise and powerful syntax for text manipulation that is more sophisticated than the built-in string functions.


==== Promises and Async/await ====
JavaScript supports promises and Async/await for handling asynchronous operations.


===== Promises =====

A built-in Promise object provides functionality for handling promises and associating handlers with an asynchronous action's eventual result. Recently, the JavaScript specification introduced combinator methods, which allow developers to combine multiple JavaScript promises and do operations based on different scenarios. The methods introduced are: Promise.race, Promise.all, Promise.allSettled and Promise.any.


===== Async/await =====

Async/await allows an asynchronous, non-blocking function to be structured in a way similar to an ordinary synchronous function. Asynchronous, non-blocking code can be written, with minimal overhead, structured similarly to traditional synchronous, blocking code.


=== Vendor-specific extensions ===
Historically, some JavaScript engines supported these non-standard features:

conditional catch clauses (like Java)
array comprehensions and generator expressions (like Python)
concise function expressions (function(args) expr; this experimental syntax predated arrow functions)
ECMAScript for XML (E4X), an extension that adds native XML support to ECMAScript (unsupported in Firefox since version 21)


== Syntax ==


=== Simple examples ===
Variables in JavaScript can be defined using either the var, let or const keywords.  Variables defined without keywords will be defined at the global scope.

Note the comments in the examples above, all of which were preceded with two forward slashes.
There is no built-in Input/output functionality in JavaScript, instead it is provided by the run-time environment. The ECMAScript specification in edition 5.1 mentions that "there are no provisions in this specification for input of external data or output of computed results".
However, most runtime environments have a console object that can be used to print output. Here is a minimalist "Hello, World!" program in JavaScript in a runtime environment with a console object:

In HTML documents, a program like this is required for an output:

A simple recursive function to calculate the factorial of a natural number:

An anonymous function (or lambda):

This example shows that, in JavaScript, function closures capture their non-local variables by reference.
Arrow functions were first introduced in 6th Edition - ECMAScript 2015. They shorten the syntax for writing functions in JavaScript. Arrow functions are anonymous, so a variable is needed to refer to them in order to invoke them after their creation, unless surrounded by parenthesis and executed immediately.
Example of arrow function:

In JavaScript, objects can be created as instances of a class.
Object class example:

In JavaScript, objects can be instantiated directly from a function.
Object functional example:

Variadic function demonstration (arguments is a special variable):

Immediately-invoked function expressions are often used to create closures. Closures allow gathering properties and methods in a namespace and making some of them private:

Generator objects (in the form of generator functions) provide a function which can be called, exited, and re-entered while maintaining internal context (statefulness).
JavaScript can export and import from modules:Export example:

Import example:


=== More advanced example ===
This sample code displays various JavaScript features.

The following output should be displayed in the browser window.


== Security ==

JavaScript and the DOM provide the potential for malicious authors to deliver scripts to run on a client computer via the Web. Browser authors minimize this risk using two restrictions. First, scripts run in a sandbox in which they can only perform Web-related actions, not general-purpose programming tasks like creating files. Second, scripts are constrained by the same-origin policy: scripts from one website do not have access to information such as usernames, passwords, or cookies sent to another site. Most JavaScript-related security bugs are breaches of either the same origin policy or the sandbox.
There are subsets of general JavaScript—ADsafe, Secure ECMAScript (SES)—that provide greater levels of security, especially on code created by third parties (such as advertisements). Closure Toolkit is another project for safe embedding and isolation of third-party JavaScript and HTML.Content Security Policy is the main intended method of ensuring that only trusted code is executed on a Web page.


=== Cross-site scripting ===

A common JavaScript-related security problem is cross-site scripting (XSS), a violation of the same-origin policy. XSS vulnerabilities occur when an attacker can cause a target Website, such as an online banking website, to include a malicious script in the webpage presented to a victim. The script in this example can then access the banking application with the privileges of the victim, potentially disclosing secret information or transferring money without the victim's authorization. One important solution to XSS vulnerabilities is HTML sanitization.
Some browsers include partial protection against reflected XSS attacks, in which the attacker provides a URL including malicious script. However, even users of those browsers are vulnerable to other XSS attacks, such as those where the malicious code is stored in a database. Only correct design of Web applications on the server-side can fully prevent XSS.
XSS vulnerabilities can also occur because of implementation mistakes by browser authors.


=== Cross-site request forgery ===

Another cross-site vulnerability is cross-site request forgery (CSRF). In CSRF, code on an attacker's site tricks the victim's browser into taking actions the user did not intend at a target site (like transferring money at a bank). When target sites rely solely on cookies for request authentication, requests originating from code on the attacker's site can carry the same valid login credentials of the initiating user. In general, the solution to CSRF is to require an authentication value in a hidden form field, and not only in the cookies, to authenticate any request that might have lasting effects. Checking the HTTP Referrer header can also help.
"JavaScript hijacking" is a type of CSRF attack in which a <script> tag on an attacker's site exploits a page on the victim's site that returns private information such as JSON or JavaScript. Possible solutions include:

requiring an authentication token in the POST and GET parameters for any response that returns private information.


=== Misplaced trust in the client ===
Developers of client-server applications must recognize that untrusted clients may be under the control of attackers. The application author cannot assume that their JavaScript code will run as intended (or at all) because any secret embedded in the code could be extracted by a determined adversary. Some implications are:

Website authors cannot perfectly conceal how their JavaScript operates because the raw source code must be sent to the client. The code can be obfuscated, but obfuscation can be reverse-engineered.
JavaScript form validation only provides convenience for users, not security. If a site verifies that the user agreed to its terms of service, or filters invalid characters out of fields that should only contain numbers, it must do so on the server, not only the client.
Scripts can be selectively disabled, so JavaScript cannot be relied on to prevent operations such as right-clicking on an image to save it.
It is considered very bad practice to embed sensitive information such as passwords in JavaScript because it can be extracted by an attacker.
Prototype pollution is a runtime vulnerability in which attackers can overwrite arbitrary properties in an object's prototype.


=== Misplaced trust in developers ===
Package management systems such as npm and Bower are popular with JavaScript developers. Such systems allow a developer to easily manage their program's dependencies upon other developers' program libraries. Developers trust that the maintainers of the libraries will keep them secure and up to date, but that is not always the case. A vulnerability has emerged because of this blind trust. Relied-upon libraries can have new releases that cause bugs or vulnerabilities to appear in all programs that rely upon the libraries. Inversely, a library can go unpatched with known vulnerabilities out in the wild. In a study done looking over a sample of 133,000 websites, researchers found 37% of the websites included a library with at least one known vulnerability. "The median lag between the oldest library version used on each website and the newest available version of that library is 1,177 days in ALEXA, and development of some libraries still in active use ceased years ago." Another possibility is that the maintainer of a library may remove the library entirely. This occurred in March 2016 when Azer Koçulu removed his repository from npm. This caused tens of thousands of programs and websites depending upon his libraries to break.


=== Browser and plugin coding errors ===

JavaScript provides an interface to a wide range of browser capabilities, some of which may have flaws such as buffer overflows. These flaws can allow attackers to write scripts that would run any code they wish on the user's system. This code is not by any means limited to another JavaScript application. For example, a buffer overrun exploit can allow an attacker to gain access to the operating system's API with superuser privileges.
These flaws have affected major browsers including Firefox, Internet Explorer, and Safari.Plugins, such as video players, Adobe Flash, and the wide range of ActiveX controls enabled by default in Microsoft Internet Explorer, may also have flaws exploitable via JavaScript (such flaws have been exploited in the past).In Windows Vista, Microsoft has attempted to contain the risks of bugs such as buffer overflows by running the Internet Explorer process with limited privileges. Google Chrome similarly confines its page renderers to their own "sandbox".


=== Sandbox implementation errors ===
Web browsers are capable of running JavaScript outside the sandbox, with the privileges necessary to, for example, create or delete files. Such privileges are not intended to be granted to code from the Web.
Incorrectly granting privileges to JavaScript from the Web has played a role in vulnerabilities in both Internet Explorer and Firefox. In Windows XP Service Pack 2, Microsoft demoted JScript's privileges in Internet Explorer.Microsoft Windows allows JavaScript source files on a computer's hard drive to be launched as general-purpose, non-sandboxed programs (see: Windows Script Host). This makes JavaScript (like VBScript) a theoretically viable vector for a Trojan horse, although JavaScript Trojan horses are uncommon in practice.


=== Hardware vulnerabilities ===
In 2015, a JavaScript-based proof-of-concept implementation of a rowhammer attack was described in a paper by security researchers.In 2017, a JavaScript-based attack via browser was demonstrated that could bypass ASLR. It is called "ASLR⊕Cache" or AnC.In 2018, the paper that announced the Spectre attacks against Speculative Execution in Intel and other processors included a JavaScript implementation.


== Development tools ==
Important tools have evolved with the language.

Every major web browser has built-in web development tools, including a JavaScript debugger.
Static program analysis tools, such as ESLint and JSLint, scan JavaScript code for conformance to a set of standards and guidelines.
Some browsers have built-in profilers. Stand-alone profiling libraries have also been created, such as benchmark.js and jsbench.
Many text editors have syntax highlighting support for JavaScript code.


== Related technologies ==


=== Java ===
A common misconception is that JavaScript is directly related to Java. Both indeed have a C-like syntax (the C language being their most immediate common ancestor language). They are also typically sandboxed, and JavaScript was designed with Java's syntax and standard library in mind. In particular, all Java keywords were reserved in original JavaScript, JavaScript's standard library follows Java's naming conventions, and JavaScript's Math and Date objects are based on classes from Java 1.0.Both languages first appeared in 1995, but Java was developed by James Gosling of Sun Microsystems and JavaScript by Brendan Eich of Netscape Communications.
The differences between the two languages are more prominent than their similarities. Java has static typing, while JavaScript's typing is dynamic. Java is loaded from compiled bytecode, while JavaScript is loaded as human-readable source code. Java's objects are class-based, while JavaScript's are prototype-based. Finally, Java did not support functional programming until Java 8, while JavaScript has done so from the beginning, being influenced by Scheme.


=== JSON ===
JSON is a data format derived from JavaScript; hence the name JavaScript Object Notation. It is a widely-used format supported by many other programming languages.


=== Transpilers ===
Many websites are JavaScript-heavy, so transpilers have been created to convert code written in other languages, which can aid the development process.TypeScript and CoffeeScript are two notable languages that transpile to JavaScript.


=== WebAssembly ===
WebAssembly is a newer language with a bytecode format designed to complement JavaScript, especially the performance-critical portions of web page scripts. All of the major JavaScript engines support WebAssembly, which runs in the same sandbox as regular JavaScript code.
asm.js is a subset of JavaScript that served as the forerunner of WebAssembly.


== References ==


== Sources ==
Dere, Mohan (21 December 2017). "How to integrate create-react-app with all the libraries you need to make a great app". freeCodeCamp. Retrieved 14 June 2018.
Panchal, Krunal (26 April 2022). "Angular vs React Detailed Comparison". Groovy Web. Retrieved 5 June 2023.


== Further reading ==

Flanagan, David. JavaScript: The Definitive Guide. 7th edition. Sebastopol, California: O'Reilly, 2020. ISBN 978-1-491-95202-3.
Haverbeke, Marijn. Eloquent JavaScript. 3rd edition. No Starch Press, 2018. 472 pages. ISBN 978-1593279509.(download)
Zakas, Nicholas. Principles of Object-Oriented JavaScript, 1st edition. No Starch Press, 2014. 120 pages. ISBN 978-1593275402.


== External links ==

The Modern JavaScript Tutorial. A community maintained continuously updated collection of tutorials on the entirety of the language.
JavaScript at Curlie
"JavaScript: The First 20 Years". Retrieved 6 February 2022.Japan is an island country in East Asia. It is in the northwest Pacific Ocean and is bordered on the west by the Sea of Japan, extending from the Sea of Okhotsk in the north toward the East China Sea, Philippine Sea, and Taiwan in the south. Japan is a part of the Ring of Fire, and spans an archipelago of 14,125 islands, with the five main islands being Hokkaido, Honshu (the "mainland"), Shikoku, Kyushu, and Okinawa. Tokyo is the country's capital and largest city, followed by Yokohama, Osaka, Nagoya, Sapporo, Fukuoka, Kobe, and Kyoto.
Japan has over 125 million inhabitants and is the 11th most populous country in the world, as well as one of the most densely populated. About three-fourths of the country's terrain is mountainous, concentrating its highly urbanized population on narrow coastal plains. Japan is divided into 47 administrative prefectures and eight traditional regions. The Greater Tokyo Area is the most populous metropolitan area in the world. Japan has the world's highest life expectancy, although it is experiencing a population decline due to its very low birth rate.
Japan has been inhabited since the Upper Paleolithic period (30,000 BC). Between the fourth and ninth centuries AD, the kingdoms of Japan became unified under an emperor and the imperial court based in Heian-kyō. Beginning in the 12th century, political power was held by a series of military dictators (shōgun) and feudal lords (daimyō), and enforced by a class of warrior nobility (samurai). After a century-long period of civil war, the country was reunified in 1603 under the Tokugawa shogunate, which enacted an isolationist foreign policy. In 1854, a United States fleet forced Japan to open trade to the West, which led to the end of the shogunate and the restoration of imperial power in 1868. In the Meiji period, the Empire of Japan adopted a Western-modeled constitution, and pursued a program of industrialization and modernization. Amidst a rise in militarism and overseas colonization, Japan invaded China in 1937 and entered World War II as an Axis power in 1941. After suffering defeat in the Pacific War and two atomic bombings, Japan surrendered in 1945 and came under a seven-year Allied occupation, during which it adopted a new constitution.
Under the 1947 constitution, Japan has maintained a unitary parliamentary constitutional monarchy with a bicameral legislature, the National Diet. Japan is a developed country and a great power, with one of the largest economies by nominal GDP. Japan has renounced its right to declare war, though it maintains a Self-Defense Force that ranks as one of the world's strongest militaries. A global leader in the automotive, robotics, and electronics industries, the country has made significant contributions to science and technology, and is one of the world's largest exporters and importers. It is part of multiple major international and intergovernmental institutions.
Japan is a cultural superpower as the culture of Japan is well known around the world, including its art, cuisine, film, music, and popular culture, which encompasses prominent manga, anime, and video game industries.


== Etymology ==

The name for Japan in Japanese is written using the kanji 日本 and is pronounced Nippon or Nihon. Before 日本 was adopted in the early 8th century, the country was known in China as Wa (倭, changed in Japan around 757 to 和) and in Japan by the endonym Yamato. Nippon, the original Sino-Japanese reading of the characters, is favored for official uses, including on Japanese banknotes and postage stamps. Nihon is typically used in everyday speech and reflects shifts in Japanese phonology during the Edo period. The characters 日本 mean "sun origin", which is the source of the popular Western epithet "Land of the Rising Sun".The name "Japan" is based on Min or Wu Chinese pronunciations of 日本 and was introduced to European languages through early trade. In the 13th century, Marco Polo recorded the Early Mandarin Chinese pronunciation of the characters 日本國 as Cipangu. The old Malay name for Japan, Japang or Japun, was borrowed from a southern coastal Chinese dialect and encountered by Portuguese traders in Southeast Asia, who brought the word to Europe in the early 16th century. The first version of the name in English appears in a book published in 1577, which spelled the name as Giapan in a translation of a 1565 Portuguese letter.


== History ==


=== Prehistoric to classical history ===
A Paleolithic culture from around 30,000 BC constitutes the first known habitation of the islands of Japan. This was followed from around 14,500 BC (the start of the Jōmon period) by a Mesolithic to Neolithic semi-sedentary hunter-gatherer culture characterized by pit dwelling and rudimentary agriculture. Clay vessels from the period are among the oldest surviving examples of pottery. From around 700 BC, the Japonic-speaking Yayoi people began to enter the archipelago from the Korean Peninsula, intermingling with the Jōmon; the Yayoi period saw the introduction of practices including wet-rice farming, a new style of pottery, and metallurgy from China and Korea. According to legend, Emperor Jimmu (grandson of Amaterasu) founded a kingdom in central Japan in 660 BC, beginning a continuous imperial line.Japan first appears in written history in the Chinese Book of Han, completed in 111 AD. Buddhism was introduced to Japan from Baekje (a Korean kingdom) in 552, but the development of Japanese Buddhism was primarily influenced by China. Despite early resistance, Buddhism was promoted by the ruling class, including figures like Prince Shōtoku, and gained widespread acceptance beginning in the Asuka period (592–710).In 645, the government led by Prince Naka no Ōe and Fujiwara no Kamatari devised and implemented the far-reaching Taika Reforms. The Reform began with land reform, based on Confucian ideas and philosophies from China. It nationalized all land in Japan, to be distributed equally among cultivators, and ordered the compilation of a household registry as the basis for a new system of taxation. The true aim of the reforms was to bring about greater centralization and to enhance the power of the imperial court, which was also based on the governmental structure of China. Envoys and students were dispatched to China to learn about Chinese writing, politics, art, and religion. The Jinshin War of 672, a bloody conflict between Prince Ōama and his nephew Prince Ōtomo, became a major catalyst for further administrative reforms. These reforms culminated with the promulgation of the Taihō Code, which consolidated existing statutes and established the structure of the central and subordinate local governments. These legal reforms created the ritsuryō state, a system of Chinese-style centralized government that remained in place for half a millennium.The Nara period (710–784) marked the emergence of a Japanese state centered on the Imperial Court in Heijō-kyō (modern Nara). The period is characterized by the appearance of a nascent literary culture with the completion of the Kojiki (712) and Nihon Shoki (720), as well as the development of Buddhist-inspired artwork and architecture. A smallpox epidemic in 735–737 is believed to have killed as much as one-third of Japan's population. In 784, Emperor Kanmu moved the capital, settling on Heian-kyō (modern-day Kyoto) in 794. This marked the beginning of the Heian period (794–1185), during which a distinctly indigenous Japanese culture emerged. Murasaki Shikibu's The Tale of Genji and the lyrics of Japan's national anthem "Kimigayo" were written during this time.


=== Feudal era ===
Japan's feudal era was characterized by the emergence and dominance of a ruling class of warriors, the samurai. In 1185, following the defeat of the Taira clan by the Minamoto clan in the Genpei War, samurai Minamoto no Yoritomo established a military government at Kamakura. After Yoritomo's death, the Hōjō clan came to power as regents for the shōgun. The Zen school of Buddhism was introduced from China in the Kamakura period (1185–1333) and became popular among the samurai class. The Kamakura shogunate repelled Mongol invasions in 1274 and 1281 but was eventually overthrown by Emperor Go-Daigo. Go-Daigo was defeated by Ashikaga Takauji in 1336, beginning the Muromachi period (1336–1573). The succeeding Ashikaga shogunate failed to control the feudal warlords (daimyō) and a civil war began in 1467, opening the century-long Sengoku period ("Warring States").During the 16th century, Portuguese traders and Jesuit missionaries reached Japan for the first time, initiating direct commercial and cultural exchange between Japan and the West. Oda Nobunaga used European technology and firearms to conquer many other daimyō; his consolidation of power began what was known as the Azuchi–Momoyama period. After the death of Nobunaga in 1582, his successor, Toyotomi Hideyoshi, unified the nation in the early 1590s and launched two unsuccessful invasions of Korea in 1592 and 1597.Tokugawa Ieyasu served as regent for Hideyoshi's son Toyotomi Hideyori and used his position to gain political and military support. When open war broke out, Ieyasu defeated rival clans in the Battle of Sekigahara in 1600. He was appointed shōgun by Emperor Go-Yōzei in 1603 and established the Tokugawa shogunate at Edo (modern Tokyo). The shogunate enacted measures including buke shohatto, as a code of conduct to control the autonomous daimyō, and in 1639 the isolationist sakoku ("closed country") policy that spanned the two and a half centuries of tenuous political unity known as the Edo period (1603–1868). Modern Japan's economic growth began in this period, resulting in roads and water transportation routes, as well as financial instruments such as futures contracts, banking and insurance of the Osaka rice brokers. The study of Western sciences (rangaku) continued through contact with the Dutch enclave in Nagasaki. The Edo period gave rise to kokugaku ("national studies"), the study of Japan by the Japanese.


=== Modern era ===

The United States Navy sent Commodore Matthew C. Perry to force the opening of Japan to the outside world. Arriving at Uraga with four "Black Ships" in July 1853, the Perry Expedition resulted in the March 1854 Convention of Kanagawa. Subsequent similar treaties with other Western countries brought economic and political crises. The resignation of the shōgun led to the Boshin War and the establishment of a centralized state nominally unified under the emperor (the Meiji Restoration). Adopting Western political, judicial, and military institutions, the Cabinet organized the Privy Council, introduced the Meiji Constitution (November 29, 1890), and assembled the Imperial Diet. During the Meiji period (1868–1912), the Empire of Japan emerged as the most developed states in Asia and as an industrialized world power that pursued military conflict to expand its sphere of influence. After victories in the First Sino-Japanese War (1894–1895) and the Russo-Japanese War (1904–1905), Japan gained control of Taiwan, Korea and the southern half of Sakhalin. The Japanese population doubled from 35 million in 1873 to 70 million by 1935, with a significant shift to urbanization.The early 20th century saw a period of Taishō democracy (1912–1926) overshadowed by increasing expansionism and militarization. World War I allowed Japan, which joined the side of the victorious Allies, to capture German possessions in the Pacific and in China. The 1920s saw a political shift towards statism, a period of lawlessness following the 1923 Great Tokyo Earthquake, the passing of laws against political dissent, and a series of attempted coups. This process accelerated during the 1930s, spawning several radical nationalist groups that shared a hostility to liberal democracy and a dedication to expansion in Asia. In 1931, Japan invaded and occupied Manchuria; following international condemnation of the occupation, it resigned from the League of Nations two years later. In 1936, Japan signed the Anti-Comintern Pact with Nazi Germany; the 1940 Tripartite Pact made it one of the Axis Powers.
The Empire of Japan invaded other parts of China in 1937, precipitating the Second Sino-Japanese War (1937–1945). In 1940, the Empire invaded French Indochina, after which the United States placed an oil embargo on Japan. On December 7–8, 1941, Japanese forces carried out surprise attacks on Pearl Harbor, as well as on British forces in Malaya, Singapore, and Hong Kong, among others, beginning World War II in the Pacific. Throughout areas occupied by Japan during the war, numerous abuses were committed against local inhabitants, with many forced into sexual slavery. After Allied victories during the next four years, which culminated in the Soviet invasion of Manchuria and the atomic bombings of Hiroshima and Nagasaki in 1945, Japan agreed to an unconditional surrender. The war cost Japan its colonies and millions of lives. The Allies (led by the United States) repatriated millions of Japanese settlers from their former colonies and military camps throughout Asia, largely eliminating the Japanese Empire and its influence over the territories it conquered. The Allies convened the International Military Tribunal for the Far East to prosecute Japanese leaders for war crimes.In 1947, Japan adopted a new constitution emphasizing liberal democratic practices. The Allied occupation ended with the Treaty of San Francisco in 1952, and Japan was granted membership in the United Nations in 1956. A period of record growth propelled Japan to become the second-largest economy in the world; this ended in the mid-1990s after the popping of an asset price bubble, beginning the "Lost Decade". In 2011, Japan suffered one of the largest earthquakes in its recorded history, triggering the Fukushima Daiichi nuclear disaster. On May 1, 2019, after the historic abdication of Emperor Akihito, his son Naruhito became Emperor, beginning the Reiwa era.


== Geography ==

Japan comprises 14,125 islands extending along the Pacific coast of Asia. It stretches over 3000 km (1900 mi) northeast–southwest from the Sea of Okhotsk to the East China Sea. The country's five main islands, from north to south, are Hokkaido, Honshu, Shikoku, Kyushu and Okinawa. The Ryukyu Islands, which include Okinawa, are a chain to the south of Kyushu. The Nanpō Islands are south and east of the main islands of Japan. Together they are often known as the Japanese archipelago. As of 2019, Japan's territory is 377,975.24 km2 (145,937.06 sq mi). Japan has the sixth-longest coastline in the world at 29,751 km (18,486 mi). Because of its far-flung outlying islands, Japan has the eighth-largest exclusive economic zone in the world, covering 4,470,000 km2 (1,730,000 sq mi).The Japanese archipelago is 67% forests and 14% agricultural. The primarily rugged and mountainous terrain is restricted for habitation. Thus the habitable zones, mainly in the coastal areas, have very high population densities: Japan is the 40th most densely populated country even without considering that local concentration. Honshu has the highest population density at 450 persons/km2 (1200/sq mi) as of 2010, while Hokkaido has the lowest density of 64.5 persons/km2 as of 2016. As of 2014, approximately 0.5% of Japan's total area is reclaimed land (umetatechi). Lake Biwa is an ancient lake and the country's largest freshwater lake.Japan is substantially prone to earthquakes, tsunami and volcanic eruptions because of its location along the Pacific Ring of Fire. It has the 17th highest natural disaster risk as measured in the 2016 World Risk Index. Japan has 111 active volcanoes. Destructive earthquakes, often resulting in tsunami, occur several times each century; the 1923 Tokyo earthquake killed over 140,000 people. More recent major quakes are the 1995 Great Hanshin earthquake and the 2011 Tōhoku earthquake, which triggered a large tsunami.


=== Climate ===

The climate of Japan is predominantly temperate but varies greatly from north to south. The northernmost region, Hokkaido, has a humid continental climate with long, cold winters and very warm to cool summers. Precipitation is not heavy, but the islands usually develop deep snowbanks in the winter.In the Sea of Japan region on Honshu's west coast, northwest winter winds bring heavy snowfall during winter. In the summer, the region sometimes experiences extremely hot temperatures because of the Foehn. The Central Highland has a typical inland humid continental climate, with large temperature differences between summer and winter. The mountains of the Chūgoku and Shikoku regions shelter the Seto Inland Sea from seasonal winds, bringing mild weather year-round.The Pacific coast features a humid subtropical climate that experiences milder winters with occasional snowfall and hot, humid summers because of the southeast seasonal wind. The Ryukyu and Nanpō Islands have a subtropical climate, with warm winters and hot summers. Precipitation is very heavy, especially during the rainy season. The main rainy season begins in early May in Okinawa, and the rain front gradually moves north. In late summer and early autumn, typhoons often bring heavy rain. According to the Environment Ministry, heavy rainfall and increasing temperatures have caused problems in the agricultural industry and elsewhere. The highest temperature ever measured in Japan, 41.1 °C (106.0 °F), was recorded on July 23, 2018, and repeated on August 17, 2020.


=== Biodiversity ===

Japan has nine forest ecoregions which reflect the climate and geography of the islands. They range from subtropical moist broadleaf forests in the Ryūkyū and Bonin Islands, to temperate broadleaf and mixed forests in the mild climate regions of the main islands, to temperate coniferous forests in the cold, winter portions of the northern islands. Japan has over 90,000 species of wildlife as of 2019, including the brown bear, the Japanese macaque, the Japanese raccoon dog, the small Japanese field mouse, and the Japanese giant salamander.A large network of national parks has been established to protect important areas of flora and fauna as well as 52 Ramsar wetland sites. Four sites have been inscribed on the UNESCO World Heritage List for their outstanding natural value.


=== Environment ===

In the period of rapid economic growth after World War II, environmental policies were downplayed by the government and industrial corporations; as a result, environmental pollution was widespread in the 1950s and 1960s. Responding to rising concerns, the government introduced environmental protection laws in 1970. The oil crisis in 1973 also encouraged the efficient use of energy because of Japan's lack of natural resources.Japan ranks 20th in the 2018 Environmental Performance Index, which measures a country's commitment to environmental sustainability. Japan is the world's fifth-largest emitter of carbon dioxide. As the host and signatory of the 1997 Kyoto Protocol, Japan is under treaty obligation to reduce its carbon dioxide emissions and to take other steps to curb climate change. In 2020, the government of Japan announced a target of carbon-neutrality by 2050. Environmental issues include urban air pollution (NOx, suspended particulate matter, and toxics), waste management, water eutrophication, nature conservation, climate change, chemical management and international co-operation for conservation.


== Government and politics ==

Japan is a unitary state and constitutional monarchy in which the power of the Emperor is limited to a ceremonial role. Executive power is instead wielded by the Prime Minister of Japan and his Cabinet, whose sovereignty is vested in the Japanese people. Naruhito is the Emperor of Japan, having succeeded his father Akihito upon his accession to the Chrysanthemum Throne in 2019.
Japan's legislative organ is the National Diet, a bicameral parliament. It consists of a lower House of Representatives with 465 seats, elected by popular vote every four years or when dissolved, and an upper House of Councillors with 245 seats, whose popularly-elected members serve six-year terms. There is universal suffrage for adults over 18 years of age, with a secret ballot for all elected offices. The prime minister as the head of government has the power to appoint and dismiss Ministers of State, and is appointed by the emperor after being designated from among the members of the Diet. Fumio Kishida is Japan's prime minister; he took office after winning the 2021 Liberal Democratic Party leadership election. The right-wing big tent Liberal Democratic Party has been the dominant party in the country since the 1950s, often called the 1955 System.Historically influenced by Chinese law, the Japanese legal system developed independently during the Edo period through texts such as Kujikata Osadamegaki. Since the late 19th century, the judicial system has been largely based on the civil law of Europe, notably Germany. In 1896, Japan established a civil code based on the German Bürgerliches Gesetzbuch, which remains in effect with post–World War II modifications. The Constitution of Japan, adopted in 1947, is the oldest unamended constitution in the world. Statutory law originates in the legislature, and the constitution requires that the emperor promulgate legislation passed by the Diet without giving him the power to oppose legislation. The main body of Japanese statutory law is called the Six Codes. Japan's court system is divided into four basic tiers: the Supreme Court and three levels of lower courts.According to data from the Inter-Parliamentary Union, the majority of members of the Japanese parliament are male and range in age from 50 to 70. In April 2023, according to Japanese public broadcaster NHK, Ryosuke Takashima, 26, is Japan's youngest-ever mayor.


=== Administrative divisions ===

Japan is divided into 47 prefectures, each overseen by an elected governor and legislature. In the following table, the prefectures are grouped by region:


=== Foreign relations ===

A member state of the United Nations since 1956, Japan is one of the G4 countries seeking reform of the Security Council. Japan is a member of the G7, APEC, and "ASEAN Plus Three", and is a participant in the East Asia Summit. It is the world's fifth-largest donor of official development assistance, donating US$9.2 billion in 2014. In 2024, Japan had the fourth-largest diplomatic network in the world.Japan has close economic and military relations with the United States, with which it maintains a security alliance. The United States is a major market for Japanese exports and a major source of Japanese imports, and is committed to defending the country, with military bases in Japan. Japan is also a member of the Quadrilateral Security Dialogue (more commonly "the Quad"), a multilateral security dialogue reformed in 2017 aiming to limit Chinese influence in the Indo-Pacific region, along with the United States, Australia, and India, reflecting existing relations and patterns of cooperation.Japan is engaged in several territorial disputes with its neighbors. Japan contests Russia's control of the Southern Kuril Islands, which were occupied by the Soviet Union in 1945. South Korea's control of the Liancourt Rocks is acknowledged but not accepted as they are claimed by Japan. Japan has strained relations with China and Taiwan over the Senkaku Islands and the status of Okinotorishima.


=== Military ===

Japan is the second-highest-ranked Asian country in the 2022 Global Peace Index, after Singapore. It spent 1.1% of its total GDP on its defence budget in 2022, and maintained the tenth-largest military budget in the world in 2022. The country's military (the Japan Self-Defense Forces) is restricted by Article 9 of the Japanese Constitution, which renounces Japan's right to declare war or use military force in international disputes. The military is governed by the Ministry of Defense, and primarily consists of the Japan Ground Self-Defense Force, the Japan Maritime Self-Defense Force, and the Japan Air Self-Defense Force. The deployment of troops to Iraq and Afghanistan marked the first overseas use of Japan's military since World War II.The Government of Japan has been making changes to its security policy which include the establishment of the National Security Council, the adoption of the National Security Strategy, and the development of the National Defense Program Guidelines. In May 2014, Prime Minister Shinzo Abe said Japan wanted to shed the passiveness it has maintained since the end of World War II and take more responsibility for regional security. In December 2022, Prime Minister Fumio Kishida further confirmed this trend, instructing the government to increase spending by 65% until 2027. Recent tensions, particularly with North Korea and China, have reignited the debate over the status of the JSDF and its relation to Japanese society.


=== Domestic law enforcement ===

Domestic security in Japan is provided mainly by the prefectural police departments, under the oversight of the National Police Agency. As the central coordinating body for the Prefectural Police Departments, the National Police Agency is administered by the National Public Safety Commission. The Special Assault Team comprises national-level counter-terrorism tactical units that cooperate with territorial-level Anti-Firearms Squads and Counter-NBC Terrorism Squads. The Japan Coast Guard guards territorial waters surrounding Japan and uses surveillance and control countermeasures against smuggling, marine environmental crime, poaching, piracy, spy ships, unauthorized foreign fishing vessels, and illegal immigration.The Firearm and Sword Possession Control Law strictly regulates the civilian ownership of guns, swords, and other weaponry. According to the United Nations Office on Drugs and Crime, among the member states of the UN that report statistics as of 2018, the incidence rates of violent crimes such as murder, abduction, sexual violence, and robbery are very low in Japan.


=== Human rights ===

Japan has faced criticism for not allowing same-sex marriages, despite a majority of Japanese people supporting marriage equality. It is the least developed out of the G7 countries in terms of LGBT equality. Japan legally prohibits racial and religious discrimination under its constitution. Japan is also a signatory to the International Convention on the Elimination of All Forms of Racial Discrimination.


== Economy ==

Japan has the world's fourth-largest economy by nominal GDP, after that of the United States, China and Germany; and the fourth-largest economy by PPP. As of 2021, Japan's labor force is the world's eighth-largest, consisting of over 68.6 million workers. As of 2022, Japan has a low unemployment rate of around 2.6%. Its poverty rate is the second highest among the G7 countries, and exceeds 15.7% of the population. Japan has the highest ratio of public debt to GDP among advanced economies, with national debt estimated at 248% relative to GDP as of 2022. The Japanese yen is the world's third-largest reserve currency after the US dollar and the euro.Japan was the world's fifth-largest exporter and fourth-largest importer in 2022. Its exports amounted to 18.2% of its total GDP in 2021. As of 2022, Japan's main export markets were China (23.9 percent, including Hong Kong) and the United States (18.5 percent). Its main exports are motor vehicles, iron and steel products, semiconductors, and auto parts. Japan's main import markets as of 2022 were China (21.1 percent), the United States (9.9 percent), and Australia (9.8 percent). Japan's main imports are machinery and equipment, fossil fuels, foodstuffs, chemicals, and raw materials for its industries.The Japanese variant of capitalism has many distinct features: keiretsu enterprises are influential, and lifetime employment and seniority-based career advancement are common in the Japanese work environment. Japan has a large cooperative sector, with three of the world's ten largest cooperatives, including the largest consumer cooperative and the largest agricultural cooperative as of 2018. It ranks highly for competitiveness and economic freedom. Japan ranked sixth in the Global Competitiveness Report in 2019. It attracted 31.9 million international tourists in 2019, and was ranked eleventh in the world in 2019 for inbound tourism. The 2021 Travel and Tourism Competitiveness Report ranked Japan first in the world out of 117 countries. Its international tourism receipts in 2019 amounted to $46.1 billion.


=== Agriculture and fishery ===

The Japanese agricultural sector accounts for about 1.2% of the country's total GDP as of 2018. Only 11.5% of Japan's land is suitable for cultivation. Because of this lack of arable land, a system of terraces is used to farm in small areas. This results in one of the world's highest levels of crop yields per unit area, with an agricultural self-sufficiency rate of about 50% as of 2018. Japan's small agricultural sector is highly subsidized and protected. There has been a growing concern about farming as farmers are aging with a difficult time finding successors.Japan ranked seventh in the world in tonnage of fish caught and captured 3,167,610 metric tons of fish in 2016, down from an annual average of 4,000,000 tons over the previous decade. Japan maintains one of the world's largest fishing fleets and accounts for nearly 15% of the global catch, prompting critiques that Japan's fishing is leading to depletion in fish stocks such as tuna. Japan has sparked controversy by supporting commercial whaling.


=== Industry and services ===

Japan has a large industrial capacity and is home to some of the "largest and most technologically advanced producers of motor vehicles, machine tools, steel and nonferrous metals, ships, chemical substances, textiles, and processed foods". Japan's industrial sector makes up approximately 27.5% of its GDP. The country's manufacturing output is the third highest in the world as of 2019.Japan is the third-largest automobile producer in the world as of 2022 and is home to Toyota, the world's largest automobile company by vehicle production. Quantitatively, Japan was the world's largest exporter of cars in 2021, though it was overtaken by China in early 2023. The Japanese shipbuilding industry faces increasing competition from its East Asian neighbors, South Korea and China; as a 2020 government initiative identified this sector as a target for increasing exports.Japan's service sector accounts for about 69.5% of its total economic output as of 2021. Banking, retail, transportation, and telecommunications are all major industries, with companies such as Toyota, Mitsubishi UFJ, -NTT, Aeon, SoftBank, Hitachi, and Itochu listed as among the largest in the world.


=== Science and technology ===

Japan is a leading country in scientific research, particularly in the natural sciences and engineering. The country ranked 13th in the Global Innovation Index in 2023. Relative to gross domestic product, Japan's research and development budget is the second highest in the world, with 867,000 researchers sharing a 19-trillion-yen research and development budget as of 2017. The country has produced twenty-two Nobel laureates in either physics, chemistry or medicine, and three Fields medalists.Japan leads the world in robotics production and use, supplying 45% of the world's 2020 total; down from 55% in 2017. Japan has the second highest number of researchers in science and technology per capita in the world with 14 per 1000 employees.Once considered the strongest in the world, the Japanese consumer electronics industry is in a state of decline as regional competition arises in neighboring East Asian countries such as South Korea and China. However, Japan's video game sector remains a major industry. In 2014, Japan's consumer video game market grossed $9.6 billion, with $5.8 billion coming from mobile gaming. By 2015, Japan had become the world's fourth-largest PC game market, behind only China, the United States, and South Korea.The Japan Aerospace Exploration Agency is Japan's national space agency; it conducts space, planetary, and aviation research, and leads development of rockets and satellites. It is a participant in the International Space Station: the Japanese Experiment Module (Kibō) was added to the station during Space Shuttle assembly flights in 2008. The space probe Akatsuki was launched in 2010 and achieved orbit around Venus in 2015. Japan's plans in space exploration include building a Moon base and landing astronauts by 2030. In 2007, it launched lunar explorer SELENE (Selenological and Engineering Explorer) from Tanegashima Space Center. The largest lunar mission since the Apollo program, its purpose was to gather data on the Moon's origin and evolution. The explorer entered a lunar orbit on October 4, 2007, and was deliberately crashed into the Moon on June 11, 2009.


== Infrastructure ==


=== Transportation ===

Japan has invested heavily in transportation infrastructure. The country has approximately 1,200,000 kilometers (750,000 miles) of roads made up of 1,000,000 kilometers (620,000 miles) of city, town and village roads, 130,000 kilometers (81,000 miles) of prefectural roads, 54,736 kilometers (34,011 miles) of general national highways and 7641 kilometers (4748 miles) of national expressways as of 2017.Since privatization in 1987, dozens of Japanese railway companies compete in regional and local passenger transportation markets; major companies include seven JR enterprises, Kintetsu, Seibu Railway and Keio Corporation. The high-speed Shinkansen (bullet trains) that connect major cities are known for their safety and punctuality.There are 175 airports in Japan as of 2021. The largest domestic airport, Haneda Airport in Tokyo, was Asia's second-busiest airport in 2019. The Keihin and Hanshin superport hubs are among the largest in the world, at 7.98 and 5.22 million TEU respectively as of 2017.


=== Energy ===

As of 2019, 37.1% of energy in Japan was produced from petroleum, 25.1% from coal, 22.4% from natural gas, 3.5% from hydropower and 2.8% from nuclear power, among other sources. Nuclear power was down from 11.2 percent in 2010. By May 2012 all of the country's nuclear power plants had been taken offline because of ongoing public opposition following the Fukushima Daiichi nuclear disaster in March 2011, though government officials continued to try to sway public opinion in favor of returning at least some to service. The Sendai Nuclear Power Plant restarted in 2015, and since then several other nuclear power plants have been restarted. Japan lacks significant domestic reserves and has a heavy dependence on imported energy. The country has therefore aimed to diversify its sources and maintain high levels of energy efficiency.


=== Water supply and sanitation ===

Responsibility for the water and sanitation sector is shared between the Ministry of Health, Labour and Welfare, in charge of water supply for domestic use; the Ministry of Land, Infrastructure, Transport and Tourism, in charge of water resources development as well as sanitation; the Ministry of the Environment, in charge of ambient water quality and environmental preservation; and the Ministry of Internal Affairs and Communications, in charge of performance benchmarking of utilities. Access to an improved water source is universal in Japan. About 98% of the population receives piped water supply from public utilities.


== Demographics ==

Japan has a population of almost 125 million, of whom nearly 122 million are Japanese nationals (2022 estimates). A small population of foreign residents makes up the remainder. 
Japan is the world's fastest aging country and has the highest proportion of elderly citizens of any country, comprising one-third of its total population; this is the result of a post–World War II baby boom, which was followed by an increase in life expectancy and a decrease in birth rates. Japan has a total fertility rate of 1.4, which is below the replacement rate of 2.1, and is among the world's lowest; it has a median age of 48.4, the highest in the world. As of 2020, over 28.7 percent of the population is over 65, or more than one in four out of the Japanese population. As a growing number of younger Japanese are not marrying or remaining childless, Japan's population is expected to drop to around 88 million by 2065.The changes in demographic structure have created several social issues, particularly a decline in the workforce population and an increase in the cost of social security benefits. The Government of Japan projects that there will be almost one elderly person for each person of working age by 2060. Immigration and birth incentives are sometimes suggested as a solution to provide younger workers to support the nation's aging population. On April 1, 2019, Japan's revised immigration law was enacted, protecting the rights of foreign workers to help reduce labor shortages in certain sectors.In 2022, 92% of the total Japanese population lived in cities. The capital city, Tokyo, has a population of 13.9 million (2022). It is part of the Greater Tokyo Area, the biggest metropolitan area in the world with 38,140,000 people (2016). Japan is an ethnically and culturally homogeneous society, with the Japanese people forming 98.1% of the country's population. Minority ethnic groups in the country include the indigenous Ainu and Ryukyuan people. Zainichi Koreans, Chinese, Filipinos, Brazilians mostly of Japanese descent, and Peruvians mostly of Japanese descent are also among Japan's small minority groups. Burakumin make up a social minority group.


=== Religion ===

Japan's constitution guarantees full religious freedom. Upper estimates suggest that 84–96 percent of the Japanese population subscribe to Shinto as its indigenous religion. However, these estimates are based on people affiliated with a temple, rather than the number of true believers. Many Japanese people practice both Shinto and Buddhism; they can either identify with both religions or describe themselves as non-religious or spiritual. The level of participation in religious ceremonies as a cultural tradition remains high, especially during festivals and occasions such as the first shrine visit of the New Year. Taoism and Confucianism from China have also influenced Japanese beliefs and customs.Christianity was first introduced into Japan by Jesuit missions starting in 1549. Today, 1% to 1.5% of the population are Christians. Throughout the latest century, Western customs originally related to Christianity (including Western style weddings, Valentine's Day and Christmas) have become popular as secular customs among many Japanese.About 90% of those practicing Islam in Japan are foreign-born migrants as of 2016. As of 2018 there were an estimated 105 mosques and 200,000 Muslims in Japan, 43,000 of which were Japanese nationals. Other minority religions include Hinduism, Judaism, and Baháʼí Faith, as well as the animist beliefs of the Ainu.


=== Languages ===

The Japanese language is Japan's de facto national language and the primary written and spoken language of most people in the country. Japanese writing uses kanji (Chinese characters) and two sets of kana (syllabaries based on cursive script and radicals used by kanji), as well as the Latin alphabet and Arabic numerals. English has taken a major role in Japan as a business and international link language. As a result, the prevalence of English in the educational system has increased, with English classes becoming mandatory at all levels of the Japanese school system by 2020. Japanese Sign Language is the primary sign language used in Japan and has gained some official recognition, but its usage has been historically hindered by discriminatory policies and a lack of educational support.Besides Japanese, the Ryukyuan languages (Amami, Kunigami, Okinawan, Miyako, Yaeyama, Yonaguni), part of the Japonic language family, are spoken in the Ryukyu Islands chain. Few children learn these languages, but local governments have sought to increase awareness of the traditional languages. The Ainu language, which is a language isolate, is moribund, with only a few native speakers remaining as of 2014. Additionally, a number of other languages are taught and used by ethnic minorities, immigrant communities, and a growing number of foreign-language students, such as Korean (including a distinct Zainichi Korean dialect), Chinese and Portuguese.


=== Education ===

Since the 1947 Fundamental Law of Education, compulsory education in Japan comprises elementary and junior high school, which together last for nine years. Almost all children continue their education at a three-year senior high school. The top-ranking university in the country is the University of Tokyo. Starting in April 2016, various schools began the academic year with elementary school and junior high school integrated into one nine-year compulsory schooling program; MEXT plans for this approach to be adopted nationwide.The Programme for International Student Assessment (PISA) coordinated by the OECD ranks the knowledge and skills of Japanese 15-year-olds as the third best in the world. Japan is one of the top-performing OECD countries in reading literacy, math, and sciences with the average student scoring 520 and has one of the world's highest-educated labor forces among OECD countries. It spent roughly 3.1% of its total GDP on education as of 2018, below the OECD average of 4.9%. In 2021, the country ranked third for the percentage of 25 to 64-year-olds that have attained tertiary education with 55.6%. Approximately 65% of Japanese aged 25 to 34 have some form of tertiary education qualification, with bachelor's degrees being held by 34.2% of Japanese aged 25 to 64, the second most in the OECD after South Korea. Japanese women are more highly educated than the men: 59 percent of women possess a university degree, compared to 52 percent of men.


=== Health ===

Health care in Japan is provided by national and local governments. Payment for personal medical services is offered through a universal health insurance system that provides relative equality of access, with fees set by a government committee. People without insurance through employers can participate in a national health insurance program administered by local governments. Since 1973, all elderly persons have been covered by government-sponsored insurance.Japan spent 10.9% of its total GDP on healthcare in 2020. In 2020, the overall life expectancy in Japan at birth was 84.62 years (81.64 years for males and 87.74 years for females), the highest in the world; while it had a very low infant mortality rate (2 per 1,000 live births). Since 1981, the principal cause of death in Japan is cancer, which accounted for 27% of the total deaths in 2018—followed by cardiovascular diseases, which led to 15% of the deaths. Japan has one of the world's highest suicide rates, which is considered a major social issue. Another significant public health issue is smoking among Japanese men. However, Japan has the lowest rate of heart disease in the OECD, and the lowest level of dementia among developed countries.


== Culture ==

Contemporary Japanese culture combines influences from Asia, Europe, and North America. Traditional Japanese arts include crafts such as ceramics, textiles, lacquerware, swords and dolls; performances of bunraku, kabuki, noh, dance, and rakugo; and other practices, the tea ceremony, ikebana, martial arts, calligraphy, origami, onsen, Geisha and games. Japan has a developed system for the protection and promotion of both tangible and intangible Cultural Properties and National Treasures. Twenty-two sites have been inscribed on the UNESCO World Heritage List, eighteen of which are of cultural significance. Japan is considered a cultural superpower.


=== Art and architecture ===

The history of Japanese painting exhibits synthesis and competition between native Japanese esthetics and imported ideas. The interaction between Japanese and European art has been significant: for example ukiyo-e prints, which began to be exported in the 19th century in the movement known as Japonism, had a significant influence on the development of modern art in the West, most notably on post-Impressionism.Japanese architecture is a combination of local and other influences. It has traditionally been typified by wooden or mud plaster structures, elevated slightly off the ground, with tiled or thatched roofs. The Shrines of Ise have been celebrated as the prototype of Japanese architecture. Traditional housing and many temple buildings see the use of tatami mats and sliding doors that break down the distinction between rooms and indoor and outdoor space. Since the 19th century, Japan has incorporated much of Western modern architecture into construction and design. It was not until after World War II that Japanese architects made an impression on the international scene, firstly with the work of architects like Kenzō Tange and then with movements like Metabolism.


=== Literature and philosophy ===

The earliest works of Japanese literature include the Kojiki and Nihon Shoki chronicles and the Man'yōshū poetry anthology, all from the 8th century and written in Chinese characters. In the early Heian period, the system of phonograms known as kana (hiragana and katakana) was developed. The Tale of the Bamboo Cutter is considered the oldest extant Japanese narrative. An account of court life is given in The Pillow Book by Sei Shōnagon, while The Tale of Genji by Murasaki Shikibu is often described as the world's first novel.During the Edo period, the chōnin ("townspeople") overtook the samurai aristocracy as producers and consumers of literature. The popularity of the works of Saikaku, for example, reveals this change in readership and authorship, while Bashō revivified the poetic tradition of the Kokinshū with his haikai (haiku) and wrote the poetic travelogue Oku no Hosomichi. The Meiji era saw the decline of traditional literary forms as Japanese literature integrated Western influences. Natsume Sōseki and Mori Ōgai were significant novelists in the early 20th century, followed by Ryūnosuke Akutagawa, Jun'ichirō Tanizaki, Kafū Nagai and, more recently, Haruki Murakami and Kenji Nakagami. Japan has two Nobel Prize-winning authors – Yasunari Kawabata (1968) and Kenzaburō Ōe (1994).Japanese philosophy has historically been a fusion of both foreign, particularly Chinese and Western, and uniquely Japanese elements. In its literary forms, Japanese philosophy began about fourteen centuries ago. Confucian ideals remain evident in the Japanese concept of society and the self, and in the organization of the government and the structure of society. Buddhism has profoundly impacted Japanese psychology, metaphysics, and esthetics.


=== Performing arts ===

Japanese music is eclectic and diverse. Many instruments, such as the koto, were introduced in the 9th and 10th centuries. The popular folk music, with the guitar-like shamisen, dates from the 16th century. Western classical music, introduced in the late 19th century, forms an integral part of Japanese culture. Kumi-daiko (ensemble drumming) was developed in postwar Japan and became very popular in North America. Popular music in post-war Japan has been heavily influenced by American and European trends, which has led to the evolution of J-pop. Karaoke is a significant cultural activity.The four traditional theaters from Japan are noh, kyōgen, kabuki, and bunraku. Noh is one of the oldest continuous theater traditions in the world.


=== Holidays ===

Officially, Japan has 16 national, government-recognized holidays. Public holidays in Japan are regulated by the Public Holiday Law (国民の祝日に関する法律, Kokumin no Shukujitsu ni Kansuru Hōritsu) of 1948. Beginning in 2000, Japan implemented the Happy Monday System, which moved a number of national holidays to Monday in order to obtain a long weekend. The national holidays in Japan are New Year's Day on January 1, Coming of Age Day on the second Monday of January, National Foundation Day on February 11, The Emperor's Birthday on February 23, Vernal Equinox Day on March 20 or 21, Shōwa Day on April 29, Constitution Memorial Day on May 3, Greenery Day on May 4, Children's Day on May 5, Marine Day on the third Monday of July, Mountain Day on August 11, Respect for the Aged Day on the third Monday of September, Autumnal Equinox on September 23 or 24, Health and Sports Day on the second Monday of October, Culture Day on November 3, and Labor Thanksgiving Day on November 23.


=== Cuisine ===

Japanese cuisine offers a vast array of regional specialties that use traditional recipes and local ingredients. Seafood and Japanese rice or noodles are traditional staples. Japanese curry, since its introduction to Japan from British India, is so widely consumed that it can be termed a national dish, alongside ramen and sushi. Traditional Japanese sweets are known as wagashi. Ingredients such as red bean paste and mochi are used. More modern-day tastes include green tea ice cream.Popular Japanese beverages include sake, which is a brewed rice beverage that typically contains 14–17% alcohol and is made by multiple fermentation of rice. Beer has been brewed in Japan since the late 17th century. Green tea is produced in Japan and prepared in forms such as matcha, used in the Japanese tea ceremony.


=== Media ===

According to the 2015 NHK survey on television viewing in Japan, 79 percent of Japanese watch television daily. Japanese television dramas are viewed both within Japan and internationally; other popular shows are in the genres of variety shows, comedy, and news programs. Many Japanese media franchises have gained considerable global popularity and are among the world's highest-grossing media franchises. Japanese newspapers are among the most circulated in the world as of 2016.Japan has one of the oldest and largest film industries globally. Ishirō Honda's Godzilla became an international icon of Japan and spawned an entire subgenre of kaiju films, as well as the longest-running film franchise in history. Japanese comics, known as manga, developed in the mid-20th century and have become popular worldwide. A large number of manga series have become some of the best-selling comics series of all time, rivalling the American comics industry. Japanese animated films and television series, known as anime, were largely influenced by Japanese manga and have become highly popular globally.


=== Sports ===

Traditionally, sumo is considered Japan's national sport. Japanese martial arts such as judo and kendo are taught as part of the compulsory junior high school curriculum. Baseball is the most popular sport in the country. Japan's top professional league, Nippon Professional Baseball (NPB), was established in 1936. Since the establishment of the Japan Professional Football League (J.League) in 1992, association football gained a wide following. The country co-hosted the 2002 FIFA World Cup with South Korea. Japan has one of the most successful football teams in Asia, winning the Asian Cup four times, and the FIFA Women's World Cup in 2011. Golf is also popular in Japan.In motorsport, Japanese automotive manufacturers have been successful in multiple different categories, with titles and victories in series such as Formula One, MotoGP, and the World Rally Championship. Drivers from Japan have victories at the Indianapolis 500 and the 24 Hours of Le Mans as well as podium finishes in Formula One, in addition to success in domestic championships. Super GT is the most popular national racing series in Japan, while Super Formula is the top-level domestic open-wheel series. The country hosts major races such as the Japanese Grand Prix.Japan hosted the Summer Olympics in Tokyo in 1964 and the Winter Olympics in Sapporo in 1972 and Nagano in 1998. The country hosted the official 2006 Basketball World Championship and co-hosted the 2023 Basketball World Championship. Tokyo hosted the 2020 Summer Olympics in 2021, making Tokyo the first Asian city to host the Olympics twice. The country gained the hosting rights for the official Women's Volleyball World Championship on five occasions, more than any other country. Japan is the most successful Asian Rugby Union country and hosted the 2019 IRB Rugby World Cup.


== See also ==
Index of Japan-related articles
Outline of Japan


== Notes ==


== References ==


== External links ==

Government

JapanGov – The Government of Japan (in English)
Prime Minister of Japan and His Cabinet Official website (in English)
The Imperial Household Agency – official site of the Imperial House of Japan (archived November 20, 2016)
National Diet LibraryGeneral information

Japan from UCB Libraries GovPubs (archived April 21, 2009)
Japan from BBC News
Japan from the OECD
 Geographic data related to Japan at OpenStreetMapComputer programming or coding is the composition of sequences of instructions, called programs, that computers can follow to perform tasks. It involves designing and implementing algorithms, step-by-step specifications of procedures, by writing code in one or more programming languages. Programmers typically use high-level programming languages that are more easily intelligible to humans than machine code, which is directly executed by the central processing unit. Proficient programming usually requires expertise in several different subjects, including knowledge of the application domain, details of programming languages and generic code libraries, specialized algorithms, and formal logic.
Auxiliary tasks accompanying and related to programming include analyzing requirements, testing, debugging (investigating and fixing problems), implementation of build systems, and management of derived artifacts, such as programs' machine code. While these are sometimes considered programming, often the term software development is used for this larger overall process – with the terms programming, implementation, and coding reserved for the writing and editing of code per se. Sometimes software development is known as software engineering, especially when it employs formal methods or follows an engineering design process.


== History ==

Programmable devices have existed for centuries. As early as the 9th century, a programmable music sequencer was invented by the Persian Banu Musa brothers, who described an automated mechanical flute player in the Book of Ingenious Devices. In 1206, the Arab engineer Al-Jazari invented a programmable drum machine where a musical mechanical automaton could be made to play different rhythms and drum patterns, via pegs and cams. In 1801, the Jacquard loom could produce entirely different weaves by changing the "program" – a series of pasteboard cards with holes punched in them.
Code-breaking algorithms have also existed for centuries. In the 9th century, the Arab mathematician Al-Kindi described a cryptographic algorithm for deciphering encrypted code, in A Manuscript on Deciphering Cryptographic Messages. He gave the first description of cryptanalysis by frequency analysis, the earliest code-breaking algorithm.The first computer program is generally dated to 1843 when mathematician Ada Lovelace published an algorithm to calculate a sequence of Bernoulli numbers, intended to be carried out by Charles Babbage's Analytical Engine.
In the 1880s, Herman Hollerith invented the concept of storing data in machine-readable form. Later a control panel (plug board) added to his 1906 Type I Tabulator allowed it to be programmed for different jobs, and by the late 1940s, unit record equipment such as the IBM 602 and IBM 604, were programmed by control panels in a similar way, as were the first electronic computers. However, with the concept of the stored-program computer introduced in 1949, both programs and data were stored and manipulated in the same way in computer memory.


=== Machine language ===
Machine code was the language of early programs, written in the instruction set of the particular machine, often in binary notation. Assembly languages were soon developed that let the programmer specify instruction in a text format (e.g., ADD X, TOTAL), with abbreviations for each operation code and meaningful names for specifying addresses. However, because an assembly language is little more than a different notation for a machine language,  two machines with different instruction sets also have different assembly languages.


=== Compiler languages ===

High-level languages made the process of developing a program simpler and more understandable, and less bound to the underlying hardware. 
The first compiler related tool, the A-0 System, was developed in 1952 by Grace Hopper, who also coined the term 'compiler'. FORTRAN, the first widely used high-level language to have a functional implementation, came out in 1957, and many other languages were soon developed—in particular, COBOL aimed at commercial data processing, and Lisp for computer research.
These compiled languages allow the programmer to write programs in terms that are syntactically richer, and more capable of abstracting the code, making it easy to target varying machine instruction sets via compilation declarations and heuristics. Compilers harnessed the power of computers to make programming easier by allowing programmers to specify calculations by entering a formula using infix notation.


=== Source code entry ===

Programs were mostly entered using punched cards or paper tape. By the late 1960s, data storage devices and computer terminals became inexpensive enough that programs could be created by typing directly into the computers. Text editors were also developed that allowed changes and corrections to be made much more easily than with punched cards.


== Modern programming ==


=== Quality requirements ===

Whatever the approach to development may be, the final program must satisfy some fundamental properties. The following properties are among the most important:
Reliability: how often the results of a program are correct. This depends on conceptual correctness of algorithms and minimization of programming mistakes, such as mistakes in resource management (e.g., buffer overflows and race conditions) and logic errors (such as division by zero or off-by-one errors).
Robustness: how well a program anticipates problems due to errors (not bugs). This includes situations such as incorrect, inappropriate or corrupt data, unavailability of needed resources such as memory, operating system services, and network connections, user error, and unexpected power outages.
Usability: the ergonomics of a program: the ease with which a person can use the program for its intended purpose or in some cases even unanticipated purposes. Such issues can make or break its success even regardless of other issues. This involves a wide range of textual, graphical, and sometimes hardware elements that improve the clarity, intuitiveness, cohesiveness, and completeness of a program's user interface.
Portability: the range of computer hardware and operating system platforms on which the source code of a program can be compiled/interpreted and run. This depends on differences in the programming facilities provided by the different platforms, including hardware and operating system resources, expected behavior of the hardware and operating system, and availability of platform-specific compilers (and sometimes libraries) for the language of the source code.
Maintainability: the ease with which a program can be modified by its present or future developers in order to make improvements or to customize, fix bugs and security holes, or adapt it to new environments. Good practices during initial development make the difference in this regard. This quality may not be directly apparent to the end user but it can significantly affect the fate of a program over the long term.
Efficiency/performance: Measure of system resources a program consumes (processor time, memory space, slow devices such as disks, network bandwidth and to some extent even user interaction): the less, the better. This also includes careful management of resources, for example cleaning up temporary files and eliminating memory leaks. This is often discussed under the shadow of a chosen programming language. Although the language certainly affects performance, even slower languages, such as Python, can execute programs instantly from a human perspective. Speed, resource usage, and performance are important for programs that bottleneck the system, but efficient use of programmer time is also important and is related to cost: more hardware may be cheaper.


=== Readability of source code ===
In computer programming, readability refers to the ease with which a human reader can comprehend the purpose, control flow, and operation of source code. It affects the aspects of quality above, including portability, usability and most importantly maintainability.
Readability is important because programmers spend the majority of their time reading, trying to understand, reusing, and modifying existing source code, rather than writing new source code. Unreadable code often leads to bugs, inefficiencies, and duplicated code. A study found that a few simple readability transformations made code shorter and drastically reduced the time to understand it.Following a consistent programming style often helps readability. However, readability is more than just programming style. Many factors, having little or nothing to do with the ability of the computer to efficiently compile and execute the code, contribute to readability. Some of these factors include:

Different indent styles (whitespace)
Comments
Decomposition
Naming conventions for objects (such as variables, classes, functions, procedures, etc.)The presentation aspects of this (such as indents, line breaks, color highlighting, and so on) are often handled by the source code editor, but the content aspects reflect the programmer's talent and skills.
Various visual programming languages have also been developed with the intent to resolve readability concerns by adopting non-traditional approaches to code structure and display. Integrated development environments (IDEs) aim to integrate all such help. Techniques like Code refactoring can enhance readability.


=== Algorithmic complexity ===
The academic field and the engineering practice of computer programming are both largely concerned with discovering and implementing the most efficient algorithms for a given class of problems. For this purpose, algorithms are classified into orders using so-called Big O notation, which expresses resource use, such as execution time or memory consumption, in terms of the size of an input. Expert programmers are familiar with a variety of well-established algorithms and their respective complexities and use this knowledge to choose algorithms that are best suited to the circumstances.


=== Methodologies ===
The first step in most formal software development processes is requirements analysis, followed by testing to determine value modeling, implementation, and failure elimination (debugging). There exist a lot of different approaches for each of those tasks. One approach popular for requirements analysis is Use Case analysis. Many programmers use forms of Agile software development where the various stages of formal software development are more integrated together into short cycles that take a few weeks rather than years. There are many approaches to the Software development process.
Popular modeling techniques include Object-Oriented Analysis and Design (OOAD) and Model-Driven Architecture (MDA). The Unified Modeling Language (UML) is a notation used for both the OOAD and MDA.
A similar technique used for database design is Entity-Relationship Modeling (ER Modeling).
Implementation techniques include imperative languages (object-oriented or procedural), functional languages, and logic languages.


=== Measuring language usage ===
It is very difficult to determine what are the most popular modern programming languages. Methods of measuring programming language popularity include: counting the number of job advertisements that mention the language, the number of books sold and courses teaching the language (this overestimates the importance of newer languages), and estimates of the number of existing lines of code written in the language (this underestimates the number of users of business languages such as COBOL).
Some languages are very popular for particular kinds of applications, while some languages are regularly used to write many different kinds of applications. For example, COBOL is still strong in corporate data centers often on large mainframe computers, Fortran in engineering applications, scripting languages in Web development, and C in embedded software. Many applications use a mix of several languages in their construction and use.  New languages are generally designed around the syntax of a prior language with new functionality added, (for example C++ adds object-orientation to C, and Java adds memory management and bytecode to C++, but as a result, loses efficiency and the ability for low-level manipulation).


=== Debugging ===

Debugging is a very important task in the software development process since having defects in a program can have significant consequences for its users. Some languages are more prone to some kinds of faults because their specification does not require compilers to perform as much checking as other languages. Use of a static code analysis tool can help detect some possible problems. Normally the first step in debugging is to attempt to reproduce the problem. This can be a non-trivial task, for example as with parallel processes or some unusual software bugs. Also, specific user environment and usage history can make it difficult to reproduce the problem.
After the bug is reproduced, the input of the program may need to be simplified to make it easier to debug. For example, when a bug in a compiler can make it crash when parsing some large source file, a simplification of the test case that results in only few lines from the original source file can be sufficient to reproduce the same crash. Trial-and-error/divide-and-conquer is needed: the programmer will try to remove some parts of the original test case and check if the problem still exists. When debugging the problem in a GUI, the programmer can try to skip some user interaction from the original problem description and check if remaining actions are sufficient for bugs to appear. Scripting and breakpointing is also part of this process.
Debugging is often done with IDEs. Standalone debuggers like GDB are also used, and these often provide less of a visual environment, usually using a command line. Some text editors such as Emacs allow GDB to be invoked through them, to provide a visual environment.


== Programming languages ==

Different programming languages support different styles of programming (called programming paradigms). The choice of language used is subject to many considerations, such as company policy, suitability to task, availability of third-party packages, or individual preference. Ideally, the programming language best suited for the task at hand will be selected. Trade-offs from this ideal involve finding enough programmers who know the language to build a team, the availability of compilers for that language, and the efficiency with which programs written in a given language execute. Languages form an approximate spectrum from "low-level" to "high-level"; "low-level" languages are typically more machine-oriented and faster to execute, whereas "high-level" languages are more abstract and easier to use but execute less quickly. It is usually easier to code in "high-level" languages than in "low-level" ones.
Programming languages are essential for software development. They are the building blocks for all software, from the simplest applications to the most sophisticated ones.
Allen Downey, in his book How To Think Like A Computer Scientist, writes:

The details look different in different languages, but a few basic instructions appear in just about every language:
Input: Gather data from the keyboard, a file, or some other device.
Output: Display data on the screen or send data to a file or other device.
Arithmetic: Perform basic arithmetical operations like addition and multiplication.
Conditional Execution: Check for certain conditions and execute the appropriate sequence of statements.
Repetition: Perform some action repeatedly, usually with some variation.Many computer languages provide a mechanism to call functions provided by shared libraries. Provided the functions in a library follow the appropriate run-time conventions (e.g., method of passing arguments), then these functions may be written in any other language.


== Programmers ==

Computer programmers are those who write computer software. Their jobs usually involve:

Although programming has been presented in the media as a somewhat mathematical subject, some research shows that good programmers have strong skills in natural human languages, and that learning to code is similar to learning a foreign language.


== See also ==

Code smell
Computer networking
Competitive programming
Programming best practices
Systems programming


== References ==


=== Sources ===
Ceruzzi, Paul E. (1998). History of Computing. Cambridge, Massachusetts: MIT Press. ISBN 9780262032551 – via EBSCOhost.
Evans, Claire L. (2018). Broad Band: The Untold Story of the Women Who Made the Internet. New York: Portfolio/Penguin. ISBN 9780735211759.
Gürer, Denise (1995). "Pioneering Women in Computer Science" (PDF). Communications of the ACM. 38 (1): 45–54. doi:10.1145/204865.204875. S2CID 6626310. Archived (PDF) from the original on October 9, 2022.
Smith, Erika E. (2013). "Recognizing a Collective Inheritance through the History of Women in Computing". CLCWeb: Comparative Literature & Culture: A WWWeb Journal. 15 (1): 1–9 – via EBSCOhost.


== Further reading ==
A.K. Hartmann, Practical Guide to Computer Simulations, Singapore: World Scientific (2009)
A. Hunt, D. Thomas, and W. Cunningham, The Pragmatic Programmer. From Journeyman to Master, Amsterdam: Addison-Wesley Longman (1999)
Brian W. Kernighan, The Practice of Programming, Pearson (1999)
Weinberg, Gerald M., The Psychology of Computer Programming, New York: Van Nostrand Reinhold (1971)
Edsger W. Dijkstra, A Discipline of Programming, Prentice-Hall (1976)
O.-J. Dahl, E.W.Dijkstra, C.A.R. Hoare, Structured Programming, Academic Press (1972)
David Gries, The Science of Programming, Springer-Verlag (1981)


== External links ==

 Media related to Computer programming at Wikimedia Commons
 Quotations related to Programming at Wikiquote
Software engineering at CurlieC# ( see SHARP) is a general-purpose high-level programming language supporting multiple paradigms. C# encompasses static typing,: 4  strong typing, lexically scoped, imperative, declarative, functional, generic,: 22  object-oriented (class-based), and component-oriented programming disciplines.The C# programming language was designed by Anders Hejlsberg from Microsoft in 2000 and was later approved as an international standard by Ecma (ECMA-334) in 2002 and ISO/IEC (ISO/IEC 23270 and 20619) in 2003. Microsoft introduced C# along with .NET Framework and Visual Studio, both of which were closed-source. At the time, Microsoft had no open-source products. Four years later, in 2004, a free and open-source project called Mono began, providing a cross-platform compiler and runtime environment for the C# programming language. A decade later, Microsoft released Visual Studio Code (code editor), Roslyn (compiler), and the unified .NET platform (software framework), all of which support C# and are free, open-source, and cross-platform. Mono also joined Microsoft but was not merged into .NET.
As of November 2023, the most recent stable version of the language is C# 12.0, which was released in 2023 in .NET 8.0.


== Design goals ==
The Ecma standard lists these design goals for C#:
The language is intended to be a simple, modern, general-purpose, object-oriented programming language.
The language, and implementations thereof, should provide support for software engineering principles such as strong type checking, array bounds checking,: 58–59  detection of attempts to use uninitialized variables, and automatic garbage collection.: 563  Software robustness, durability, and programmer productivity are important.
The language is intended for use in developing software components suitable for deployment in distributed environments.
Portability is very important for source code and programmers, especially those already familiar with C and C++.
Support for internationalization: 314  is very important.
C# is intended to be suitable for writing applications for both hosted and embedded systems, ranging from the very large that use sophisticated operating systems, down to the very small having dedicated functions.
Although C# applications are intended to be economical with regard to memory and processing power requirements, the language was not intended to compete directly on performance and size with C or assembly language.


== History ==
During the development of the .NET Framework, the class libraries were originally written using a managed code compiler system called "Simple Managed C" (SMC). In January 1999, Anders Hejlsberg formed a team to build a new language at the time called Cool, which stood for "C-like Object Oriented Language". Microsoft had considered keeping the name "Cool" as the final name of the language, but chose not to do so for trademark reasons. By the time the .NET project was publicly announced at the July 2000 Professional Developers Conference, the language had been renamed C#, and the class libraries and ASP.NET runtime had been ported to C#.
Hejlsberg is C#'s principal designer and lead architect at Microsoft, and was previously involved with the design of Turbo Pascal, Embarcadero Delphi (formerly CodeGear Delphi, Inprise Delphi and Borland Delphi), and Visual J++. In interviews and technical papers he has stated that flaws in most major programming languages (e.g. C++, Java, Delphi, and Smalltalk) drove the fundamentals of the Common Language Runtime (CLR), which, in turn, drove the design of the C# language itself.
James Gosling, who created the Java programming language in 1994, and Bill Joy, a co-founder of Sun Microsystems, the originator of Java, called C# an "imitation" of Java; Gosling further said that "[C# is] sort of Java with reliability, productivity and security deleted." 
In July 2000, Hejlsberg said that C# is "not a Java clone" and is "much closer to C++" in its design.Since the release of C# 2.0 in November 2005, the C# and Java languages have evolved on increasingly divergent trajectories, becoming two quite different languages. One of the first major departures came with the addition of generics to both languages, with vastly different implementations. C# makes use of reification to provide "first-class" generic objects that can be used like any other class, with code generation performed at class-load time.
Furthermore, C# has added several major features to accommodate functional-style programming, culminating in the LINQ extensions released with C# 3.0 and its supporting framework of lambda expressions, extension methods, and anonymous types.  These features enable C# programmers to use functional programming techniques, such as closures, when it is advantageous to their application. The LINQ extensions and the functional imports help developers reduce the amount of boilerplate code that is included in common tasks like querying a database, parsing an xml file, or searching through a data structure, shifting the emphasis onto the actual program logic to help improve readability and maintainability.C# used to have a mascot called Andy (named after Anders Hejlsberg). It was retired on January 29, 2004.C# was originally submitted to the ISO/IEC JTC 1 subcommittee SC 22 for review, under ISO/IEC 23270:2003, was withdrawn and was then approved under ISO/IEC 23270:2006. The 23270:2006 is withdrawn under 23270:2018 and approved with this version.


=== Name ===
Microsoft first used the name C# in 1988 for a variant of the C language designed for incremental compilation. That project was not completed, and the name was later reused.

The name "C sharp" was inspired by the musical notation whereby a sharp symbol indicates that the written note should be made a semitone higher in pitch.
This is similar to the language name of C++, where "++" indicates that a variable should be incremented by 1 after being evaluated. The sharp symbol also resembles a ligature of four "+" symbols (in a two-by-two grid), further implying that the language is an increment of C++.Due to technical limitations of display (standard fonts, browsers, etc.) and the fact that the sharp symbol (U+266F ♯ MUSIC SHARP SIGN (&sharp;)) is not present on most keyboard layouts, the number sign (U+0023 # NUMBER SIGN (&num;)) was chosen to approximate the sharp symbol in the written name of the programming language.
This convention is reflected in the ECMA-334 C# Language Specification.The "sharp" suffix has been used by a number of other .NET languages that are variants of existing languages, including J# (a .NET language also designed by Microsoft that is derived from Java 1.1), A# (from Ada), and the functional programming language F#. The original implementation of Eiffel for .NET was called Eiffel#, a name retired since the full Eiffel language is now supported. The suffix has also been used for libraries, such as Gtk# (a .NET wrapper for GTK and other GNOME libraries) and Cocoa# (a wrapper for Cocoa).


=== Versions ===


== Syntax ==

The core syntax of the C# language is similar to that of other C-style languages such as C, C++ and Java, particularly:

Semicolons are used to denote the end of a statement.
Curly brackets are used to group statements. Statements are commonly grouped into methods (functions), methods into classes, and classes into namespaces.
Variables are assigned using an equals sign, but compared using two consecutive equals signs.
Square brackets are used with arrays, both to declare them and to get a value at a given index in one of them.


== Distinguishing features ==

Some notable features of C# that distinguish it from C, C++, and Java where noted, are:


=== Portability ===
By design, C# is the programming language that most directly reflects the underlying Common Language Infrastructure (CLI).  Most of its intrinsic types correspond to value-types implemented by the CLI framework. However, the language specification does not state the code generation requirements of the compiler: that is, it does not state that a C# compiler must target a Common Language Runtime, or generate Common Intermediate Language (CIL), or generate any other specific format. Some C# compilers can also generate machine code like traditional compilers of C++ or Fortran.


=== Typing ===
C# supports strongly, implicitly typed variable declarations with the keyword var,: 470  and implicitly typed arrays with the keyword new[] followed by a collection initializer.: 80 : 58 Its type system is split into two families: Value types, like the built-in numeric types and user-defined structs, which are automatically handed over as copies when used as parameters, and reference types, including arrays, instances of classes, and strings, which only hand over a pointer to the respective object. Due to their special handling of the equality operator, strings will nevertheless behave as if they were values, for all practical purposes. You can even use them as case labels. Where necessary, value types will be boxed automatically.C# supports a strict Boolean data type, bool. Statements that take conditions, such as while and if, require an expression of a type that implements the true operator, such as the Boolean type. While C++ also has a Boolean type, it can be freely converted to and from integers, and expressions such as if (a) require only that a is convertible to bool, allowing a to be an int, or a pointer. C# disallows this "integer meaning true or false" approach, on the grounds that forcing programmers to use expressions that return exactly bool can prevent certain types of programming mistakes such as if (a = b) (use of assignment = instead of equality ==).
C# is more type safe than C++. The only implicit conversions by default are those that are considered safe, such as widening of integers. This is enforced at compile-time, during JIT, and, in some cases, at runtime. No implicit conversions occur between Booleans and integers, nor between enumeration members and integers (except for literal 0, which can be implicitly converted to any enumerated type). Any user-defined conversion must be explicitly marked as explicit or implicit, unlike C++ copy constructors and conversion operators, which are both implicit by default.
C# has explicit support for covariance and contravariance in generic types,: 144 : 23  unlike C++ which has some degree of support for contravariance simply through the semantics of return types on virtual methods.
Enumeration members are placed in their own scope.
The C# language does not allow for global variables or functions. All methods and members must be declared within classes. Static members of public classes can substitute for global variables and functions.
Local variables cannot shadow variables of the enclosing block, unlike C and C++.


=== Metaprogramming ===
Metaprogramming can be achieved in several ways:

Reflection is supported through .NET APIs, which enable scenarios such as type metadata inspection and dynamic method invocation.
Expression trees represent code as an abstract syntax tree, where each node is an expression that can be inspected or executed. This enables dynamic modification of executable code at runtime. Expression trees introduce some homoiconicity to the language.
Attributes are metadata that can be attached to types, members, or entire assemblies, equivalent to annotations in Java. Attributes are accessible both to the compiler and to code through reflection. Many of native attributes duplicate the functionality of GCC's and VisualC++'s platform-dependent preprocessor directives.
System.Reflection.Emit namespace, which contains classes that emit metadata and CIL (types, assemblies, etc) at runtime.
The .NET Compiler Platform (Roslyn) provides API access to language compilation services, allowing for the compilation of C# code from within .NET applications. It exposes APIs for syntactic (lexical) analysis of code, semantic analysis, dynamic compilation to CIL, and code emission.
Source generators, a feature of the Roslyn C# compiler, enable compile time metaprogramming. During the compilation process, developers can inspect the code being compiled with the compiler's API and pass additional generated C# source code to be compiled.


=== Methods and functions ===
A method in C# is a member of a class that can be invoked as a function (a sequence of instructions), rather than the mere value-holding capability of a field (i.e. class or instance variable). As in other syntactically similar languages, such as C++ and ANSI C, the signature of a method is a declaration comprising in order: any optional accessibility keywords (such as private), the explicit specification of its return type (such as int, or the keyword void if no value is returned), the name of the method, and finally, a parenthesized sequence of comma-separated parameter specifications, each consisting of a parameter's type, its formal name and optionally, a default value to be used whenever none is provided. Different from most other languages, call-by-reference parameters have to be marked both at the function definition  and at the calling site, and you can choose between ref and out, the latter allowing handing over an uninitialized variable which will have a definite value on return. Additionally, you can specify a variable-sized argument list by applying the params keyword to the last parameter. Certain specific kinds of methods, such as those that simply get or set a field's value by returning or assigning it, do not require an explicitly stated full signature, but in the general case, the definition of a class includes the full signature declaration of its methods.Like C++, and unlike Java, C# programmers must use the scope modifier keyword virtual to allow methods to be overridden by subclasses.Extension methods in C# allow programmers to use static methods as if they were methods from a class's method table, allowing programmers to add methods to an object that they feel should exist on that object and its derivatives.: 103–105 : 202–203 The type dynamic allows for run-time method binding, allowing for JavaScript-like method calls and run-time object composition.: 114–118 C# has support for strongly-typed function pointers via the keyword delegate. Like the Qt framework's pseudo-C++ signal and slot, C# has semantics specifically surrounding publish-subscribe style events, though C# uses delegates to do so.
C# offers Java-like synchronized method calls, via the attribute [MethodImpl(MethodImplOptions.Synchronized)], and has support for mutually-exclusive locks via the keyword lock.


=== Property ===
C# supports classes with properties. The properties can be simple accessor functions with a backing field, or implement arbitrary getter and setter functions. A property is read-only if there's no setter. Like with fields, there can be class and instance properties. The underlying methods can be virtual or abstract like any other method.Since C# 3.0 the syntactic sugar of auto-implemented properties is available, where the accessor (getter) and mutator (setter) encapsulate operations on a single attribute of a class.


=== Namespace ===
A C# namespace provides the same level of code isolation as a Java package or a C++ namespace, with very similar rules and features to a package. Namespaces can be imported with the "using" syntax.


=== Memory access ===
In C#, memory address pointers can only be used within blocks specifically marked as unsafe, and programs with unsafe code need appropriate permissions to run. Most object access is done through safe object references, which always either point to a "live" object or have the well-defined null value; it is impossible to obtain a reference to a "dead" object (one that has been garbage collected), or to a random block of memory. An unsafe pointer can point to an instance of an unmanaged value type that does not contain any references to objects subject to garbage collections such as class instances, arrays or strings. Code that is not marked as unsafe can still store and manipulate pointers through the System.IntPtr type, but it cannot dereference them.
Managed memory cannot be explicitly freed; instead, it is automatically garbage collected. Garbage collection addresses the problem of memory leaks by freeing the programmer of responsibility for releasing memory that is no longer needed in most cases. Code that retains references to objects longer than is required can still experience higher memory usage than necessary, however once the final reference to an object is released the memory is available for garbage collection.


=== Exception ===
A range of standard exceptions are available to programmers. Methods in standard libraries regularly throw system exceptions in some circumstances and the range of exceptions thrown is normally documented. Custom exception classes can be defined for classes allowing handling to be put in place for particular circumstances as needed.Checked exceptions are not present in C# (in contrast to Java). This has been a conscious decision based on the issues of scalability and versionability.


=== Polymorphism ===
Unlike C++, C# does not support multiple inheritance, although a class can implement any number of "interfaces" (fully abstract classes). This was a design decision by the language's lead architect to avoid complications and to simplify architectural requirements throughout CLI.
When implementing multiple interfaces that contain a method with the same name and taking parameters of the same type in the same order (i.e. the same signature), similar to Java, C# allows both a single method to cover all interfaces and if necessary specific methods for each interface.
However, unlike Java, C# supports operator overloading.C# also offers function overloading (a.k.a. ad-hoc-polymorphism).Since version 2.0, C# offers parametric polymorphism, i.e. classes with arbitrary or constrained type parameters, e.g. List<T>, a variable-sized array which only can contain elements of type T. There are certain kinds of constraints you can specify for the type parameters: Has to be type X (or one derived from it), has to implement a certain interface, has to be a reference type, has to be a value type, has to implement a public parameterless constructor. Most of them can be combined, and you can specify any number of interfaces.


=== Language Integrated Query (LINQ) ===
C# has the ability to utilize LINQ through the .NET Framework. A developer can query a variety of data sources, provided IEnumerable<T> interface is implemented on the object. This includes XML documents, an ADO.NET dataset, and SQL databases.Using LINQ in C# brings advantages like IntelliSense support, strong filtering capabilities, type safety with compile error checking ability, and consistency for querying data over a variety of sources.  There are several different language structures that can be utilized with C# and LINQ and they are query expressions, lambda expressions, anonymous types, implicitly typed variables, extension methods, and object initializers.LINQ has two syntaxes: query syntax and method syntax. However, the compiler always converts the query syntax to method syntax at compile time.


=== Functional programming ===
Though primarily an imperative language, C# always adds functional features over time, for example:

Functions as first-class citizen – C# 1.0 delegates
Higher-order functions – C# 1.0 together with delegates
Anonymous functions – C# 2 anonymous delegates and C# 3 lambdas expressions
Closures – C# 2 together with anonymous delegates and C# 3 together with lambdas expressions
Type inference – C# 3 with implicitly typed local variables var and C# 9 target-typed new expressions new()
List comprehension – C# 3 LINQ
Tuples – .NET Framework 4.0 but it becomes popular when C# 7.0 introduced a new tuple type with language support
Nested functions – C# 7.0
Pattern matching – C# 7.0
Immutability – C# 7.2 readonly struct C# 9 record types and Init only setters
Type classes – C# 12 roles/extensions (in development)


== Common type system ==
C# has a unified type system. This unified type system is called Common Type System (CTS).: Part 2, Chapter 4: The Type System A unified type system implies that all types, including primitives such as integers, are subclasses of the System.Object class. For example, every type inherits a ToString() method.


=== Categories of data types ===
CTS separates data types into two categories:
Reference types
Value typesInstances of value types neither have referential identity nor referential comparison semantics. Equality and inequality comparisons for value types compare the actual data values within the instances, unless the corresponding operators are overloaded. Value types are derived from System.ValueType, always have a default value, and can always be created and copied. Some other limitations on value types are that they cannot derive from each other (but can implement interfaces) and cannot have an explicit default (parameterless) constructor because they already have an implicit one which initializes all contained data to the type-dependent default value (0, null, or alike). Examples of value types are all primitive types, such as int (a signed 32-bit integer), float (a 32-bit IEEE floating-point number), char (a 16-bit Unicode code unit), and System.DateTime (identifies a specific point in time with nanosecond precision). Other examples are enum (enumerations) and struct (user defined structures).
In contrast, reference types have the notion of referential identity, meaning that each instance of a reference type is inherently distinct from every other instance, even if the data within both instances is the same. This is reflected in default equality and inequality comparisons for reference types, which test for referential rather than structural equality, unless the corresponding operators are overloaded (such as the case for System.String). Some operations are not always possible, such as creating an instance of a reference type, copying an existing instance, or performing a value comparison on two existing instances. Though specific reference types can provide such services by exposing a public constructor or implementing a corresponding interface (such as ICloneable or IComparable). Examples of reference types are object (the ultimate base class for all other C# classes), System.String (a string of Unicode characters), and System.Array (a base class for all C# arrays).
Both type categories are extensible with user-defined types.


=== Boxing and unboxing ===
Boxing is the operation of converting a value-type object into a value of a corresponding reference type. Boxing in C# is implicit.
Unboxing is the operation of converting a value of a reference type (previously boxed) into a value of a value type. Unboxing in C# requires an explicit type cast. A boxed object of type T can only be unboxed to a T (or a nullable T).Example:


== Libraries ==
The C# specification details a minimum set of types and class libraries that the compiler expects to have available. In practice, C# is most often used with some implementation of the Common Language Infrastructure (CLI), which is standardized as ECMA-335 Common Language Infrastructure (CLI).
In addition to the standard CLI specifications, there are many commercial and community class libraries that build on top of the .NET framework libraries to provide additional functionality.C# can make calls to any library included in the List of .NET libraries and frameworks.


== Examples ==


=== Hello World ===
The following is a very simple C# program, a version of the classic "Hello world" example using the top-level statements feature introduced in C# 9:

For code written as C# 8 or lower, the entry point logic of a program must be written in a Main method inside a type:

This code will display this text in the console window:

Hello, world!

Each line has a purpose:

The above line imports all types in the System namespace. For example, the Console class used later in the source code is defined in the System namespace, meaning it can be used without supplying the full name of the type (which includes the namespace).

This line is a comment; it describes and documents the code for the programmer(s).
Above is a class definition for the Program class. Everything that follows between the pair of braces describes that class.The curly brackets demarcate the boundaries of a code block. In this first instance, they are marking the start and end of the Program class.
This declares the class member method where the program begins execution. The .NET runtime calls the Main method. Unlike in Java, the Main method does not need the public keyword, which tells the compiler that the method can be called from anywhere by any class. Writing static void Main(string[] args) is equivalent to writing private static void Main(string[] args). The static keyword makes the method accessible without an instance of Program. Each console application's Main entry point must be declared static otherwise the program would require an instance of Program, but any instance would require a program. To avoid that irresolvable circular dependency, C# compilers processing console applications (like that above) report an error if there is no static Main method. The void keyword declares that Main has no return value. (Note, however, that short programs can be written using Top Level Statements introduced in C# 9, as mentioned earlier.) 

This line writes the output. Console is a static class in the System namespace. It provides an interface to the standard input, output, and error streams for console applications. The program calls the Console method WriteLine, which displays on the console a line with the argument, the string "Hello, world!".


=== GUI ===
A Windows GUI example:

This example is similar to the previous example, except that it generates a dialog box that contains the message "Hello, World!" instead of writing it to the console.


=== Images ===
Another useful library is the System.Drawing library, which is used to programmatically draw images. For example:This will create an image that is identical to that stored in "Image.png".


== Standardization and licensing ==
In August 2001, Microsoft, Hewlett-Packard and Intel co-sponsored the submission of specifications for C# as well as the Common Language Infrastructure (CLI) to the standards organization Ecma International. In December 2001, ECMA released ECMA-334 C# Language Specification. C# became an ISO/IEC standard in 2003 (ISO/IEC 23270:2003 - Information technology — Programming languages — C#). ECMA had previously adopted equivalent specifications as the 2nd edition of C#, in December 2002. In June 2005, ECMA approved edition 3 of the C# specification, and updated ECMA-334. Additions included partial classes, anonymous methods, nullable types, and generics (somewhat similar to C++ templates). In July 2005, ECMA submitted to ISO/IEC JTC 1/SC 22, via the latter's Fast-Track process, the standards and related TRs. This process usually takes 6–9 months.
The C# language definition and the CLI are standardized under ISO/IEC and Ecma standards that provide reasonable and non-discriminatory licensing protection from patent claims.
Microsoft initially agreed not to sue open-source developers for violating patents in non-profit projects for the part of the framework that is covered by the Open Specification Promise. Microsoft has also agreed not to enforce patents relating to Novell products against Novell's paying customers with the exception of a list of products that do not explicitly mention C#, .NET or Novell's implementation of .NET (The Mono Project). However, Novell maintained that Mono does not infringe any Microsoft patents. Microsoft also made a specific agreement not to enforce patent rights related to the Moonlight browser plugin, which depends on Mono, provided it is obtained through Novell.A decade later, Microsoft began developing free, open-source, and cross-platform tooling for C#, namely Visual Studio Code, .NET Core, and Roslyn. Mono joined Microsoft as a project of Xamarin, a Microsoft subsidiary.


== Implementations ==
Microsoft is leading the development of the open-source reference C# compilers and set of tools. The first compiler, Roslyn, compiles into intermediate language (IL), and the second one, RyuJIT, is a JIT (just-in-time) compiler, which is dynamic and does on-the-fly optimization and compiles the IL into native code for the front-end of the CPU. RyuJIT is open source and written in C++. Roslyn is entirely written in managed code (C#), has been opened up and functionality surfaced as APIs.  It is thus enabling developers to create refactoring and diagnostics tools. Two branches of official implementation are .NET Framework (closed-source, Windows-only) and .NET Core (open-source, cross-platform); they eventually converged into one open-source implementation: .NET 5.0. At .NET Framework 4.6, a new JIT compiler replaced the former.Other C# compilers (some of which include an implementation of the Common Language Infrastructure and .NET class libraries):

Mono, a Microsoft-sponsored project provides an open-source C# compiler, a complete open-source implementation of the CLI (including the required framework libraries as they appear in the ECMA specification,) and a nearly complete implementation of the NET class libraries up to .NET Framework 3.5.
The Elements tool chain from RemObjects includes RemObjects C#, which compiles C# code to .NET's Common Intermediate Language, Java bytecode, Cocoa, Android bytecode, WebAssembly, and native machine code for Windows, macOS, and Linux.
The DotGNU project (now discontinued) also provided an open-source C# compiler, a nearly complete implementation of the Common Language Infrastructure including the required framework libraries as they appear in the ECMA specification, and subset of some of the remaining Microsoft proprietary .NET class libraries up to .NET 2.0 (those not documented or included in the ECMA specification, but included in Microsoft's standard .NET Framework distribution).The Unity game engine uses C# as its primary scripting language. The Godot game engine has implemented an optional C# module thanks to a donation of $24,000 from Microsoft.


== See also ==


== Notes ==


== References ==


=== Citations ===


=== Sources ===
Albahari, Joseph (2022). C# 10 in a Nutshell (First ed.). O'Reilly. ISBN 978-1-098-12195-2.
Archer, Tom (2001). "Part 2, Chapter 4: The Type System". Inside C#. Redmond, Washington: Microsoft Press. ISBN 0-7356-1288-9.
Novák, István; Velvart, Andras; Granicz, Adam; Balássy, György; Hajdrik, Attila; Sellers, Mitchel; Hillar, Gastón C.; Molnár, Ágnes; Kanjilal, Joydip (2010). Visual Studio 2010 and .NET 4 Six-in-One. Wrox Press. ISBN 978-0470499481.
Skeet, Jon (2019). C# in Depth (Fourth ed.). Manning. ISBN 978-1617294532.


== Further reading ==
Drayton, Peter; Albahari, Ben; Neward, Ted (2002). C# Language Pocket Reference. O'Reilly. ISBN 0-596-00429-X.
Petzold, Charles (2002). Programming Microsoft Windows with C#. Microsoft Press. ISBN 0-7356-1370-2.


== External links ==
C# Language Specification
C# Programming Guide
ISO C# Language Specification
C# Compiler Platform ("Roslyn") source codeA laptop computer or notebook computer, also known as a laptop or notebook, is a small, portable personal computer (PC). Laptops typically have a clamshell form factor with a flat panel screen (usually 11–17 in or 280–430 mm in diagonal size) on the inside of the upper lid and an alphanumeric keyboard and pointing device (such as a trackpad and/or trackpoint) on the inside of the lower lid, although 2-in-1 PCs with a detachable keyboard are often marketed as laptops or as having a "laptop mode". Most of the computer's internal hardware is fitted inside the lower lid enclosure under the keyboard, although many laptops have a built-in webcam at the top of the screen and some modern ones even feature a touch-screen display. In most cases, unlike tablet computers which run on mobile operating systems, laptops tend to run on desktop operating systems, which were originally developed for desktop computers.
Laptops run on both an AC power supply and a rechargeable battery pack and can be folded shut for convenient storage and transportation, making them suitable for mobile use. Laptops are used in a variety of settings, such as at work (especially on business trips), in education, for playing games, web browsing, for personal multimedia, and for general home computer use.
The names "laptop" and "notebook" refer to the fact that the computer can be practically placed on (or on top of) the user's lap and can be used similarly to a notebook. As of 2022, in American English, the terms "laptop" and "notebook" are used interchangeably; in other dialects of English, one or the other may be preferred. The term "notebook" originally referred to a type of portable computer that was smaller and lighter than mainstream laptops of the time, but has since come to mean the same thing and no longer refers to any specific size.
Laptops combine many of the input/output components and capabilities of a desktop computer into a single unit, including a display screen, small speakers, a keyboard, and a pointing device (such as a touch pad or pointing stick). Most modern laptops include a built-in webcam and microphone, and many also have a touchscreen. Laptops can be powered by an internal battery or an external power supply by using an AC adapter. Hardware specifications may vary significantly between different types, models, and price points.
Design elements, form factors, and construction can also vary significantly between models depending on the intended use. Examples of specialized models of laptops include rugged notebooks for use in construction or military applications, as well as low-production-cost laptops such as those from the One Laptop per Child (OLPC) organization, which incorporate features like solar charging and semi-flexible components not found on most laptop computers. Portable computers, which later developed into modern laptops, were originally considered to be a small niche market, mostly for specialized field applications, such as in the military, for accountants, or traveling sales representatives. As portable computers evolved into modern laptops, they became widely used for a variety of purposes.


== History ==

As the personal computer (PC) became feasible in 1971, the idea of a portable personal computer soon followed. A "personal, portable information manipulator" was imagined by Alan Kay at Xerox PARC in 1968, and described in his 1972 paper as the "Dynabook". The IBM Special Computer APL Machine Portable (SCAMP) was demonstrated in 1973. This prototype was based on the IBM PALM processor. The IBM 5100, the first commercially available portable computer, appeared in September 1975, and was based on the SCAMP prototype.
As 8-bit CPU machines became widely accepted, the number of portables increased rapidly. The first "laptop-sized notebook computer" was the Epson HX-20, invented (patented) by Suwa Seikosha's Yukio Yokozawa in July 1980, introduced at the COMDEX computer show in Las Vegas by Japanese company Seiko Epson in 1981, and released in July 1982. It had an LCD screen, a rechargeable battery, and a calculator-size printer, in a 1.6 kg (3.5 lb) chassis, the size of an A4 notebook. It was described as a "laptop" and "notebook" computer in its patent.
The portable micro computer Portal of the French company R2E Micral CCMC officially appeared in September 1980 at the Sicob show in Paris. It was a portable microcomputer designed and marketed by the studies and developments department of R2E Micral at the request of the company CCMC specializing in payroll and accounting. It was based on an Intel 8085 processor, 8-bit, clocked at 2 MHz. It was equipped with a central 64 KB RAM, a keyboard with 58 alphanumeric keys and 11 numeric keys (separate blocks), a 32-character screen, a floppy disk: capacity = 140,000 characters, of a thermal printer: speed = 28 characters / second, an asynchronous channel, asynchronous channel, a 220 V power supply. It weighed 12 kg and its dimensions were 45 × 45 × 15 cm. It provided total mobility. Its operating system was aptly named Prologue.

The Osborne 1, released in 1981, was a luggable computer that used the Zilog Z80 CPU and weighed 24.5 pounds (11.1 kg). It had no battery, a 5 in (13 cm) cathode-ray tube (CRT) screen, and dual 5.25 in (13.3 cm) single-density floppy drives. Both Tandy/RadioShack and Hewlett-Packard (HP) also produced portable computers of varying designs during this period. The first laptops using the flip form factor appeared in the early 1980s. The Dulmont Magnum was released in Australia in 1981–82, but was not marketed internationally until 1984–85. The US$8,150 (equivalent to $25,730 in 2023) GRiD Compass 1101, released in 1982, was used at NASA and by the military, among others. The Sharp PC-5000, Ampere and Gavilan SC released in 1983. The Gavilan SC was described as a "laptop" by its manufacturer, while the Ampere had a modern clamshell design. The Toshiba T1100 won acceptance not only among PC experts but the mass market as a way to have PC portability.From 1983 onward, several new input techniques were developed and included in laptops, including the touch pad (Gavilan SC, 1983), the pointing stick (IBM ThinkPad 700, 1992), and handwriting recognition (Linus Write-Top, 1987). Some CPUs, such as the 1990 Intel i386SL, were designed to use minimum power to increase battery life of portable computers and were supported by dynamic power management features such as Intel SpeedStep and AMD PowerNow! in some designs.
Some laptops in the 1980s used red plasma displays, could only be used when connected to AC power, and had a built in power supply.The development of memory cards was driven in the 1980s by the need for an alternative to floppy disk drives that had lower power consumption, had less weight and occupied less volume in laptops. The Personal Computer Memory Card International Association (PCMCIA) was an industry association created in 1989 to promote a standard for memory cards in PCs. The specification for PCMCIA type I cards, later renamed PC Cards, was first released in 1990.
Displays reached 640x480 (VGA) resolution by 1988 (Compaq SLT/286), and color screens started becoming a common upgrade in 1991, with increases in resolution and screen size occurring frequently until the introduction of 17" screen laptops in 2003. Hard drives started to be used in portables, encouraged by the introduction of 3.5" drives in the late 1980s, and became common in laptops starting with the introduction of 2.5" and smaller drives around 1990; capacities have typically lagged behind physically larger desktop drives.
Common resolutions of laptop webcams are 720p (HD), and in lower-end laptops 480p. The earliest known laptops with 1080p (Full HD) webcams like the Samsung 700G7C were released in the early 2010s.Optical disc drives became common in full-size laptops around 1997; this initially consisted of CD-ROM drives, which were supplanted by CD-R, DVD, and Blu-ray drives with writing capability over time. Starting around 2011, the trend shifted against internal optical drives, and as of 2022, they have largely disappeared, but are still readily available as external peripherals.


== Etymology ==
While the terms laptop and notebook are used interchangeably today, there are some questions as to the original etymology and specificity of either term. The term laptop was coined in 1983 to describe a mobile computer which could be used on one's lap, and to distinguish these devices from earlier and much heavier portable computers (informally called "luggables"). The term notebook appears to have gained currency somewhat later as manufacturers started producing even smaller portable devices, further reducing their weight and size and incorporating a display roughly the size of A4 paper; these were marketed as notebooks to distinguish them from bulkier mainstream or desktop replacement laptops.


== Types of laptops ==
Since the introduction of portable computers during the late 1970s, their form has changed significantly, spawning a variety of visually and technologically differing subclasses. Except where there is a distinct legal trademark around a term (notably, Ultrabook), there are rarely hard distinctions between these classes and their usage has varied over time and between different sources. Since the late 2010s, the use of more specific terms has become less common, with sizes distinguished largely by the size of the screen.


=== Smaller and larger laptops ===

There were in the past a number of marketing categories for smaller and larger laptop computers; these included "subnotebook" models, low cost "netbooks", and "ultra-mobile PCs" where the size class overlapped with devices like smartphone and handheld tablets, and "Desktop replacement" laptops for machines notably larger and heavier than typical to operate more powerful processors or graphics hardware. All of these terms have fallen out of favor as the size of mainstream laptops has gone down and their capabilities have gone up; except for niche models, laptop sizes tend to be distinguished by the size of the screen, and for more powerful models, by any specialized purpose the machine is intended for, such as a "gaming laptop" or a "mobile workstation" for professional use.


=== Convertible, hybrid, 2-in-1 ===

The latest trend of technological convergence in the portable computer industry spawned a broad range of devices, which combined features of several previously separate device types. The hybrids, convertibles, and 2-in-1s emerged as crossover devices, which share traits of both tablets and laptops. All such devices have a touchscreen display designed to allow users to work in a tablet mode, using either multi-touch gestures or a stylus/digital pen.
Convertibles are devices with the ability to conceal a hardware keyboard. Keyboards on such devices can be flipped, rotated, or slid behind the back of the chassis, thus transforming from a laptop into a tablet. Hybrids have a keyboard detachment mechanism, and due to this feature, all critical components are situated in the part with the display. 2-in-1s can have a hybrid or a convertible form, often dubbed 2-in-1 detachable and 2-in-1 convertibles respectively, but are distinguished by the ability to run a desktop OS, such as Windows 10. 2-in-1s are often marketed as laptop replacement tablets.2-in-1s are often very thin, around 10 millimetres (0.39 in), and light devices with a long battery life. 2-in-1s are distinguished from mainstream tablets as they feature an x86-architecture CPU (typically a low- or ultra-low-voltage model), such as the Intel Core i5, run a full-featured desktop OS like Windows 10, and have a number of typical laptop I/O ports, such as USB 3 and Mini DisplayPort.
2-in-1s are designed to be used not only as a media consumption device but also as valid desktop or laptop replacements, due to their ability to run desktop applications, such as Adobe Photoshop. It is possible to connect multiple peripheral devices, such as a mouse, keyboard, and several external displays to a modern 2-in-1.
Microsoft Surface Pro-series devices and Surface Book are examples of modern 2-in-1 detachable, whereas Lenovo Yoga-series computers are a variant of 2-in-1 convertibles. While the older Surface RT and Surface 2 have the same chassis design as the Surface Pro, their use of ARM processors and Windows RT do not classify them as 2-in-1s, but as hybrid tablets. Similarly, a number of hybrid laptops run a mobile operating system, such as Android. These include Asus's Transformer Pad devices, examples of hybrids with a detachable keyboard design, which do not fall in the category of 2-in-1s.


=== Rugged laptop ===

A rugged laptop is designed to reliably operate in harsh usage conditions such as strong vibrations, extreme temperatures, and wet or dusty environments. Rugged laptops are bulkier, heavier, and much more expensive than regular laptops, and thus are seldom seen in regular consumer use.


== Hardware ==

The basic components of laptops function identically to their desktop counterparts. Traditionally they were miniaturized and adapted to mobile use, The design restrictions on power, size, and cooling of laptops limit the maximum performance of laptop parts compared to that of desktop components, although that difference has increasingly narrowed.In general, laptop components are not intended to be replaceable or upgradable by the end-user, except for components that can be detached; in the past, batteries and optical drives were commonly exchangeable. Some laptops feature socketed processors with sockets such as the Socket G2, but many laptops use processors that are soldered to the motherboard. Many laptops come with RAM and storage that is soldered to the motherboard and cannot be easily replaced. This restriction is one of the major differences between laptops and desktop computers, because the large "tower" cases used in desktop computers are designed so that new motherboards, hard disks, sound cards, RAM, and other components can be added. Memory and storage can often be upgraded with some disassembly, but with the most compact laptops, there may be no upgradeable components at all.The following sections summarizes the differences and distinguishing features of laptop components in comparison to desktop personal computer parts.


=== Display ===
The typical laptop has a screen that, when unfolded, is upright to the user.


==== Screen technology ====
Laptop screens most commonly employ liquid-crystal display (LCD) technology, although use of OLED panels has risen substantially since 2020. The display interfaces with the motherboard using the Low-voltage differential signaling (LVDS) or embedded DisplayPort protocol.


==== Surface finish ====
Externally, it can be a glossy or a matte (anti-glare) screen.


==== Sizes ====
In the past, there was a broader range of marketing terms (both formal and informal) to distinguish between different sizes of laptops. These included Netbooks, subnotebooks, Ultra-mobile PC, and Desktop replacement computers; these are sometimes still used informally, although they are essentially dead in terms of manufacturer marketing.
As of 2021, mainstream consumer laptops tend to come with 11", 13" or 15"-16" screens; 14" models are more popular among business machines. Larger and smaller models are available, but less common – there is no clear dividing line in minimum or maximum size. Machines small enough to be handheld (screens in the 6–8" range) can be marketed either as very small laptops or "handheld PCs", while the distinction between the largest laptops and "All-in-One" desktops is whether they fold for travel.


==== Resolution ====
Having a higher resolution display allows more items to fit onscreen at a time, improving the user's ability to multitask, although at the higher resolutions on smaller screens, the resolution may only serve to display sharper graphics and text rather than increasing the usable area. Since the introduction of the MacBook Pro with Retina display in 2012, there has been an increase in the availability of "HiDPI" (or high Pixel density) displays; as of 2022, this is generally considered to be anything higher than 1920 pixels wide. This has increasingly converged around 4K (3840-pixel-wide) resolutions.
External displays can be connected to most laptops, with most models supporting at least one. The use of technology such as USB4 (section Alternate Mode partner specifications). DisplayPort Alt Mode has been utilized to charge a laptop and provide display output over one USB-C Cable.


==== Refresh rates ====
Most laptop displays have a maximum refresh rate of 60 Hz. The Dell M17x and Samsung 700G7A, both released in 2011, were among the first laptops to feature a 120 Hz refresh rate, and more such laptops have appeared in the years since.


=== Central processing unit (CPU) ===
A laptop's CPU  has advanced power-saving features and produces less heat than one intended purely for desktop use. Mainstream laptop CPUs made after 2018 have at least two processor cores, often four cores, and sometimes more, with 6 and 8 cores becoming more common.
For the low price and mainstream performance, there is no longer a significant performance difference between laptop and desktop CPUs, but at the high end, the fastest desktop CPUs still substantially outperform the fastest laptop processors, at the expense of massively higher power consumption and heat generation; the fastest laptop processors top out at 56 watts of heat, while the fastest desktop processors top out at 150 watts (and often need water cooling).
There has been a wide range of CPUs designed for laptops available from both Intel, AMD, and other manufacturers. On non-x86 architectures, Motorola and IBM produced the chips for the former PowerPC-based Apple laptops (iBook and PowerBook). Between around 2000 to 2014, most full-size laptops had socketed, replaceable CPUs; on thinner models, the CPU was soldered on the motherboard and was not replaceable or upgradable without replacing the motherboard. Since 2015, Intel has not offered new laptop CPU models with pins to be interchangeable, preferring ball grid array chip packages which have to be soldered; and as of 2021, only a few rare models using desktop parts.
In the past, some laptops have used a desktop processor instead of the laptop version and have had high-performance gains at the cost of greater weight, heat, and limited battery life; this is not unknown as of 2022, but since around 2010, the practice has been restricted to small-volume gaming models. Laptop CPUs are rarely able to be overclocked; most use locked processors. Even on gaming models where unlocked processors are available, the cooling system in most laptops is often very close to its limits and there is rarely headroom for an overclocking–related operating temperature increase.


=== Graphics processing unit (GPU) ===
On most laptops, the GPU is integrated into the CPU to conserve power and space. This was introduced by Intel with the Core i-series of mobile processors in 2010, followed by similar AMD APU processors in January 2011.
Before that, lower-end machines tended to use graphics processors integrated into the system chipset, while higher-end machines had a separate graphics processor. In the past, laptops lacking a separate graphics processor were limited in their utility for gaming and professional applications involving 3D graphics, but the capabilities of CPU-integrated graphics have converged with the low-end of dedicated graphics processors since the mid-2010s. For laptops possessing limited onboard graphics capability but sufficient I/O throughput, an external GPU (eGPU) can provide additional graphics power at the cost of physical space and portability.
Higher-end laptops intended for gaming or professional 3D work still come with dedicated (and in some cases even dual) graphics processors on the motherboard or as an internal expansion card. Since 2011, these almost always involve switchable graphics so that when there is no demand for the higher performance dedicated graphics processor, the more power-efficient integrated graphics processor will be used. Nvidia Optimus and AMD Hybrid Graphics are examples of this sort of system of switchable graphics.
Traditionally, the system RAM on laptops (as well as on desktop computers) was physically separate from the graphics memory used by the GPU. Apple's M series SoCs feature a unified pool of memory for both the system and the GPU; this approach can produce substantial efficiency gains for some applications but comes at the cost of eGPU support.


=== Memory ===
Since around the year 2000, most laptops have used SO-DIMM slots in which RAM is mounted, although, as of 2021, an increasing number of models use memory soldered to the motherboard, either alongside SO-DIMM slots or without any slots and soldering all memory to the motherboard. Before 2000, most laptops used proprietary memory modules if their memory was upgradable.
In the early 2010s, high end laptops such as the 2011 Samsung 700G7A have passed the 10 GB RAM barrier, featuring 16 GB of RAM.When upgradeable, memory slots are sometimes accessible from the bottom of the laptop for ease of upgrading; in other cases, accessing them requires significant disassembly. Most laptops have two memory slots, although some will have only one, either for cost savings or because some amount of memory is soldered. Some high-end models have four slots; these are usually mobile engineering workstations, although a few high-end models intended for gaming do as well.
As of 2021, 8 GB RAM is most common, with lower-end models occasionally having 4 GB. Higher-end laptops may come with 16 GB of RAM or more.


=== Internal storage ===
The earliest laptops most often used floppy disk for storage, although a few used either RAM disk or tape, by the late 1980s hard disk drives had become the standard form of storage.
Between 1990 and 2009, almost all laptops typically had a hard disk drive (HDD) for storage; since then, solid-state drives (SSD) have gradually come to supplant hard drives in all but some inexpensive consumer models. Solid-state drives are faster and more power-efficient, as well as eliminating the hazard of drive and data corruption caused by a laptop's physical impacts, as they use no mechanical parts such as a rotational platter. In many cases, they are more compact as well. Initially, in the late 2000s, SSDs were substantially more expensive than HDDs, but as of 2021 prices on smaller capacity (under 1 terabyte) drives have converged; larger capacity drives remain more expensive than comparable-sized HDDs.
Since around 1990, where a hard drive is present it will typically be a 2.5-inch drive; some very compact laptops support even smaller 1.8-inch HDDs, and a very small number used 1" Microdrives. Some SSDs are built to match the size/shape of a laptop hard drive, but increasingly they have been replaced with smaller mSATA or M.2 cards. SSDs using the newer and much faster NVM Express standard for connecting are only available as cards.
As of 2022, many laptops no longer contain space for a 2.5" drive, accepting only M.2 cards; a few of the smallest have storage soldered to the motherboard. For those that can, they can typically contain a single 2.5-inch drive, but a small number of laptops with a screen wider than 15 inches can house two drives.
A variety of external HDDs or NAS data storage servers with support of RAID technology can be attached to virtually any laptop over such interfaces as USB, FireWire, eSATA, or Thunderbolt, or over a wired or wireless network to further increase space for the storage of data. Many laptops also incorporate a SD or microSD card slot. This enables users to download digital pictures from an SD card onto a laptop, thus enabling them to delete the SD card's contents to free up space for taking new pictures.


=== Removable media drive ===
Optical disc drives capable of playing CD-ROMs, compact discs (CD), DVDs, and in some cases, Blu-ray discs (BD), were nearly universal on full-sized models between the mid-1990s and the early 2010s. As of 2021, drives are uncommon in compact or premium laptops; they remain available in some bulkier models, but the trend towards thinner and lighter machines is gradually eliminating these drives and players – when needed they can be connected via USB instead.


=== Inputs ===
An alphanumeric keyboard is used to enter text, data, and other commands (e.g., function keys). A touchpad (also called a trackpad), a pointing stick, or both, are used to control the position of the cursor on the screen, and an integrated keyboard is used for typing. Some touchpads have buttons separate from the touch surface, while others share the surface. A quick double-tap is typically registered as a click, and operating systems may recognize multi-finger touch gestures.
An external keyboard and mouse may be connected using a USB port or wirelessly, via Bluetooth or similar technology. Some laptops have multitouch touchscreen displays, either available as an option or standard. Most laptops have webcams and microphones, which can be used to communicate with other people with both moving images and sound, via web conferencing or video-calling software.
Laptops typically have USB ports and a combined headphone/microphone jack, for use with headphones, a combined headset, or an external mic. Many laptops have a card reader for reading digital camera SD cards.


=== Input/output (I/O) ports ===
On a typical laptop there are several USB ports; if they use only the older USB connectors instead of USB-C, they will typically have an external monitor port (VGA, DVI, HDMI or Mini DisplayPort or occasionally more than one), an audio in/out port (often in form of a single socket) is common. It is possible to connect up to three external displays to a 2014-era laptop via a single Mini DisplayPort, using multi-stream transport technology.Apple, in a 2015 version of its MacBook, transitioned from a number of different I/O ports to a single USB-C port. This port can be used both for charging and connecting a variety of devices through the use of aftermarket adapters. Apple has since transitioned back to using a number of different ports. Google, with its updated version of Chromebook Pixel, shows a similar transition trend towards USB-C, although keeping older USB Type-A ports for a better compatibility with older devices. Although being common until the end of the 2000s decade, Ethernet network port are rarely found on modern laptops, due to widespread use of wireless networking, such as Wi-Fi. Legacy ports such as a PS/2 keyboard/mouse port, serial port, parallel port, or FireWire are provided on some models, but they are increasingly rare. On Apple's systems, and on a handful of other laptops, there are also Thunderbolt ports, but Thunderbolt 3 uses USB-C. Laptops typically have a headphone jack, so that the user can connect headphones or amplified speaker systems for listening to music or other audio.


=== Expansion cards ===
In the past, a PC Card (formerly PCMCIA) or ExpressCard slot for expansion was often present on laptops to allow adding and removing functionality, even when the laptop is powered on; these are becoming increasingly rare since the introduction of USB 3.0. Some internal subsystems such as Ethernet, Wi-Fi, or a wireless cellular modem can be implemented as replaceable internal expansion cards, usually accessible under an access cover on the bottom of the laptop. The standard for such cards is PCI Express, which comes in both mini and even smaller M.2 sizes. In newer laptops, it is not uncommon to also see Micro SATA (mSATA) functionality on PCI Express Mini or M.2 card slots allowing the use of those slots for SATA-based solid-state drives.Mobile PCI Express Module (MXM) is a type of expansion card that is used for graphics cards.


=== Battery and power supply ===

Since the late 1990s, laptops have typically used lithium ion or lithium polymer batteries, These replaced the older nickel metal-hydride typically used in the 1990s, and nickel–cadmium batteries used in most of the earliest laptops. A few of the oldest laptops used non-rechargeable batteries, or lead–acid batteries.
Battery life is highly variable by model and workload and can range from one hour to nearly a day. A battery's performance gradually decreases over time; a noticeable reduction in capacity is typically evident after two to three years of regular use, depending on the charging and discharging pattern and the design of the battery. Innovations in laptops and batteries have seen situations in which the battery can provide up to 24 hours of continued operation, assuming average power consumption levels. An example is the HP EliteBook 6930p when used with its ultra-capacity battery.Laptops with removable batteries may support larger replacement batteries with extended capacity.
A laptop's battery is charged using an external power supply, which is plugged into a wall outlet. The power supply outputs a DC voltage typically in the range of 7.2—24 volts. The power supply is usually external and connected to the laptop through a DC connector cable. In most cases, it can charge the battery and power the laptop simultaneously. When the battery is fully charged, the laptop continues to run on power supplied by the external power supply, avoiding battery use. If the used power supply is not strong enough to power computing components and charge the battery simultaneously, the battery may charge in a shorter period of time if the laptop is turned off or sleeping. The charger typically adds about 400 grams (0.88 lb) to the overall transporting weight of a laptop, although some models are substantially heavier or lighter. Most 2016-era laptops use a smart battery, a rechargeable battery pack with a built-in battery management system (BMS). The smart battery can internally measure voltage and current, and deduce charge level and State of Health (SoH) parameters, indicating the state of the cells.


=== Power connectors ===
Historically, DC connectors, typically cylindrical/barrel-shaped coaxial power connectors have been used in laptops. Some vendors such as Lenovo made intermittent use of a rectangular connector.
Some connector heads feature a center pin to allow the end device to determine the power supply type by measuring the resistance between it and the connector's negative pole (outer surface). Vendors may block charging if a power supply is not recognized as original part, which could deny the legitimate use of universal third-party chargers.With the advent of USB-C, portable electronics made increasing use of it for both power delivery and data transfer. Its support for 20 V (common laptop power supply voltage) and 5 A typically suffices for low to mid-end laptops, but some with higher power demands such as gaming laptops depend on dedicated DC connectors to handle currents beyond 5 A without risking overheating, some even above 10 A. Additionally, dedicated DC connectors are more durable and less prone to wear and tear from frequent reconnection, as their design is less delicate.


=== Cooling ===
Waste heat from the operation is difficult to remove in the compact internal space of a laptop. The earliest laptops used passive cooling; this gave way to heat sinks placed directly on the components to be cooled, but when these hot components are deep inside the device, a large space-wasting air duct is needed to exhaust the heat. Modern laptops instead rely on heat pipes to rapidly move waste heat towards the edges of the device, to allow for a much smaller and compact fan and heat sink cooling system. Waste heat is usually exhausted away from the device operator towards the rear or sides of the device. Multiple air intake paths are used since some intakes can be blocked, such as when the device is placed on a soft conforming surface like a chair cushion. Secondary device temperature monitoring may reduce performance or trigger an emergency shutdown if it is unable to dissipate heat, such as if the laptop were to be left running and placed inside a carrying case. Aftermarket cooling pads with external fans can be used with laptops to reduce operating temperatures.


=== Docking station ===
A docking station (sometimes referred to simply as a dock) is a laptop accessory that contains multiple ports and in some cases expansion slots or bays for fixed or removable drives. A laptop connects and disconnects to a docking station, typically through a single large proprietary connector. A docking station is an especially popular laptop accessory in a corporate computing environment, due to a possibility of a docking station transforming a laptop into a full-featured desktop replacement, yet allowing for its easy release. This ability can be advantageous to "road warrior" employees who have to travel frequently for work, and yet who also come into the office. If more ports are needed, or their position on a laptop is inconvenient, one can use a cheaper passive device known as a port replicator. These devices mate to the connectors on the laptop, such as through USB or FireWire.


=== Charging trolleys ===
Laptop charging trolleys, also known as laptop trolleys or laptop carts, are mobile storage containers to charge multiple laptops, netbooks, and tablet computers at the same time. The trolleys are used in schools that have replaced their traditional static computer labs suites of desktop equipped with "tower" computers, but do not have enough plug sockets in an individual classroom to charge all of the devices. The trolleys can be wheeled between rooms and classrooms so that all students and teachers in a particular building can access fully charged IT equipment.Laptop charging trolleys are also used to deter and protect against opportunistic and organized theft. Schools, especially those with open plan designs, are often prime targets for thieves who steal high-value items. Laptops, netbooks, and tablets are among the highest–value portable items in a school. Moreover, laptops can easily be concealed under clothing and stolen from buildings. Many types of laptop–charging trolleys are designed and constructed to protect against theft. They are generally made out of steel, and the laptops remain locked up while not in use. Although the trolleys can be moved between areas from one classroom to another, they can often be mounted or locked to the floor, support pillars, or walls to prevent thieves from stealing the laptops, especially overnight.


=== Solar panels ===

In some laptops, solar panels are able to generate enough solar power for the laptop to operate. The One Laptop Per Child Initiative released the OLPC XO-1 laptop which was tested and successfully operated by use of solar panels. Presently, they are designing an OLPC XO-3 laptop with these features. The OLPC XO-3 can operate with 2 watts of electricity because its renewable energy resources generate a total of 4 watts. Samsung has also designed the NC215S solar–powered notebook that will be sold commercially in the U.S. market.


=== Accessories ===
A common accessory for laptops is a laptop sleeve, laptop skin, or laptop case, which provides a degree of protection from scratches. Sleeves, which are distinguished by being relatively thin and flexible, are most commonly made of neoprene, with sturdier ones made of low-resilience polyurethane. Some laptop sleeves are wrapped in ballistic nylon to provide some measure of waterproofing. Bulkier and sturdier cases can be made of metal with polyurethane padding inside and may have locks for added security. Metal, padded cases also offer protection against impacts and drops. Another common accessory is a laptop cooler, a device that helps lower the internal temperature of the laptop either actively or passively. A common active method involves using electric fans to draw heat away from the laptop, while a passive method might involve propping the laptop up on some type of pad so it can receive more airflow. Some stores sell laptop pads that enable a reclining person on a bed to use a laptop.


=== Modularity ===
Some of the components of earlier models of laptops can easily be replaced without opening completely its bottom part, such as keyboard, battery, hard disk, memory modules, CPU cooling fan, etc.
Some of the components of recent models of laptops reside inside. Replacing most of its components, such as keyboard, battery, hard disk, memory modules, CPU cooling fan, etc., requires removal of its either top or bottom part, removal of the motherboard, and returning them.
In some types, solder and glue are used to mount components such as RAM, storage, and batteries, making repairs additionally difficult.


=== Obsolete features ===
Features that certain early models of laptops used to have that are not available in most current laptops include:

Reset ("cold restart") button in a hole (needed a thin metal tool to press)
Instant power off button in a hole (needed a thin metal tool to press)
Integrated charger or power adapter inside the laptop
Dedicated Media buttons (Internet, Volume, Play, Pause, Next, Previous)
Floppy disk drive
Serial port
Parallel port
Modem
IEEE 1394 port
Docking port
Shared PS/2 input device port
IrDA
S-video port
S/PDIF audio port
PC Card / PCMCIA slot
ExpressCard slot
CD/DVD Drives (starting with 2013 models)
VGA port (starting with 2013 models)


== Characteristics ==


=== Advantages ===
Portability is usually the first feature mentioned in any comparison of laptops versus desktop PCs. Physical portability allows a laptop to be used in many places—not only at home and the office but also during commuting and flights, in coffee shops, in lecture halls and libraries, at clients' locations or a meeting room, etc. Within a home, portability enables laptop users to move their devices from room to room. Portability offers several distinct advantages:
Productivity: Using a laptop in places where a desktop PC cannot be used can help employees and students to increase their productivity on work or school tasks, such as an office worker reading their work e-mails during an hour-long commute by train, or a student doing their homework at the university coffee shop during a break between lectures, for example.
Up-to-date information: Using a single laptop prevents fragmentation of files across multiple PC's as the files exist in a single location and are always up-to-date.
Connectivity: A key advantage of laptops is that they almost always have integrated connectivity features such as Wi-Fi and Bluetooth, and sometimes connection to cellular networks either through native integration or use of a hotspot.  Wi-Fi networks and laptop programs are especially widespread at university campuses.Other advantages of laptops:

Size: Laptops are smaller than desktop PCs. This is beneficial when space is at a premium, for example in small apartments and student dorms. When not in use, a laptop can be closed and put away in a desk drawer.
Low power consumption: Laptops are several times more power-efficient than desktops. A typical laptop uses 10–100 W, compared to 200–800W for desktops. This could be particularly beneficial for large businesses, which run hundreds of personal computers thus economies of scale, and homes where there is a computer running 24/7 (such as a home media server, print server, etc.).
Quiet: Laptops are typically much quieter than desktops, due both to the components (often silent solid-state drives replacing hard drives) and to less heat production leading to the use of fewer, sometimes no cooling fans. The latter has given rise to laptops that have no moving parts, resulting in complete silence during use.
Battery: a charged laptop can continue to be used in case of a power outage and is not affected by short power interruptions and blackouts, an issue that is present with desktop PC's.
All-in-One: designed to be portable, most modern laptops have all components integrated into the chassis. For desktops (excluding all-in-ones) this is usually divided into the desktop "tower" (the unit with the CPU, hard drive, power supply, etc.), keyboard, mouse, display screen, and optional peripherals such as speakers.


=== Disadvantages ===
Compared to desktop PCs, laptops have disadvantages in the following areas:

Performance
The majority of laptops released in 2022 are capable of common tasks such as web browsing, video playback, and office applications, even at the low end. That said, performance of desktops often surpass comparably priced laptops. The upper limits of performance of laptops remain lower than desktops, due to mostly practical reasons, such as decreased battery life, increased size and heat, etc.
Upgradeability
The upgradeability of laptops is very limited compared to thoroughly standardized desktops, due to technical and economic reasons. In general, hard drives and memory can be upgraded easily. Due to the integrated nature of laptops, however, the motherboard, CPU, and graphics, are seldom officially upgradeable. Some efforts towards industry standard parts and layouts have been attempted, such as Common Building Block, but the industry remains largely proprietary and fragmented. There is no industry-wide standard form factor for laptops; Moreover, starting with 2013 models, laptops have become increasingly integrated (soldered) with the motherboard for most of its components (CPU, SSD, RAM, etc.) to reduce size and upgradeability prospects.
Durability
 Laptops are less durable than desktops/PCs. However, the durability of the laptop depends on the user if proper maintenance is done then the laptop can work longer.Because of their portability, laptops are subject to more wear and physical damage than desktops, additionally hindered by their integrated nature. A liquid spill onto the keyboard, while a minor issue with a desktop system, can damage the internals of a laptop and destroy the computer, result in a costly repair or entire replacement of laptops. One study found that a laptop is three times more likely to break during the first year of use than a desktop. To maintain a laptop, it is recommended to clean it every three months for dirt, debris, dust, and food particles. Most cleaning kits consist of a lint-free or microfiber cloth for the screen and keyboard, compressed air for getting dust out of the cooling fan, and a cleaning solution. Harsh chemicals such as bleach should not be used to clean a laptop, as they can damage it.
Heating and cooling
Laptops rely on extremely compact cooling systems involving a fan and heat sink that can fail from blockage caused by accumulated airborne dust and debris. Most laptops do not have any type of removable dust collection filter over the air intake for these cooling systems, resulting in a system that gradually conducts more heat and noise as the years pass. In some cases, the laptop starts to overheat even at idle load levels. This dust is usually stuck inside where the fan and heat sink meet, where it can not be removed by a casual cleaning and vacuuming. Most of the time, compressed air can dislodge the dust and debris but may not entirely remove it. After the device is turned on, the loose debris is reaccumulated into the cooling system by the fans. Complete disassembly is usually required to clean the laptop entirely. However, preventative maintenance such as regular cleaning of the heat sink via compressed air can prevent dust build-up on the heat sink. Many laptops are difficult to disassemble by the average user and contain components that are sensitive to electrostatic discharge (ESD).
Battery life
Battery life is limited because the capacity drops with time, eventually warranting replacement after as little as 2–3 years. A new battery typically stores enough energy to run the laptop for five to six hours or more, depending on usage and the battery size. The battery is often easily replaceable and a higher capacity model may be obtained for longer charging and discharging time. Some laptops do not have the usual removable battery and have to be brought to the service center of their manufacturer or a third-party laptop service center to have their battery replaced. Replacement batteries can also be expensive, depending on the availability of the parts. Desktop PC's do not face similar problems since they are reliant on long lasting power supplies.
Security and privacy
Because they are valuable, commonly used, portable, and easy to hide in a backpack or other type of bag, laptops are often stolen. Every day, over 1,600 laptops go missing from U.S. airports. The cost of stolen business or personal data, and of the resulting problems (identity theft, credit card fraud, breach of privacy), can be many times the value of the stolen laptop itself. Consequently, the physical protection of laptops and the safeguarding of data contained on them are both of great importance. Some laptops, primarily professional and educational devices, have a Kensington security slot, which can be used to tether them with a security cable and lock. In addition, modern operating systems have features such as Activation Lock or similar that prevents the use of the device without credentials. As of 2015, some laptops also have additional security elements added, including biometric security components such as Windows Hello or Touch ID.Software such as GadgetTrak and  Find My Mac have been engineered to help people locate and recover their stolen laptops in the event of theft. Setting one's laptop with a password on its firmware (protection against going to firmware setup or booting), internal HDD/SSD (protection against accessing it and loading an operating system on it afterward), and every user account of the operating system are additional security measures that a user should do. Fewer than 5% of lost or stolen laptops are recovered by the companies that own them, however, that number may decrease due to a variety of companies and software solutions specializing in laptop recovery. In the 2010s, the common availability of webcams on laptops raised privacy concerns. In Robbins v. Lower Merion School District (Eastern District of Pennsylvania 2010), school-issued laptops loaded with special software enabled staff from two high schools to take secret webcam shots of students at home, via their students' laptops.


==== Ergonomics and health effects ====
Wrists
Prolonged use of laptops can cause repetitive strain injury because of their small, flat keyboard and trackpad pointing devices. Usage of separate, external ergonomic keyboards and pointing devices is recommended to prevent injury when working for long periods of time; they can be connected to a laptop easily by USB, Bluetooth or via a docking station. Some health standards require ergonomic keyboards at workplaces.
Neck and spine
A laptop's integrated screen often requires users to lean over for a better view, which can cause neck or spinal injuries. A larger and higher-quality external screen can be connected to almost any laptop to alleviate this and to provide additional screen space for more productive work. Another solution is to use a computer stand.
Possible effect on fertility
A study by State University of New York researchers found that heat generated from laptops can increase the temperature of the lap of male users when balancing the computer on their lap, potentially putting sperm count at risk. The study, which included roughly two dozen men between the ages of 21 and 35, found that the sitting position required to balance a laptop can increase scrotum temperature by as much as 2.1 °C (4 °F). However, further research is needed to determine whether this directly affects male sterility. A later 2010 study of 29 males published in Fertility and Sterility found that men who kept their laptops on their laps experienced scrotal hyperthermia (overheating) in which their scrotal temperatures increased by up to 2.0 °C (4 °F). The resulting heat increase, which could not be offset by a laptop cushion, may increase male infertility. A common practical solution to this problem is to place the laptop on a table or desk or to use a book or pillow between the body and the laptop. Another solution is to obtain a cooling unit for the laptop. These are usually USB powered and consist of a hard thin plastic case housing one, two, or three cooling fans – with the entire assembly designed to sit under the laptop in question – which results in the laptop remaining cool to the touch, and greatly reduces laptop heat buildup.Thighs
Heat generated from using a laptop on the lap can also cause skin discoloration on the thighs known as "toasted skin syndrome".


== Sales ==


=== Manufacturers ===

There are many laptop brands and manufacturers. Several major brands that offer notebooks in various classes are listed in the adjacent box. The major brands usually offer good service and support, including well-executed documentation and driver downloads that remain available for many years after a particular laptop model is no longer produced. Capitalizing on service, support, and brand image, laptops from major brands are more expensive than laptops by smaller brands and ODMs. Some brands specialize in a particular class of laptops, such as gaming laptops (Alienware), high-performance laptops (HP Envy), netbooks (EeePC) and laptops for children (OLPC).
Many brands, including the major ones, do not design and do not manufacture their laptops. Instead, a small number of Original Design Manufacturers (ODMs) design new models of laptops, and the brands choose the models to be included in their lineup. In 2006, 7 major ODMs manufactured 7 of every 10 laptops in the world, with the largest one (Quanta Computer) having 30% of the world market share. Therefore, identical models are available both from a major label and from a low-profile ODM in-house brand.


=== Adoption by users ===
Battery-powered portable computers had just 2% worldwide market share in 1986. However, laptops have become increasingly popular, both for business and personal use. Around 109 million notebook PCs shipped worldwide in 2007, a growth of 33% compared to 2006. In 2008 it was estimated that 145.9 million notebooks were sold, and that the number would grow in 2009 to 177.7 million. The third quarter of 2008 was the first time when worldwide notebook PC shipments exceeded desktops, with 38.6 million units versus 38.5 million units. Due to the advent of tablets and affordable laptops, many computer users now have laptops due to the convenience offered by the device.


=== Price ===
Before 2008, laptops were very expensive. In May 2005, the average notebook sold for $1,131 while desktops sold for an average of $696. Around 2008, however, prices of laptops decreased substantially due to low-cost netbooks, drawing an average US$689 at U.S. retail stores in August 2008. Starting with the 2010s, laptops have decreased substantially in price at the low end due to inexpensive and low power Arm processors, less demanding operating systems such as ChromeOS, and SoC's. As of 2023, a new laptop can be obtained for $299.


== Disposal ==

The list of materials that go into a laptop computer is long, and many of the substances used, such as beryllium, lead, chromium, and mercury compounds, are toxic or carcinogenic to humans. Although these toxins are relatively harmless when the laptop is in use, concerns that discarded laptops cause a serious health and environmental risks when improperly discarded have arisen. The Waste Electrical and Electronic Equipment Directive (WEEE Directive) in Europe specified that all laptop computers must be recycled by law. Similarly, the U.S. Environmental Protection Agency (EPA) has outlawed landfill dumping or the incinerating of discarded laptop computers.
Most laptop computers begin the recycling process with a method known as Demanufacturing, this involves the physical separation of the components of the laptop. These components are then either grouped into materials (e.g. plastic, metal and glass) for recycling or more complex items that require more advanced materials separation (e.g.) circuit boards, hard drives and batteries.
Corporate laptop recycling can require an additional process known as data destruction. The data destruction process ensures that all information or data that has been stored on a laptop hard drive can never be retrieved again. Below is an overview of some of the data protection and environmental laws and regulations applicable for laptop recycling data destruction:


== Extreme use ==

The ruggedized Grid Compass computer was used since the early days of the Space Shuttle program. The first commercial laptop used in space was a Macintosh portable in 1990 on Space Shuttle mission STS-41 and again in 1991 aboard STS-43. Apple and other laptop computers continue to be flown aboard crewed spaceflights, though the only long-duration flight certified computer for the International Space Station is the ThinkPad. As of 2011, over 100 ThinkPads were aboard the ISS. Laptops used aboard the International Space Station and other spaceflights are generally the same ones that can be purchased by the general public but needed modifications are made to allow them to be used safely and effectively in a weightless environment such as updating the cooling systems to function without relying on hot air rising and accommodation for the lower cabin air pressure. Laptops operating in harsh usage environments and conditions, such as strong vibrations, extreme temperatures, and wet or dusty conditions differ from those used in space in that they are custom designed for the task and do not use commercial off-the-shelf hardware.


== See also ==


== References ==

 Media related to Laptops at Wikimedia CommonsA desktop computer (often abbreviated desktop) is a personal computer designed for regular use at a stationary location on or near a desk (as opposed to a portable computer) due to its size and power requirements. The most common configuration has a case that houses the power supply, motherboard (a printed circuit board with a microprocessor as the central processing unit, memory, bus, certain peripherals and other electronic components), disk storage (usually one or more hard disk drives, solid state drives, optical disc drives, and in early models a floppy disk drive); a keyboard and mouse for input; and a monitor, speakers, and, often, a printer for output. The case may be oriented horizontally or vertically and placed either underneath, beside, or on top of a desk.
Desktop computers with their cases oriented vertically are referred to as towers. As the majority of cases offered since the mid-1990s are in this form factor, the term desktop has been retronymically used to refer to modern cases offered in the traditional horizontal orientation.


== History ==


=== Origins ===
Prior to the widespread use of microprocessors, a computer that could fit on a desk was considered remarkably small; the type of computers most commonly used were minicomputers, which, despite the name, were rather large and were "mini" only compared to the so-called "big iron". Early computers, and later the general purpose high throughput "mainframes", took up the space of a whole room. Minicomputers, on the contrary, generally fit into one or a few refrigerator-sized racks, or, for the few smaller ones, built into a fairly large desk, not put on top of it.
It was not until the 1970s when fully programmable computers appeared that could fit entirely on top of a desk. 1970 saw the introduction of the Datapoint 2200, a "smart" computer terminal complete with keyboard and monitor, was designed to connect with a mainframe computer but that did not stop owners from using its built-in computational abilities as a stand-alone desktop computer. The HP 9800 series, which started out as programmable calculators in 1971 but was programmable in BASIC by 1972, used a smaller version of a minicomputer design based on ROM memory and had small one-line LED alphanumeric displays and displayed graphics with a plotter. The Wang 2200 of 1973 had a full-size cathode-ray tube (CRT) and cassette tape storage. The IBM 5100 in 1975 had a small CRT display and could be programmed in BASIC and APL. These were generally expensive specialized computers sold for business or scientific uses.


=== Growth and development ===

Apple II, TRS-80 and Commodore PET were first generation personal home computers launched in 1977, which were aimed at the consumer market – rather than businessmen or computer hobbyists. Byte magazine referred to these three as the "1977 Trinity" of personal computing. Throughout the 1980s and 1990s, desktop computers became the predominant type, the most popular being the IBM PC and its clones, followed by the Apple Macintosh, with the third-placed Commodore Amiga having some success in the mid-1980s but declining by the early 1990s.

Early personal computers, like the original IBM Personal Computer, were enclosed in a "desktop case", horizontally oriented to have the display screen placed on top, thus saving space on the user's actual desk, although these cases had to be sturdy enough to support the weight of CRT displays that were widespread at the time. Over the course of the 1990s, desktop cases gradually became less common than the more-accessible tower cases that may be located on the floor under or beside a desk rather than on a desk. Not only do these tower cases have more room for expansion, they have also freed up desk space for monitors which were becoming larger every year. Desktop cases, particularly the compact form factors, remain popular for corporate computing environments and kiosks. Some computer cases can be interchangeably positioned either horizontally (desktop) or upright (mini-tower).
Influential games such as Doom and Quake during the 1990s had pushed gamers and enthusiasts to frequently upgrade to the latest CPUs and graphics cards (3dfx, ATI, and Nvidia) for their desktops (usually a tower case) in order to run these applications, though this has slowed since the late 2000s as the growing popularity of Intel integrated graphics forced game developers to scale back. Creative Technology's Sound Blaster series were a de facto standard for sound cards in desktop PCs during the 1990s until the early 2000s, when they were reduced to a niche product, as OEM desktop PCs came with sound boards integrated directly onto the motherboard.


=== Decline ===
While desktops have long been the most common configuration for PCs, by the mid-2000s the growth shifted from desktops to laptops. Notably, while desktops were mainly produced in the United States, laptops had long been produced by contract manufacturers based in Asia, such as Foxconn. This shift led to the closure of the many desktop assembly plants in the United States by 2010. Another trend around this time was the increasing proportion of inexpensive base-configuration desktops being sold, hurting PC manufacturers such as Dell whose build-to-order customization of desktops relied on upselling added features to buyers.Battery-powered portable computers had just a 2% worldwide market share in 1986. However, laptops have become increasingly popular, both for business and personal use.
Around 109 million notebook PCs shipped worldwide in 2007, a growth of 33% compared to 2006.
In 2008, it was estimated that 145.9 million notebooks were sold and that the number would grow in 2009 to 177.7 million. The third quarter of 2008 was the first time when worldwide notebook PC shipments exceeded desktops, with 38.6 million units versus 38.5 million units.The sales breakdown of the Apple Macintosh has seen sales of desktop Macs staying mostly constant while being surpassed by that of Mac notebooks whose sales rate has grown considerably; seven out of ten Macs sold were laptops in 2009, a ratio projected to rise to three out of four by 2010. The change in sales of form factors is due to the desktop iMac moving from affordable G3 to upscale G4 model and subsequent releases are considered premium all-in-ones. By contrast, the MSRP of the MacBook laptop lines have dropped through successive generations such that the MacBook Air and MacBook Pro constitute the lowest price of entry to a Mac, with the exception of the even more inexpensive Mac Mini (albeit without a monitor and keyboard), and the MacBooks are the top-selling form factors of the Macintosh platform today.The decades of development mean that most people already own desktop computers that meet their needs and have no need of buying a new one merely to keep pace with advancing technology. Notably, the successive release of new versions of Windows (Windows 95, 98, XP, Vista, 7, 8, 10 and so on) had been drivers for the replacement of PCs in the 1990s, but this slowed in the 2000s due to the poor reception of Windows Vista over Windows XP. IDC analyst Jay Chou suggested that Windows 8 actually hurt sales of PCs in 2012, as businesses decided to stick with Windows 7 rather than upgrade. Some suggested that Microsoft had acknowledged "implicitly ringing the desktop PC death knell" as Windows 8 offered little upgrade in desktop PC functionality over Windows 7; instead, Windows 8's innovations were mostly on the mobile side.The post-PC trend saw a decline in the sales of desktop and laptop PCs. The decline was attributed to increased power and applications of alternative computing devices, namely smartphones and tablet computers. Although most people exclusively use their smartphones and tablets for more basic tasks such as social media and casual gaming, these devices have in many instances replaced a second or third PC in the household that would have performed these tasks, though most families still retain a powerful PC for serious work.Among PC form factors, desktops remain a staple in the enterprise market but lost popularity among home buyers. PC makers and electronics retailers responded by investing their engineering and marketing resources towards laptops (initially netbooks in the late 2000s, and then the higher-performance Ultrabooks from 2011 onwards), which manufacturers believed had more potential to revive the PC market than desktops.
In April 2017, StatCounter declared a "Milestone in technology history and end of an era" with the mobile Android operating system becoming more popular than Windows (the operating system that made desktops dominant over mainframe computers). Windows is still most popular on desktops (and laptops), while smartphones (and tablets) use Android or iOS.


=== Resurgence ===
Towards the middle of the 2010s, media sources began to question the existence of the post-PC trend, at least as conventionally defined, stating that the so-called post-PC devices are just other portable forms of PCs joining traditional desktop PCs which still have their own operation areas and evolve.Although for casual use traditional desktops and laptops have seen a decline in sales, in 2018, global PC sales experienced a resurgence, driven by the business market. Desktops remain a solid fixture in the commercial and educational sectors. According to the International Data Corporation (IDC), PC sales shot up 14.8% between 2020 and 2021 and desktop market grew faster than the laptop market in the second quarter of 2021. Total PC shipments during 2021 reached 348.8 million units, up 14.8% from 2020. This represents the highest level of shipments the PC market has seen since 2012. In addition, gaming desktops have seen a global revenue increase of 54% annually. For gaming the global market of gaming desktops, laptops, and monitors is expected to grow to 61.1 million shipments by the end of 2023, up from 42.1 million, with desktops growing from 15.1 million shipments to 19 million. PC gaming as a whole now accounts for 28% of the total gaming market as of 2017. This is partially due to the increasing affordability of desktop PCs.


== Types ==


=== By size ===


==== Full-size ====
Full-sized desktops are characterized by separate display and processing components. These components are connected to each other by cables or wireless connections. They often come in a tower form factor. These computers are easy to customize and upgrade per user requirements, e.g. by expansion card.
Early extended-size (significantly larger than mainstream ATX case) tower computers sometimes were labeled as "deskside computers", but currently this naming being quite rare.


==== Compact ====

Compact desktops are reduced in physical proportions compared to full-sized desktops. They are typically small-sized, inexpensive, low-power computers designed for basic tasks such as web browsing, accessing web-based applications, document processing, and audio/video playback. Hardware specifications and processing power are usually reduced and hence make them less appropriate for running complex or resource-intensive applications. A nettop is a notable example of a compact desktop. A laptop without a screen can functionally be used as a compact desktop, sometimes called a "slabtop".


=== Form factor ===


==== All-in-one ====

An all-in-one (AIO) desktop computer integrates the system's internal components into the same case as the display, thus occupying a smaller footprint (with fewer cables) than desktops that incorporate a tower. The All-in-one systems are rarely labeled as desktop computers.


==== Tower ====

In personal computing, a tower is a form factor of desktop computer case whose height is much greater than its width, thus having the appearance of an upstanding tower block.


==== Pizza box form factor ====

In computing, a pizza box enclosure is a design for desktop computers. Pizza box cases tend to be wide and flat, resembling pizza delivery boxes and thus the name.


==== Cube ====
Cube Workstations have a cube case enclosure to house the motherboard, PCI-E expansion cards, GPU, CPU, DRAM DIMM slots, Computer cooling equipment,  chipsets, I/O ports, hard disk drives, and solid state drives.


=== By usage ===


==== Gaming computer ====

Gaming computers are desktop computers with high performance CPU, GPU, and RAM optimized for playing video games at high resolution and frame rates. Gaming computer peripheries usually include mechanical keyboards for faster response time, and a gaming computer mouse which can track higher dots per inch movement.


==== Home theater ====

These desktops are connected to home entertainment systems and typically used for amusement purpose. They come with high definition display, video graphics, surround sound and TV tuner systems to complement typical PC features.


==== Thin client / Internet appliance ====

Over time some traditional desktop computers have been replaced with thin clients utilizing off-site computing solutions like the cloud. As more services and applications are served over the internet from off-site servers, local computing needs decrease, this drives desktop computers to be smaller, cheaper, and need less powerful hardware. More applications and in some cases entire virtual desktops are moved off-site and the desktop computer runs only an operating system or a shell application while the actual content is served from a server. Thin client computers may do almost all of their computing on a virtual machine in another site. Internal, hosted virtual desktops can offer users a completely consistent experience from anywhere.


==== Workstation ====

Workstations are advanced class of personal computers designed for a user and more powerful than a regular PC but less powerful than a server in regular computing. They are capable of high-resolution and three-dimensional interfaces, and typically used to perform scientific and engineering work. Like server computers, they are often connected with other workstations. The main form-factor for this class is a Tower case, but most vendors produce compact or all-in-one low-end workstations. Most tower workstations can be converted to a rack-mount version.


==== Desktop server ====
Oriented for small business class of servers; typically entry-level server machines, with similar to workstation/gaming PC computing powers and with some mainstream servers features, but with only basic graphic abilities; and some desktop servers can be converted to workstations.


=== Non-common types ===


==== Quantum technology ====
On January 29, 2021, Shenzhen SpinQ Technology announced that they will release the first-ever desktop quantum computer. This will be a miniaturized version of their previous quantum computer based on the same technology (nuclear magnetic resonance) and will be 2 qubit device. Applications will mostly be educational for high school and college students. The company claims SpinQ will be released to the public by the fourth quarter of 2021.


== Comparison with laptops ==

Desktops have an advantage over laptops in that the spare parts and extensions tend to be standardized, resulting in lower prices and greater availability. For example, the size and mounting of the motherboard are standardized into ATX, microATX, BTX or other form factors. Desktops have several standardized expansion slots, like conventional PCI or PCI Express, while laptops tend to have only one mini-PCI slot and one PC Card slot (or ExpressCard slot). Procedures for assembly and disassembly of desktops tend to be simple and standardized as well. This tends not to be the case for laptops, though adding or replacing some parts, like the optical drive, hard disk, or adding an extra memory module is often quite simple. This means that a desktop computer configuration, usually a tower case, can be customized and upgraded to a greater extent than laptops. This customization has kept tower cases popular among gamers and enthusiasts.
Another advantage of the desktop is that (apart from environmental concerns) power consumption is not as critical as in laptop computers because the desktop is exclusively powered from the wall socket. Desktop computers also provide more space for cooling fans and vents to dissipate heat, allowing enthusiasts to overclock with less risk. The two large microprocessor manufacturers, Intel and AMD, have developed special CPUs for mobile computers (i.e. laptops) that consume less power and lower heat, but with lower performance levels.
Laptop computers, conversely, offer portability that desktop systems (including small form factor and all-in-one desktops) cannot due to their compact size and clamshell design. The laptop's all-in-one design provides a built-in keyboard and a pointing device (such as a touchpad) for its user and can draw on power supplied by a rechargeable battery. Laptops also commonly integrate wireless technologies like Wi-Fi, Bluetooth, and 3G, giving them a broader range of options for connecting to the internet, though this trend is changing as newer desktop computers come integrated with one or more of these technologies.
A desktop computer needs a UPS to handle electrical disturbances like short interruptions, blackouts, and spikes; achieving an on-battery time of more than 20–30 minutes for a desktop PC requires a large and expensive UPS. A laptop with a sufficiently charged battery can continue to be used for hours in case of a power outage and is not affected by short power interruptions and blackouts.
A desktop computer often has the advantage over a comparable laptop in computational capacity. Overclocking is often more feasible on a desktop than on a laptop; similarly, hardware add-ons such as discrete graphics co-processors may be possible to install only in a desktop.


== See also ==


== References ==


== External links ==

Computer Tour – of major components of a desktop computers at HowStuffWorksGeology (from Ancient Greek  γῆ (gê) 'earth', and  λoγία (-logía) 'study of, discourse') is a branch of natural science concerned with the Earth and other astronomical objects, the rocks of which they are composed, and the processes by which they change over time. Modern geology significantly overlaps all other Earth sciences, including hydrology. It is integrated with Earth system science and planetary science.
Geology describes the structure of the Earth on and beneath its surface and the processes that have shaped that structure. Geologists study the mineralogical composition of rocks in order to get insight into their history of formation. Geology determines the relative ages of rocks found at a given location; geochemistry (a branch of geology) determines their absolute ages. By combining various petrological, crystallographic, and paleontological tools, geologists are able to chronicle the geological history of the Earth as a whole. One aspect is to demonstrate the age of the Earth. Geology provides evidence for plate tectonics, the evolutionary history of life, and the Earth's past climates.
Geologists broadly study the properties and processes of Earth and other terrestrial planets. Geologists use a wide variety of methods to understand the Earth's structure and evolution, including fieldwork, rock description, geophysical techniques, chemical analysis, physical experiments, and numerical modelling. In practical terms, geology is important for mineral and hydrocarbon exploration and exploitation, evaluating water resources, understanding natural hazards, remediating environmental problems, and providing insights into past climate change. Geology is a major academic discipline, and it is central to geological engineering and plays an important role in geotechnical engineering.


== Geological material ==
The majority of geological data comes from research on solid Earth materials. Meteorites and other extraterrestrial natural materials are also studied by geological methods.


=== Mineral ===

Minerals are naturally occurring elements and compounds with a definite homogeneous chemical composition and ordered atomic composition.
Each mineral has distinct physical properties, and there are many tests to determine each of them. Minerals are often identified through these tests. The specimens can be tested for:
Color: Minerals are grouped by their color. Mostly diagnostic but impurities can change a mineral's color.
Streak: Performed by scratching the sample on a porcelain plate. The color of the streak can help identify the mineral.
Hardness: The resistance of a mineral to scratching or indentation.
Breakage pattern: A mineral can either show fracture or cleavage, the former being breakage of uneven surfaces, and the latter a breakage along closely spaced parallel planes.
Luster: Quality of light reflected from the surface of a mineral. Examples are metallic, pearly, waxy, dull.
Specific gravity: the weight of a specific volume of a mineral.
Effervescence: Involves dripping hydrochloric acid on the mineral to test for fizzing.
Magnetism: Involves using a magnet to test for magnetism.
Taste: Minerals can have a distinctive taste such as halite (which tastes like table salt).


=== Rock ===

A rock is any naturally occurring solid mass or aggregate of minerals or mineraloids. Most research in geology is associated with the study of rocks, as they provide the primary record of the majority of the geological history of the Earth. There are three major types of rock: igneous, sedimentary, and metamorphic. The rock cycle
illustrates the relationships among them (see diagram).
When a rock solidifies or crystallizes from melt (magma or lava), it is an igneous rock. This rock can be weathered and eroded, then redeposited and lithified into a sedimentary rock. Sedimentary rocks are mainly divided into four categories: sandstone, shale, carbonate, and evaporite. This group of classifications focuses partly on the size of sedimentary particles (sandstone and shale), and partly on mineralogy and formation processes (carbonation and evaporation). Igneous and sedimentary rocks can then be turned into metamorphic rocks by heat and pressure that change its mineral content, resulting in a characteristic fabric. All three types may melt again, and when this happens, new magma is formed, from which an igneous rock may once again solidify.
Organic matter, such as coal, bitumen, oil, and natural gas, is linked mainly to organic-rich sedimentary rocks.
To study all three types of rock, geologists evaluate the minerals of which they are composed and their other physical properties, such as texture and fabric.


=== Unlithified material ===
Geologists also study unlithified materials (referred to as superficial deposits) that lie above the bedrock. This study is often known as Quaternary geology, after the Quaternary period of geologic history, which is the most recent period of geologic time.


==== Magma ====

Magma is the original unlithified source of all igneous rocks. The active flow of molten rock is closely studied in volcanology, and igneous petrology aims to determine the history of igneous rocks from their original molten source to their final crystallization.


== Whole-Earth structure ==


=== Plate tectonics ===

In the 1960s, it was discovered that the Earth's lithosphere, which includes the crust and rigid uppermost portion of the upper mantle, is separated into tectonic plates that move across the plastically deforming, solid, upper mantle, which is called the asthenosphere. This theory is supported by several types of observations, including seafloor spreading and the global distribution of mountain terrain and seismicity.
There is an intimate coupling between the movement of the plates on the surface and the convection of the mantle (that is, the heat transfer caused by the slow movement of ductile mantle rock). Thus, oceanic parts of plates and the adjoining mantle convection currents always move in the same direction – because the oceanic lithosphere is actually the rigid upper thermal boundary layer of the convecting mantle. This coupling between rigid plates moving on the surface of the Earth and the convecting mantle is called plate tectonics.
The development of plate tectonics has provided a physical basis for many observations of the solid Earth. Long linear regions of geological features are explained as plate boundaries:

Mid-ocean ridges, high regions on the seafloor where hydrothermal vents and volcanoes exist, are seen as divergent boundaries, where two plates move apart.
Arcs of volcanoes and earthquakes are theorized as convergent boundaries, where one plate subducts, or moves, under another.
Transform boundaries, such as the San Andreas Fault system, are where plates slide horizontally past each other.Plate tectonics has provided a mechanism for Alfred Wegener's theory of continental drift, in which the continents move across the surface of the Earth over geological time. They also provided a driving force for crustal deformation, and a new setting for the observations of structural geology. The power of the theory of plate tectonics lies in its ability to combine all of these observations into a single theory of how the lithosphere moves over the convecting mantle.


=== Earth structure ===

Advances in seismology, computer modeling, and mineralogy and crystallography at high temperatures and pressures give insights into the internal composition and structure of the Earth.
Seismologists can use the arrival times of seismic waves to image the interior of the Earth. Early advances in this field showed the existence of a liquid outer core (where shear waves were not able to propagate) and a dense solid inner core. These advances led to the development of a layered model of the Earth, with a lithosphere (including crust) on top, the mantle below (separated within itself by seismic discontinuities at 410 and 660 kilometers), and the outer core and inner core below that. More recently, seismologists have been able to create detailed images of wave speeds inside the earth in the same way a doctor images a body in a CT scan. These images have led to a much more detailed view of the interior of the Earth, and have replaced the simplified layered model with a much more dynamic model.
Mineralogists have been able to use the pressure and temperature data from the seismic and modeling studies alongside knowledge of the elemental composition of the Earth to reproduce these conditions in experimental settings and measure changes within the crystal structure. These studies explain the chemical changes associated with the major seismic discontinuities in the mantle and show the crystallographic structures expected in the inner core of the Earth.


== Geological time ==

The geological time scale encompasses the history of the Earth. It is bracketed at the earliest by the dates of the first Solar System material at 4.567 Ga (or 4.567 billion years ago) and the formation of the Earth at
4.54 Ga
(4.54 billion years), which is the beginning of the Hadean eon – a division of geological time. At the later end of the scale, it is marked by the present day (in the Holocene epoch).


=== Timescale of the Earth ===
The following five timelines show the geologic time scale to scale. The first shows the entire time from the formation of the Earth to the present, but this gives little space for the most recent eon. The second timeline shows an expanded view of the most recent eon. In a similar way, the most recent era is expanded in the third timeline, the most recent period is expanded in the fourth timeline, and the most recent epoch is expanded in the fifth timeline.


=== Important milestones on Earth ===
4.567 Ga (gigaannum: billion years ago): Solar system formation
4.54 Ga: Accretion, or formation, of Earth
c. 4 Ga: End of Late Heavy Bombardment, the first life
c. 3.5 Ga: Start of photosynthesis
c. 2.3 Ga: Oxygenated atmosphere, first snowball Earth
730–635 Ma (megaannum: million years ago): second snowball Earth
541 ± 0.3 Ma: Cambrian explosion – vast multiplication of hard-bodied life; first abundant fossils; start of the Paleozoic
c. 380 Ma: First vertebrate land animals
250 Ma: Permian-Triassic extinction – 90% of all land animals die; end of Paleozoic and beginning of Mesozoic
66 Ma: Cretaceous–Paleogene extinction – Dinosaurs die; end of Mesozoic and beginning of Cenozoic
c. 7 Ma: First hominins appear
3.9 Ma: First Australopithecus, direct ancestor to modern Homo sapiens, appear
200 ka (kiloannum: thousand years ago): First modern Homo sapiens appear in East Africa


=== Timescale of the Moon ===


=== Timescale of Mars ===


== Dating methods ==


=== Relative dating ===

Methods for relative dating were developed when geology first emerged as a natural science. Geologists still use the following principles today as a means to provide information about geological history and the timing of geological events.
The principle of uniformitarianism states that the geological processes observed in operation that modify the Earth's crust at present have worked in much the same way over geological time. A fundamental principle of geology advanced by the 18th-century Scottish physician and geologist James Hutton is that "the present is the key to the past." In Hutton's words: "the past history of our globe must be explained by what can be seen to be happening now."The principle of intrusive relationships concerns crosscutting intrusions. In geology, when an igneous intrusion cuts across a formation of sedimentary rock, it can be determined that the igneous intrusion is younger than the sedimentary rock. Different types of intrusions include stocks, laccoliths, batholiths, sills and dikes.
The principle of cross-cutting relationships pertains to the formation of faults and the age of the sequences through which they cut. Faults are younger than the rocks they cut; accordingly, if a fault is found that penetrates some formations but not those on top of it, then the formations that were cut are older than the fault, and the ones that are not cut must be younger than the fault. Finding the key bed in these situations may help determine whether the fault is a normal fault or a thrust fault.The principle of inclusions and components states that, with sedimentary rocks, if inclusions (or clasts) are found in a formation, then the inclusions must be older than the formation that contains them. For example, in sedimentary rocks, it is common for gravel from an older formation to be ripped up and included in a newer layer. A similar situation with igneous rocks occurs when xenoliths are found. These foreign bodies are picked up as magma or lava flows, and are incorporated, later to cool in the matrix. As a result, xenoliths are older than the rock that contains them.

The principle of original horizontality states that the deposition of sediments occurs as essentially horizontal beds. Observation of modern marine and non-marine sediments in a wide variety of environments supports this generalization (although cross-bedding is inclined, the overall orientation of cross-bedded units is horizontal).The principle of superposition states that a sedimentary rock layer in a tectonically undisturbed sequence is younger than the one beneath it and older than the one above it. Logically a younger layer cannot slip beneath a layer previously deposited. This principle allows sedimentary layers to be viewed as a form of the vertical timeline, a partial or complete record of the time elapsed from deposition of the lowest layer to deposition of the highest bed.The principle of faunal succession is based on the appearance of fossils in sedimentary rocks. As organisms exist during the same period throughout the world, their presence or (sometimes) absence provides a relative age of the formations where they appear. Based on principles that William Smith laid out almost a hundred years before the publication of Charles Darwin's theory of evolution, the principles of succession developed independently of evolutionary thought. The principle becomes quite complex, however, given the uncertainties of fossilization, localization of fossil types due to lateral changes in habitat (facies change in sedimentary strata), and that not all fossils formed globally at the same time.


=== Absolute dating ===

Geologists also use methods to determine the absolute age of rock samples and geological events. These dates are useful on their own and may also be used in conjunction with relative dating methods or to calibrate relative methods.At the beginning of the 20th century, advancement in geological science was facilitated by the ability to obtain accurate absolute dates to geological events using radioactive isotopes and other methods. This changed the understanding of geological time. Previously, geologists could only use fossils and stratigraphic correlation to date sections of rock relative to one another. With isotopic dates, it became possible to assign absolute ages to rock units, and these absolute dates could be applied to fossil sequences in which there was datable material, converting the old relative ages into new absolute ages.
For many geological applications, isotope ratios of radioactive elements are measured in minerals that give the amount of time that has passed since a rock passed through its particular closure temperature, the point at which different radiometric isotopes stop diffusing into and out of the crystal lattice. These are used in geochronologic and thermochronologic studies. Common methods include uranium–lead dating, potassium–argon dating, argon–argon dating and uranium–thorium dating. These methods are used for a variety of applications. Dating of lava and volcanic ash layers found within a stratigraphic sequence can provide absolute age data for sedimentary rock units that do not contain radioactive isotopes and calibrate relative dating techniques. These methods can also be used to determine ages of pluton emplacement.
Thermochemical techniques can be used to determine temperature profiles within the crust, the uplift of mountain ranges, and paleo-topography.
Fractionation of the lanthanide series elements is used to compute ages since rocks were removed from the mantle.
Other methods are used for more recent events. Optically stimulated luminescence and cosmogenic radionuclide dating are used to date surfaces and/or erosion rates. Dendrochronology can also be used for the dating of landscapes. Radiocarbon dating is used for geologically young materials containing organic carbon.


== Geological development of an area ==
The geology of an area changes through time as rock units are deposited and inserted, and deformational processes alter their shapes and locations.
Rock units are first emplaced either by deposition onto the surface or intrusion into the overlying rock. Deposition can occur when sediments settle onto the surface of the Earth and later lithify into sedimentary rock, or when as volcanic material such as volcanic ash or lava flows blanket the surface. Igneous intrusions such as batholiths, laccoliths, dikes, and sills, push upwards into the overlying rock, and crystallize as they intrude.
After the initial sequence of rocks has been deposited, the rock units can be deformed and/or metamorphosed. Deformation typically occurs as a result of horizontal shortening, horizontal extension, or side-to-side (strike-slip) motion. These structural regimes broadly relate to convergent boundaries, divergent boundaries, and transform boundaries, respectively, between tectonic plates.
When rock units are placed under horizontal compression, they shorten and become thicker. Because rock units, other than muds, do not significantly change in volume, this is accomplished in two primary ways: through faulting and folding. In the shallow crust, where brittle deformation can occur, thrust faults form, which causes the deeper rock to move on top of the shallower rock. Because deeper rock is often older, as noted by the principle of superposition, this can result in older rocks moving on top of younger ones. Movement along faults can result in folding, either because the faults are not planar or because rock layers are dragged along, forming drag folds as slip occurs along the fault. Deeper in the Earth, rocks behave plastically and fold instead of faulting. These folds can either be those where the material in the center of the fold buckles upwards, creating "antiforms", or where it buckles downwards, creating "synforms". If the tops of the rock units within the folds remain pointing upwards, they are called anticlines and synclines, respectively. If some of the units in the fold are facing downward, the structure is called an overturned anticline or syncline, and if all of the rock units are overturned or the correct up-direction is unknown, they are simply called by the most general terms, antiforms, and synforms.

Even higher pressures and temperatures during horizontal shortening can cause both folding and metamorphism of the rocks. This metamorphism causes changes in the mineral composition of the rocks; creates a foliation, or planar surface, that is related to mineral growth under stress. This can remove signs of the original textures of the rocks, such as bedding in sedimentary rocks, flow features of lavas, and crystal patterns in crystalline rocks.
Extension causes the rock units as a whole to become longer and thinner. This is primarily accomplished through normal faulting and through the ductile stretching and thinning. Normal faults drop rock units that are higher below those that are lower. This typically results in younger units ending up below older units. Stretching of units can result in their thinning. In fact, at one location within the Maria Fold and Thrust Belt, the entire sedimentary sequence of the Grand Canyon appears over a length of less than a meter. Rocks at the depth to be ductilely stretched are often also metamorphosed. These stretched rocks can also pinch into lenses, known as boudins, after the French word for "sausage" because of their visual similarity.
Where rock units slide past one another, strike-slip faults develop in shallow regions, and become shear zones at deeper depths where the rocks deform ductilely.

The addition of new rock units, both depositionally and intrusively, often occurs during deformation. Faulting and other deformational processes result in the creation of topographic gradients, causing material on the rock unit that is increasing in elevation to be eroded by hillslopes and channels. These sediments are deposited on the rock unit that is going down. Continual motion along the fault maintains the topographic gradient in spite of the movement of sediment and continues to create accommodation space for the material to deposit. Deformational events are often also associated with volcanism and igneous activity. Volcanic ashes and lavas accumulate on the surface, and igneous intrusions enter from below. Dikes, long, planar igneous intrusions, enter along cracks, and therefore often form in large numbers in areas that are being actively deformed. This can result in the emplacement of dike swarms, such as those that are observable across the Canadian shield, or rings of dikes around the lava tube of a volcano.
All of these processes do not necessarily occur in a single environment and do not necessarily occur in a single order. The Hawaiian Islands, for example, consist almost entirely of layered basaltic lava flows. The sedimentary sequences of the mid-continental United States and the Grand Canyon in the southwestern United States contain almost-undeformed stacks of sedimentary rocks that have remained in place since Cambrian time. Other areas are much more geologically complex. In the southwestern United States, sedimentary, volcanic, and intrusive rocks have been metamorphosed, faulted, foliated, and folded. Even older rocks, such as the Acasta gneiss of the Slave craton in northwestern Canada, the oldest known rock in the world have been metamorphosed to the point where their origin is indiscernible without laboratory analysis. In addition, these processes can occur in stages. In many places, the Grand Canyon in the southwestern United States being a very visible example, the lower rock units were metamorphosed and deformed, and then deformation ended and the upper, undeformed units were deposited. Although any amount of rock emplacement and rock deformation can occur, and they can occur any number of times, these concepts provide a guide to understanding the geological history of an area.


== Investigative methods ==
Geologists use a number of fields, laboratory, and numerical modeling methods to decipher Earth history and to understand the processes that occur on and inside the Earth. In typical geological investigations, geologists use primary information related to petrology (the study of rocks), stratigraphy (the study of sedimentary layers), and structural geology (the study of positions of rock units and their deformation). In many cases, geologists also study modern soils, rivers, landscapes, and glaciers; investigate past and current life and biogeochemical pathways, and use geophysical methods to investigate the subsurface. Sub-specialities of geology may distinguish endogenous and exogenous geology.


=== Field methods ===
Geological field work varies depending on the task at hand. Typical fieldwork could consist of:

Geological mappingStructural mapping: identifying the locations of major rock units and the faults and folds that led to their placement there.
Stratigraphic mapping: pinpointing the locations of sedimentary facies (lithofacies and biofacies) or the mapping of isopachs of equal thickness of sedimentary rock
Surficial mapping: recording the locations of soils and surficial deposits
Surveying of topographic features
compilation of topographic maps
Work to understand change across landscapes, including:
Patterns of erosion and deposition
River-channel change through migration and avulsion
Hillslope processes
Subsurface mapping through geophysical methodsThese methods include:
Shallow seismic surveys
Ground-penetrating radar
Aeromagnetic surveys
Electrical resistivity tomography
They aid in:
Hydrocarbon exploration
Finding groundwater
Locating buried archaeological artifacts
High-resolution stratigraphy
Measuring and describing stratigraphic sections on the surface
Well drilling and logging
Biogeochemistry and geomicrobiologyCollecting samples to:
determine biochemical pathways
identify new species of organisms
identify new chemical compounds
and to use these discoveries to:
understand early life on Earth and how it functioned and metabolized
find important compounds for use in pharmaceuticals
Paleontology: excavation of fossil material
For research into past life and evolution
For museums and education
Collection of samples for geochronology and thermochronology
Glaciology: measurement of characteristics of glaciers and their motion


=== Petrology ===

In addition to identifying rocks in the field (lithology), petrologists identify rock samples in the laboratory. Two of the primary methods for identifying rocks in the laboratory are through optical microscopy and by using an electron microprobe. In an optical mineralogy analysis, petrologists analyze thin sections of rock samples using a petrographic microscope, where the minerals can be identified through their different properties in plane-polarized and cross-polarized light, including their birefringence, pleochroism, twinning, and interference properties with a conoscopic lens. In the electron microprobe, individual locations are analyzed for their exact chemical compositions and variation in composition within individual crystals. Stable and radioactive isotope studies provide insight into the geochemical evolution of rock units.
Petrologists can also use fluid inclusion data and perform high temperature and pressure physical experiments to understand the temperatures and pressures at which different mineral phases appear, and how they change through igneous and metamorphic processes. This research can be extrapolated to the field to understand metamorphic processes and the conditions of crystallization of igneous rocks. This work can also help to explain processes that occur within the Earth, such as subduction and magma chamber evolution.


=== Structural geology ===

Structural geologists use microscopic analysis of oriented thin sections of geological samples to observe the fabric within the rocks, which gives information about strain within the crystalline structure of the rocks. They also plot and combine measurements of geological structures to better understand the orientations of faults and folds to reconstruct the history of rock deformation in the area. In addition, they perform analog and numerical experiments of rock deformation in large and small settings.
The analysis of structures is often accomplished by plotting the orientations of various features onto stereonets. A stereonet is a stereographic projection of a sphere onto a plane, in which planes are projected as lines and lines are projected as points. These can be used to find the locations of fold axes, relationships between faults, and relationships between other geological structures.
Among the most well-known experiments in structural geology are those involving orogenic wedges, which are zones in which mountains are built along convergent tectonic plate boundaries. In the analog versions of these experiments, horizontal layers of sand are pulled along a lower surface into a back stop, which results in realistic-looking patterns of faulting and the growth of a critically tapered (all angles remain the same) orogenic wedge. Numerical models work in the same way as these analog models, though they are often more sophisticated and can include patterns of erosion and uplift in the mountain belt. This helps to show the relationship between erosion and the shape of a mountain range. These studies can also give useful information about pathways for metamorphism through pressure, temperature, space, and time.


=== Stratigraphy ===

In the laboratory, stratigraphers analyze samples of stratigraphic sections that can be returned from the field, such as those from drill cores. Stratigraphers also analyze data from geophysical surveys that show the locations of stratigraphic units in the subsurface. Geophysical data and well logs can be combined to produce a better view of the subsurface, and stratigraphers often use computer programs to do this in three dimensions. Stratigraphers can then use these data to reconstruct ancient processes occurring on the surface of the Earth, interpret past environments, and locate areas for water, coal, and hydrocarbon extraction.
In the laboratory, biostratigraphers analyze rock samples from outcrop and drill cores for the fossils found in them. These fossils help scientists to date the core and to understand the depositional environment in which the rock units formed. Geochronologists precisely date rocks within the stratigraphic section to provide better absolute bounds on the timing and rates of deposition.
Magnetic stratigraphers look for signs of magnetic reversals in igneous rock units within the drill cores. Other scientists perform stable-isotope studies on the rocks to gain information about past climate.


== Planetary geology ==

With the advent of space exploration in the twentieth century, geologists have begun to look at other planetary bodies in the same ways that have been developed to study the Earth. This new field of study is called planetary geology (sometimes known as astrogeology) and relies on known geological principles to study other bodies of the solar system. This is a major aspect of planetary science, and largely focuses on the terrestrial planets, icy moons, asteroids, comets, and meteorites. However, some planetary geophysicists study the giant planets and exoplanets.Although the Greek-language-origin prefix geo refers to Earth, "geology" is often used in conjunction with the names of other planetary bodies when describing their composition and internal processes: examples are "the geology of Mars" and "Lunar geology". Specialized terms such as selenology (studies of the Moon), areology (of Mars), etc., are also in use.
Although planetary geologists are interested in studying all aspects of other planets, a significant focus is to search for evidence of past or present life on other worlds. This has led to many missions whose primary or ancillary purpose is to examine planetary bodies for evidence of life. One of these is the Phoenix lander, which analyzed Martian polar soil for water, chemical, and mineralogical constituents related to biological processes.


== Applied geology ==


=== Economic geology ===

Economic geology is a branch of geology that deals with aspects of economic minerals that humankind uses to fulfill various needs. Economic minerals are those extracted profitably for various practical uses. Economic geologists help locate and manage the Earth's natural resources, such as petroleum and coal, as well as mineral resources, which include metals such as iron, copper, and uranium.


==== Mining geology ====

Mining geology consists of the extractions of mineral and ore resources from the Earth. Some resources of economic interests include gemstones, metals such as gold and copper, and many minerals such as asbestos, Magnesite,  perlite, mica, phosphates, zeolites, clay, pumice, quartz, and silica, as well as elements such as sulfur, chlorine, and helium.


==== Petroleum geology ====

Petroleum geologists study the locations of the subsurface of the Earth that can contain extractable hydrocarbons, especially petroleum and natural gas. Because many of these reservoirs are found in sedimentary basins, they study the formation of these basins, as well as their sedimentary and tectonic evolution and the present-day positions of the rock units.


=== Engineering geology ===

Engineering geology is the application of geological principles to engineering practice for the purpose of assuring that the geological factors affecting the location, design, construction, operation, and maintenance of engineering works are properly addressed. Engineering geology is distinct from geological engineering, particularly in North America.

In the field of civil engineering, geological principles and analyses are used in order to ascertain the mechanical principles of the material on which structures are built. This allows tunnels to be built without collapsing, bridges and skyscrapers to be built with sturdy foundations, and buildings to be built that will not settle in clay and mud.


=== Hydrology ===

Geology and geological principles can be applied to various environmental problems such as stream restoration, the restoration of brownfields, and the understanding of the interaction between natural habitat and the geological environment. Groundwater hydrology, or hydrogeology, is used to locate groundwater, which can often provide a ready supply of uncontaminated water and is especially important in arid regions, and to monitor the spread of contaminants in groundwater wells.


=== Paleoclimatology ===

Geologists also obtain data through stratigraphy, boreholes, core samples, and ice cores. Ice cores and sediment cores are used for paleoclimate reconstructions, which tell geologists about past and present temperature, precipitation, and sea level across the globe. These datasets are our primary source of information on global climate change outside of instrumental data.


=== Natural hazards ===

Geologists and geophysicists study natural hazards in order to enact safe building codes and warning systems that are used to prevent loss of property and life. Examples of important natural hazards that are pertinent to geology (as opposed those that are mainly or only pertinent to meteorology) are:


== History ==

The study of the physical material of the Earth dates back at least to ancient Greece when Theophrastus (372–287 BCE) wrote the work Peri Lithon (On Stones). During the Roman period, Pliny the Elder wrote in detail of the many minerals and metals, then in practical use – even correctly noting the origin of amber. Additionally, in the 4th century BCE Aristotle made critical observations of the slow rate of geological change. He observed the composition of the land and formulated a theory where the Earth changes at a slow rate and that these changes cannot be observed during one person's lifetime. Aristotle developed one of the first evidence-based concepts connected to the geological realm regarding the rate at which the Earth physically changes.Abu al-Rayhan al-Biruni (973–1048 CE) was one of the earliest Persian geologists, whose works included the earliest writings on the geology of India, hypothesizing that the Indian subcontinent was once a sea. Drawing from Greek and Indian scientific literature that were not destroyed by the Muslim conquests, the Persian scholar Ibn Sina (Avicenna, 981–1037) proposed detailed explanations for the formation of mountains, the origin of earthquakes, and other topics central to modern geology, which provided an essential foundation for the later development of the science. In China, the polymath Shen Kuo (1031–1095) formulated a hypothesis for the process of land formation: based on his observation of fossil animal shells in a geological stratum in a mountain hundreds of miles from the ocean, he inferred that the land was formed by the erosion of the mountains and by deposition of silt.Georgius Agricola (1494–1555) published his groundbreaking work De Natura Fossilium in 1546 and is seen as the founder of geology as a scientific discipline.Nicolas Steno (1638–1686) is credited with the law of superposition, the principle of original horizontality, and the principle of lateral continuity: three defining principles of stratigraphy.
The word geology was first used by Ulisse Aldrovandi in 1603, then by Jean-André Deluc in 1778 and introduced as a fixed term by Horace-Bénédict de Saussure in 1779. The word is derived from the Greek γῆ, gê, meaning "earth" and λόγος, logos, meaning "speech". But according to another source, the word "geology" comes from a Norwegian, Mikkel Pedersøn Escholt (1600–1669), who was a priest and scholar. Escholt first used the definition in his book titled, Geologia Norvegica (1657).William Smith (1769–1839) drew some of the first geological maps and began the process of ordering rock strata (layers) by examining the fossils contained in them.In 1763, Mikhail Lomonosov published his treatise On the Strata of Earth. His work was the first narrative of modern geology, based on the unity of processes in time and explanation of the Earth's past from the present.James Hutton (1726–1797) is often viewed as the first modern geologist. In 1785 he presented a paper entitled Theory of the Earth to the Royal Society of Edinburgh. In his paper, he explained his theory that the Earth must be much older than had previously been supposed to allow enough time for mountains to be eroded and for sediments to form new rocks at the bottom of the sea, which in turn were raised up to become dry land. Hutton published a two-volume version of his ideas in 1795.Followers of Hutton were known as Plutonists because they believed that some rocks were formed by vulcanism, which is the deposition of lava from volcanoes, as opposed to the Neptunists, led by Abraham Werner, who believed that all rocks had settled out of a large ocean whose level gradually dropped over time.
The first geological map of the U.S. was produced in 1809 by William Maclure. In 1807, Maclure commenced the self-imposed task of making a geological survey of the United States. Almost every state in the Union was traversed and mapped by him, the Allegheny Mountains being crossed and recrossed some 50 times. The results of his unaided labours were submitted to the American Philosophical Society in a memoir entitled Observations on the Geology of the United States explanatory of a Geological Map, and published in the Society's Transactions, together with the nation's first geological map. This antedates William Smith's geological map of England by six years, although it was constructed using a different classification of rocks.
Sir Charles Lyell (1797–1875) first published his famous book, Principles of Geology, in 1830. This book, which influenced the thought of Charles Darwin, successfully promoted the doctrine of uniformitarianism. This theory states that slow geological processes have occurred throughout the Earth's history and are still occurring today. In contrast, catastrophism is the theory that Earth's features formed in single, catastrophic events and remained unchanged thereafter. Though Hutton believed in uniformitarianism, the idea was not widely accepted at the time.
Much of 19th-century geology revolved around the question of the Earth's exact age. Estimates varied from a few hundred thousand to billions of years. By the early 20th century, radiometric dating allowed the Earth's age to be estimated at two billion years. The awareness of this vast amount of time opened the door to new theories about the processes that shaped the planet.
Some of the most significant advances in 20th-century geology have been the development of the theory of plate tectonics in the 1960s and the refinement of estimates of the planet's age. Plate tectonics theory arose from two separate geological observations: seafloor spreading and continental drift. The theory revolutionized the Earth sciences. Today the Earth is known to be approximately 4.5 billion years old.

			
			
		
		
			
			
		
		
			
			
		
		
			
			
		
		
			
			
		


== Fields or related disciplines ==


== See also ==


== References ==


== External links ==

One Geology: This interactive geological map of the world is an international initiative of the geological surveys around the globe. This groundbreaking project was launched in 2007 and contributed to the 'International Year of Planet Earth', becoming one of their flagship projects. 
Earth Science News, Maps, Dictionary, Articles, Jobs
American Geophysical Union
American Geosciences Institute
European Geosciences Union
Geological Society of America
Geological Society of London
Video-interviews with famous geologists
Geology OpenTextbook
Chronostratigraphy benchmarks